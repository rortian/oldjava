<html><head><title>Class PushbackInputStream</title></head>
<!--Intermediate split file from a FrameMaker file-->
<body bgcolor=#ffffff>

<pre><a href="javabooa.htm">Packages</a>  <a href="javac.htm">This Package</a>  <a href="javad4.htm">Prev</a>  <a href="javad6.htm">Next</a>  <a href="javabook.htm">Index</a>  </pre>


<hr>
<a name="7506"><h1>	&#167;2.19 Class PushbackInputStream</h1></a>
<pre>public &#32;class &#32;java.io.<strong>PushbackInputStream
</strong>    extends &#32;java.io.<strong>FilterInputStream</strong> &#32;<a href="javaa11.htm#4538">(I-&#167;2.11)</a>
{
 &#32; &#32; &#32; &#32;// Fields
    protected int <strong>pushBack</strong>;	<a href="javad5.htm#7572">&#167;2.19.1</a>

 &#32; &#32; &#32; &#32;// Constructors
    public <strong>PushbackInputStream</strong>(InputStream &#32;in);	<a href="javad5.htm#7588">&#167;2.19.2</a>

 &#32; &#32; &#32; &#32;// Methods
    public int <strong>available</strong>();	<a href="javad5.htm#7610">&#167;2.19.3</a>
    public boolean <strong>markSupported</strong>();	<a href="javad5.htm#7638">&#167;2.19.4</a>
    public int <strong>read</strong>();	<a href="javad5.htm#7664">&#167;2.19.5</a>
    public int <strong>read</strong>(byte &#32;bytes[], int &#32;offset, int length);	<a href="javad5.htm#7700">&#167;2.19.6</a>
    public void <strong>unread</strong>(int &#32;ch);	<a href="javad5.htm#7764">&#167;2.19.7</a>
}
</pre><a name="30191">This class is an input stream filter that provides a one-byte push back buffer. This feature 
allows an application to "unread" the last character that it read. The next time that a read is 
performed on the input stream filter, the "unread" character is re-read.
</a><p><a name="39255">This functionality is useful in situations where it is useful for a fragment of code to read an 
indefinite number of data bytes that are delimited by particular byte values; after reading 
the terminating byte, the code fragment can "unread" it, so that the next read operation on 
the input stream will re-read the byte that was pushed back.
</a><p>
<hr>
<a name="7564"><h2>
<img src="images/fields.gif" width=153 height=38 alt="Fields"></h2></a>


<META NAME="keywords" CONTENT="pushBack">
<a name="7572"><h3>pushBack
</h3></a>
<a name="7574"><code>protected int pushBack
</code></a>
<dl>
<dd><a name="7576">A character that has been "unread" and that will be the next byte read. The 
value -1 indicates no character in the buffer.
<pre>
</pre></a>
</dl>
<hr>
<a name="7580"><h2>
<img src="images/constrct.gif" width=231 height=38 alt="Constructors"></h2></a>


<META NAME="keywords" CONTENT="PushbackInputStream">
<a name="7588"><h3>PushbackInputStream
</h3></a>
<a name="7590"><code>public PushbackInputStream(InputStream &#32;in)
</code></a>
<dl>
<dd><a name="30211">Constructs a new pushback input stream that reads its input from the specified input stream.
<pre>
</pre></a>
<dl>
<dt><a name="7594"><b>Parameters:
</b></a><dd><a name="7596"><code>in
- </code></a><a name="7598">the underlying input stream
</a>
</dl></dl>
<hr>
<a name="7600"><h2>
<img src="images/methods.gif" width=151 height=38 alt="Methods"></h2></a>


<META NAME="keywords" CONTENT="available">
<a name="7610"><h3>available
</h3></a>
<a name="7612"><code>public int available()
</code></a>
<a name="7614"><code>throws IOException
</code></a>
<dl>
<dd><a name="35470">Determines the number of bytes that can be read from this input stream 
without blocking.
<pre>
</pre></a>

<dd><a name="30218">The available method of PushbackInputStream calls the available method of its 
underlying input stream <a href="javaa11.htm#4628">(I-&#167;2.11.1)</a>; it returns that value if there is no character that has been pushed back, or that value plus one if there is a character that has been pushed back.
<pre>
</pre></a>
<dl>
<dt><a name="30222"><b>Returns:
</b></a><dd><a name="30223">the number of bytes that can be read from the input stream without 
blocking.
</a>

<dt><a name="7622"><b>Overrides:
</b></a><dd><a name="7628">available in class FilterInputStream &#32;<a href="javaa11.htm#4666">(I-&#167;2.11.3)</a>.
</a>

<dt><a name="38537"><b>Throws
</b></a><dd><a name="38541">IOException &#32;<a href="javaa15.htm#10278">(I-&#167;2.29)</a>
</a>
<dd><a name="38542">If an I/O error occurs.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="markSupported">
<a name="7638"><h3>markSupported
</h3></a>
<a name="7640"><code>public boolean markSupported()
</code></a>
<dl>
<dd><a name="31269">Determines if the input stream supports the mark <a href="javaa13.htm#5458">(I-&#167;2.13.4)</a> and reset 
<a href="javaa13.htm#5602">(I-&#167;2.13.9)</a> methods. The markSupported method of PushbackInputStream 
always returns false.
<pre>
</pre></a>
<dl>
<dt><a name="31273"><b>Returns:
</b></a><dd><a name="31274">true if this stream type supports the mark and and reset methods; false 
otherwise.
</a>

<dt><a name="7648"><b>Overrides:
</b></a><dd><a name="7654">markSupported in class FilterInputStream &#32;<a href="javaa11.htm#4756">(I-&#167;2.11.6)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="read">
<a name="7664"><h3>read
</h3></a>
<a name="7666"><code>public int read()
</code></a>
<a name="7668"><code>throws IOException
</code></a>
<dl>
<dd><a name="36761">Reads the next byte of data from this input stream. The value byte is 
returned as an int in the range 0 to 255. If no byte is available because the 
end of the stream has been reached, the value -1 is returned. This method 
blocks until either input data is available, the end of the stream is detected, 
or an exception is thrown.
<pre>
</pre></a>

<dd><a name="31285">The read method of PushbackInputStream returns the just pushed-back character, if there is one, and otherwise calls the the read method of its underlying input stream <a href="javaa13.htm#5496">(I-&#167;2.13.6)</a> and returns whatever value that method 
returns.
<pre>
</pre></a>
<dl>
<dt><a name="31289"><b>Returns:
</b></a><dd><a name="31290">the next byte of data, or -1 if the end of the stream is reached.
</a>

<dt><a name="7676"><b>Throws
</b></a><dd><a name="7682">IOException &#32;<a href="javaa15.htm#10278">(I-&#167;2.29)</a>
</a>
<dd><a name="7684">If an I/O error occurs.
</a>

<dt><a name="7686"><b>Overrides:
</b></a><dd><a name="7692">read in class FilterInputStream &#32;<a href="javaa11.htm#4782">(I-&#167;2.11.7)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="read">
<a name="7700"><h3>read
</h3></a>
<a name="7702"><code>public int read(byte &#32;bytes[], int &#32;offset, int &#32;length)
</code></a>
<a name="7704"><code>throws IOException
</code></a>
<dl>
<dd><a name="31305">Reads up to len bytes of data from this input stream into an array of bytes. 
This method blocks until at least one byte of input is available.
<pre>
</pre></a>
<dl>
<dt><a name="31310"><b>Parameters:
</b></a><dd><a name="31311"><code>b
- </code></a><a name="31312">the buffer into which the data is read
</a>
<dd><a name="31313"><code>off
- </code></a><a name="31314">the start offset of the data
</a>
<dd><a name="31315"><code>len
- </code></a><a name="31316">the maximum number of bytes read
</a>

<dt><a name="31317"><b>Returns:
</b></a><dd><a name="31318">the total number of bytes read into the buffer, or -1 is there is no more 
data because the end of the stream has been reached.
</a>

<dt><a name="7738"><b>Throws
</b></a><dd><a name="7744">IOException &#32;<a href="javaa15.htm#10278">(I-&#167;2.29)</a>
</a>
<dd><a name="7746">If an I/O error occurs.
</a>

<dt><a name="7748"><b>Overrides:
</b></a><dd><a name="7754">read in class FilterInputStream &#32;<a href="javaa11.htm#4860">(I-&#167;2.11.9)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="unread">
<a name="7764"><h3>unread
</h3></a>
<a name="7766"><code>public void unread(int &#32;ch)
</code></a>
<a name="7768"><code>throws IOException
</code></a>
<dl>
<dd><a name="7770">Pushes back a character so that it is read again by the next call to the read 
method on this input stream.
<pre>
</pre></a>
<dl>
<dt><a name="7772"><b>Parameters:
</b></a><dd><a name="7774"><code>ch
- </code></a><a name="7776">the character to push back.
</a>

<dt><a name="7778"><b>Throws
</b></a><dd><a name="7784">IOException &#32;<a href="javaa15.htm#10278">(I-&#167;2.29)</a>
</a>
<dd><a name="7786">If the application attempts to push back a character before the previously pushed back character has been read.
</a>
</dl></dl>

<hr>
<!-- This inserts footnotes--><p>
<pre><a href="javabooa.htm">Packages</a>  <a href="javac.htm">This Package</a>  <a href="javad4.htm">Prev</a>  <a href="javad6.htm">Next</a>  <a href="javabook.htm">Index</a></pre>
<font size=-1>Java API Document (HTML generated by dkramer on April 22, 1996)<br>
<a href="copyrigh.htm">Copyright &#169 1996 Sun Microsystems, Inc.</a>
All rights reserved<br>
Please send any comments or corrections to <a href="mailto:doug.kramer@sun.com"-->doug.kramer@sun.com</a>
</font>
</body></html>
