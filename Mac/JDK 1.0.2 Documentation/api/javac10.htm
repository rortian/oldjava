<html><head><title>Class Vector</title></head>
<!--Intermediate split file from a FrameMaker file-->
<body bgcolor=#ffffff>

<pre><a href="javabooa.htm">Packages</a>  <a href="javae.htm">This Package</a>  <a href="javae9.htm">Prev</a>  <a href="javac11.htm">Next</a>  <a href="javabook.htm">Index</a>  </pre>


<hr>
<a name="3748"><h1>	&#167;3.10 Class Vector</h1></a>
<pre>public &#32;class &#32;java.util.<strong>Vector
</strong>    extends &#32;java.lang.<strong>Object</strong> &#32;<a href="java3.htm#5914">(I-&#167;1.12)</a>
    implements java.lang.<strong>Cloneable</strong> &#32;<a href="javab4.htm#45621">(I-&#167;1.22)</a>
{
 &#32; &#32; &#32; &#32;// Fields
    protected int <strong>capacityIncrement</strong>;	<a href="javac10.htm#3960">&#167;3.10.1</a>
    protected int <strong>elementCount</strong>;	<a href="javac10.htm#3972">&#167;3.10.2</a>
    protected Object <strong>elementData</strong>[];	<a href="javac10.htm#3984">&#167;3.10.3</a>

 &#32; &#32; &#32; &#32;// Constructors
    public <strong>Vector</strong>();	<a href="javac10.htm#4000">&#167;3.10.4</a>
    public <strong>Vector</strong>(int &#32;initialCapacity);	<a href="javac10.htm#4012">&#167;3.10.5</a>
    public <strong>Vector</strong>(int &#32;initialCapacity, 	<a href="javac10.htm#4030">&#167;3.10.6</a>
     &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;capacityIncrement);

 &#32; &#32; &#32; &#32;// Methods
    public final void <strong>addElement</strong>(Object &#32;obj);	<a href="javac10.htm#4056">&#167;3.10.7</a>
    public final int <strong>capacity</strong>();	<a href="javac10.htm#4076">&#167;3.10.8</a>
    public Object <strong>clone</strong>();	<a href="javac10.htm#27878">&#167;3.10.9</a>
    public final boolean <strong>contains</strong>(Object &#32;elem);	<a href="javac10.htm#4120">&#167;3.10.10</a>
    public final void <strong>copyInto</strong>(Object &#32;anArray[]);	<a href="javac10.htm#4144">&#167;3.10.11</a>
    public final Object <strong>elementAt</strong>(int &#32;index);	<a href="javac10.htm#4164">&#167;3.10.12</a>
    public final Enumeration <strong>elements</strong>();	<a href="javac10.htm#4198">&#167;3.10.13</a>
    public final void <strong>ensureCapacity</strong>(int &#32;minCapacity)	<a href="javac10.htm#4216">&#167;3.10.14</a>
    public final Object <strong>firstElement</strong>();	<a href="javac10.htm#4236">&#167;3.10.15</a>
    public final int <strong>indexOf</strong>(Object &#32;elem);	<a href="javac10.htm#4264">&#167;3.10.16</a>
    public final int <strong>indexOf</strong>(Object &#32;elem, int &#32;index);	<a href="javac10.htm#30788">&#167;3.10.17</a>
    public final void <strong>insertElementAt</strong>(Object &#32;obj, int &#32;index);	<a href="javac10.htm#4314">&#167;3.10.18</a>
    public final boolean <strong>isEmpty</strong>();	<a href="javac10.htm#4348">&#167;3.10.19</a>
    public final Object <strong>lastElement</strong>();	<a href="javac10.htm#4366">&#167;3.10.20</a>
    public final int <strong>lastIndexOf</strong>(Object &#32;elem);	<a href="javac10.htm#4394">&#167;3.10.21</a>
    public final int <strong>lastIndexOf</strong>(Object &#32;elem, int &#32;index);	<a href="javac10.htm#4416">&#167;3.10.22</a>
 &#32; &#32;public final void <strong>removeAllElements</strong>();	<a href="javac10.htm#4444">&#167;3.10.23</a>
    public final boolean <strong>removeElement</strong>(Object &#32;obj);	<a href="javac10.htm#4458">&#167;3.10.24</a>
    public final void <strong>removeElementAt</strong>(int &#32;index);	<a href="javac10.htm#4482">&#167;3.10.25</a>
    public final void <strong>setElementAt</strong>(Object &#32;obj, int &#32;index);	<a href="javac10.htm#4512">&#167;3.10.26</a>
    public final void <strong>setSize</strong>(int &#32;newSize);	<a href="javac10.htm#4546">&#167;3.10.27</a>
    public final int <strong>size</strong>();	<a href="javac10.htm#4566">&#167;3.10.28</a>
    public final String <strong>toString</strong>();	<a href="javac10.htm#4584">&#167;3.10.29</a>
    public final void <strong>trimToSize</strong>();	<a href="javac10.htm#4610">&#167;3.10.30</a>
}
</pre><a name="31158">The Vector class implements a growable array of objects. Like an array, it contains components that can be accessed using an integer index. However, the size of a Vector can grow or 
shrink as needed to accommodate adding and removing items after the Vector has been created.
</a><p><a name="3950">Each vector tries to optimize storage management by maintaining a capacity and a capacityIncrement. The capacity is always at least as large as the vector size; it is usually larger 
because as components are added to the vector, the vector's storage increases in chunks the 
size of capacityIncrement. An application can increase the capacity of a vector before inserting a large number of components; this reduces the amount of incremental reallocation.
</a><p>
<hr>
<a name="3952"><h2>
<img src="images/fields.gif" width=153 height=38 alt="Fields"></h2></a>


<META NAME="keywords" CONTENT="capacityIncrement">
<a name="3960"><h3>capacityIncrement
</h3></a>
<a name="3962"><code>protected int capacityIncrement
</code></a>
<dl>
<dd><a name="3964">The amount by which the capacity of the vector is automatically incremented when its size becomes greater than its capacity. If the capacity is 0, 
the capacity of the vector is doubled each time it needs to grow.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="elementCount">
<a name="3972"><h3>elementCount
</h3></a>
<a name="3974"><code>protected int elementCount
</code></a>
<dl>
<dd><a name="3976">The number of valid components in the vector.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="elementData">
<a name="3984"><h3>elementData
</h3></a>
<a name="3986"><code>protected Object elementData[]
</code></a>
<dl>
<dd><a name="3988">The array buffer into which the components of the vector are stored. The 
length of this array buffer is the (current) capacity of the vector.
<pre>
</pre></a>
</dl>
<hr>
<a name="3992"><h2>
<img src="images/constrct.gif" width=231 height=38 alt="Constructors"></h2></a>


<META NAME="keywords" CONTENT="Vector">
<a name="4000"><h3>Vector
</h3></a>
<a name="4002"><code>public Vector()
</code></a>
<dl>
<dd><a name="4004">Constructs an empty vector.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="Vector">
<a name="4012"><h3>Vector
</h3></a>
<a name="4014"><code>public Vector(int &#32;initialCapacity)
</code></a>
<dl>
<dd><a name="4016">Constructs an empty vector. It initial capacity is the specified argument 
size.
<pre>
</pre></a>
<dl>
<dt><a name="4018"><b>Parameters:
</b></a><dd><a name="4020"><code>initialCapacity
- </code></a><a name="4022">the initial capacity of the vector
</a>
</dl></dl>

<META NAME="keywords" CONTENT="Vector">
<a name="4030"><h3>Vector
</h3></a>
<a name="4032"><code>public Vector(int &#32;initialCapacity, int &#32;capacityIncrement)
</code></a>
<dl>
<dd><a name="4034">Constructs an empty vector with the specified capacity and the specified 
capacity increment.
<pre>
</pre></a>
<dl>
<dt><a name="4036"><b>Parameters:
</b></a><dd><a name="4038"><code>initialCapacity
- </code></a><a name="4040">the initial capacity of the vector
</a>
<dd><a name="4042"><code>capacityIncrement
- </code></a><a name="4044">the amount by which the capacity is increased when 
the vector overflows.
</a>
</dl></dl>
<hr>
<a name="4046"><h2>
<img src="images/methods.gif" width=151 height=38 alt="Methods"></h2></a>


<META NAME="keywords" CONTENT="addElement">
<a name="4056"><h3>addElement
</h3></a>
<a name="4058"><code>public final void addElement(Object &#32;obj)
</code></a>
<dl>
<dd><a name="4060">Adds the specified component to the end of this vector, increasing its size 
by one. The capacity of this vector is increased if its size becomes greater 
than its capacity.
<pre>
</pre></a>
<dl>
<dt><a name="4062"><b>Parameters:
</b></a><dd><a name="4064"><code>obj
- </code></a><a name="4066">the component to be added
</a>
</dl></dl>

<META NAME="keywords" CONTENT="capacity">
<a name="4076"><h3>capacity
</h3></a>
<a name="4078"><code>public final int capacity()
</code></a>
<dl><dl>
<dt><a name="27872"><b>Returns:
</b></a><dd><a name="27873">the current capacity of this vector.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="clone">
<a name="27878"><h3>clone
</h3></a>
<a name="27879"><code>public Object clone()
</code></a>
<dl><dl>
<dt><a name="28638"><b>Returns:
</b></a><dd><a name="4102">a clone of this vector.
</a>

<dt><a name="4104"><b>Overrides:
</b></a><dd><a name="4110">clone() in class Object &#32;<a href="java3.htm#26164">(I-&#167;1.12.2)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="contains">
<a name="4120"><h3>contains
</h3></a>
<a name="4122"><code>public final boolean contains(Object &#32;elem)
</code></a>
<dl><dl>
<dt><a name="4126"><b>Parameters:
</b></a><dd><a name="4128"><code>elem
- </code></a><a name="4130">an object
</a>

<dt><a name="4132"><b>Returns:
</b></a><dd><a name="4134">true if the specified object is an component in this vector; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="copyInto">
<a name="4144"><h3>copyInto
</h3></a>
<a name="4146"><code>public final void copyInto(Object &#32;anArray[])
</code></a>
<dl>
<dd><a name="4148">Copies the components of this vector into the specified array. The array 
must be big enough to hold all the objects in this vector.
<pre>
</pre></a>
<dl>
<dt><a name="4150"><b>Parameters:
</b></a><dd><a name="4152"><code>anArray
- </code></a><a name="4154">the array into which the components get copied.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="elementAt">
<a name="4164"><h3>elementAt
</h3></a>
<a name="4166"><code>public final Object elementAt(int &#32;index)
</code></a>
<dl><dl>
<dt><a name="4170"><b>Parameters:
</b></a><dd><a name="4172"><code>index
- </code></a><a name="4174">an index into this vector
</a>

<dt><a name="4176"><b>Returns:
</b></a><dd><a name="4178">the component at the specified index.
</a>

<dt><a name="4180"><b>Throws
</b></a><dd><a name="4186">ArrayIndexOutOfBoundsException &#32;<a href="javab7.htm#43280">(I-&#167;1.25)</a>
</a>
<dd><a name="4188">If an invalid index was given.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="elements">
<a name="4198"><h3>elements
</h3></a>
<a name="4200"><code>public final Enumeration elements()
</code></a>
<dl><dl>
<dt><a name="4204"><b>Returns:
</b></a><dd><a name="4206">an enumeration <a href="javac11.htm#29289">(I-&#167;3.11)</a> of the components of this vector.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="ensureCapacity">
<a name="4216"><h3>ensureCapacity
</h3></a>
<a name="4218"><code>public final void ensureCapacity(int &#32;minCapacity)
</code></a>
<dl>
<dd><a name="4220">Increases the capacity of this vector, if necessary, to ensure that it can hold 
at least the number of components specified by the minimum capacity 
argument.
<pre>
</pre></a>
<dl>
<dt><a name="4222"><b>Parameters:
</b></a><dd><a name="4224"><code>minCapacity
- </code></a><a name="4226">the desired minimum capacity
</a>
</dl></dl>

<META NAME="keywords" CONTENT="firstElement">
<a name="4236"><h3>firstElement
</h3></a>
<a name="4238"><code>public final Object firstElement()
</code></a>
<dl><dl>
<dt><a name="4242"><b>Returns:
</b></a><dd><a name="4244">the first component of this vector.
</a>

<dt><a name="4246"><b>Throws
</b></a><dd><a name="4252">NoSuchElementException &#32;<a href="javac14.htm#4690">(I-&#167;3.14)</a>
</a>
<dd><a name="4254">If this vector has no components.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="indexOf">
<a name="4264"><h3>indexOf
</h3></a>
<a name="4266"><code>public final int indexOf(Object &#32;elem)
</code></a>
<dl><dl>
<dt><a name="4270"><b>Parameters:
</b></a><dd><a name="4272"><code>elem
- </code></a><a name="4274">an object
</a>

<dt><a name="4276"><b>Returns:
</b></a><dd><a name="30784">the index of the first occurrence of the argument in this vector; returns 
-1 if the object is not found.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="indexOf">
<a name="30788"><h3>indexOf
</h3></a>
<a name="4288"><code>public final int indexOf(Object &#32;elem, int &#32;index)
</code></a>
<dl><dl>
<dt><a name="4292"><b>Parameters:
</b></a><dd><a name="4294"><code>elem
- </code></a><a name="4296">an object
</a>
<dd><a name="4298"><code>index
- </code></a><a name="4300">the index where to start searching
</a>

<dt><a name="4302"><b>Returns:
</b></a><dd><a name="27953">the index of the first occurrence of the object argument in thisn vector 
at position index or later in the vector; returns -1 if the object is not 
found.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="insertElementAt">
<a name="4314"><h3>insertElementAt
</h3></a>
<a name="4316"><code>public final void insertElementAt(Object &#32;obj, int &#32;index)
</code></a>
<dl>
<dd><a name="4318">Inserts the specified object as an component in this vector at the specified 
index. Each component in this vector with an index greater or equal to the 
specified index is shifted upward to have an index one greater than the 
value it had previously. 
<pre>
</pre></a>

<dd><a name="27972">The index must be a value greater than or equal to 0 and less than or equal 
to the current size <a href="javac10.htm#4566">(I-&#167;3.10.28)</a> of the vector.
<pre>
</pre></a>
<dl>
<dt><a name="4320"><b>Parameters:
</b></a><dd><a name="4322"><code>obj
- </code></a><a name="4324">the component to insert
</a>
<dd><a name="4326"><code>index
- </code></a><a name="4328">where to insert the new component
</a>

<dt><a name="4330"><b>Throws
</b></a><dd><a name="4336">ArrayIndexOutOfBoundsException &#32;<a href="javab7.htm#43280">(I-&#167;1.25)</a>
</a>
<dd><a name="4338">If the index was invalid.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isEmpty">
<a name="4348"><h3>isEmpty
</h3></a>
<a name="4350"><code>public final boolean isEmpty()
</code></a>
<dl><dl>
<dt><a name="4354"><b>Returns:
</b></a><dd><a name="4356">true if this vector has no components; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="lastElement">
<a name="4366"><h3>lastElement
</h3></a>
<a name="4368"><code>public final Object lastElement()
</code></a>
<dl><dl>
<dt><a name="4372"><b>Returns:
</b></a><dd><a name="4374">the last component of the vector, i.e. the component at index 
<img src="javaad4.gif">.
</a>

<dt><a name="4376"><b>Throws
</b></a><dd><a name="4382">NoSuchElementException &#32;<a href="javac14.htm#4690">(I-&#167;3.14)</a>
</a>
<dd><a name="4384">If this vector is empty.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="lastIndexOf">
<a name="4394"><h3>lastIndexOf
</h3></a>
<a name="4396"><code>public final int lastIndexOf(Object &#32;elem)
</code></a>
<dl><dl>
<dt><a name="4400"><b>Parameters:
</b></a><dd><a name="4402"><code>elem
- </code></a><a name="4404">the desired component
</a>

<dt><a name="4406"><b>Returns:
</b></a><dd><a name="28659">the index of the last occurrence of the argument in this vector; returns 
-1 if the object is not found.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="lastIndexOf">
<a name="4416"><h3>lastIndexOf
</h3></a>
<a name="4418"><code>public final int lastIndexOf(Object &#32;elem, int &#32;index)
</code></a>
<dl>
<dd><a name="28002">Searches backwards for the specified object, starting from the specified 
index and returns an index to it.
<pre>
</pre></a>
<dl>
<dt><a name="4422"><b>Parameters:
</b></a><dd><a name="4424"><code>elem
- </code></a><a name="4426">the desired component
</a>
<dd><a name="4428"><code>index
- </code></a><a name="4430">the index where to start searching
</a>

<dt><a name="4432"><b>Returns:
</b></a><dd><a name="28667">the index of the last occurrence of the object argument in this vector at 
position less than index in the vector; returns -1 if the object is not 
found.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="removeAllElements">
<a name="4444"><h3>removeAllElements
</h3></a>
<a name="4446"><code>public final void removeAllElements()
</code></a>
<dl>
<dd><a name="4448">Removes all components from this vector and sets its size to zero.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="removeElement">
<a name="4458"><h3>removeElement
</h3></a>
<a name="4460"><code>public final boolean removeElement(Object &#32;obj)
</code></a>
<dl>
<dd><a name="4462">Removes the first occurrence of the argument from this vector. If the 
object is found in this vector, each component in the vector with an index 
greater or equal to the object's index is shifted downward to have an index 
one smaller than the value it had previously
<pre>
</pre></a>
<dl>
<dt><a name="4464"><b>Parameters:
</b></a><dd><a name="4466"><code>obj
- </code></a><a name="4468">the component to be removed
</a>

<dt><a name="4470"><b>Returns:
</b></a><dd><a name="4472">true if the argument was a component of this vector; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="removeElementAt">
<a name="4482"><h3>removeElementAt
</h3></a>
<a name="4484"><code>public final void removeElementAt(int &#32;index)
</code></a>
<dl>
<dd><a name="4486">Deletes the component at the specified index. Each component in this vector with an index greater or equal to the specified index is shifted downward to have an index one smaller than the value it had previously.
<pre>
</pre></a>

<dd><a name="28029">The index must be a value greater than or equal to 0 and less than the current size <a href="javac10.htm#4566">(I-&#167;3.10.28)</a> of the vector.
<pre>
</pre></a>
<dl>
<dt><a name="4488"><b>Parameters:
</b></a><dd><a name="4490"><code>index
- </code></a><a name="4492">the index of the object to remove
</a>

<dt><a name="4494"><b>Throws
</b></a><dd><a name="4500">ArrayIndexOutOfBoundsException &#32;<a href="javab7.htm#43280">(I-&#167;1.25)</a>
</a>
<dd><a name="4502">If the index was invalid.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="setElementAt">
<a name="4512"><h3>setElementAt
</h3></a>
<a name="4514"><code>public final void setElementAt(Object &#32;obj, int &#32;index)
</code></a>
<dl>
<dd><a name="4516">Sets the component at the specified index of this vector to be the specified 
object. The previous component at that position is discarded.
<pre>
</pre></a>

<dd><a name="28035">The index must be a value greater than or equal to 0 and less than the current size <a href="javac10.htm#4566">(I-&#167;3.10.28)</a> of the vector.
<pre>
</pre></a>
<dl>
<dt><a name="4518"><b>Parameters:
</b></a><dd><a name="4520"><code>obj
- </code></a><a name="4522">what the component is to be set to
</a>
<dd><a name="4524"><code>index
- </code></a><a name="4526">the specified index
</a>

<dt><a name="4528"><b>Throws
</b></a><dd><a name="4534">ArrayIndexOutOfBoundsException &#32;<a href="javab7.htm#43280">(I-&#167;1.25)</a>
</a>
<dd><a name="4536">If the index was invalid.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="setSize">
<a name="4546"><h3>setSize
</h3></a>
<a name="4548"><code>public final void setSize(int &#32;newSize)
</code></a>
<dl>
<dd><a name="4550">Sets the size of this vector. If the new size is greater than the current size, 
new null items are added to the end of the vector. If the new size is less 
than the current size, all components at index newSize and greater are discarded
<pre>
</pre></a>
<dl>
<dt><a name="4552"><b>Parameters:
</b></a><dd><a name="4554"><code>newSize
- </code></a><a name="4556">the new size of this vector
</a>
</dl></dl>

<META NAME="keywords" CONTENT="size">
<a name="4566"><h3>size
</h3></a>
<a name="4568"><code>public final int size()
</code></a>
<dl><dl>
<dt><a name="30048"><b>Returns:
</b></a><dd><a name="4574">the number of components in this vector.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="toString">
<a name="4584"><h3>toString
</h3></a>
<a name="4586"><code>public final String toString()
</code></a>
<dl>
<dd><a name="4590">Creates a string representation of this vector.
<pre>
</pre></a>
<dl>
<dt><a name="30803"><b>Returns:
</b></a><dd><a name="4592">a string representation of this vector.
</a>

<dt><a name="4594"><b>Overrides:
</b></a><dd><a name="4600">toString in class Object &#32;<a href="java3.htm#6228">(I-&#167;1.12.9)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="trimToSize">
<a name="4610"><h3>trimToSize
</h3></a>
<a name="4612"><code>public final void trimToSize()
</code></a>
<dl>
<dd><a name="28088">Trims the capacity of this vector to be the vector's current size 
<a href="javac10.htm#4566">(I-&#167;3.10.28)</a>. An application can use this operation to minimize the storage 
of a vector.
<pre>
</pre></a>
</dl><!--"RightPage" is inserted just before the classes begin.  Don't convert its text.-->
<!--Forces heading to right page-->

<hr>
<!-- This inserts footnotes--><p>
<pre><a href="javabooa.htm">Packages</a>  <a href="javae.htm">This Package</a>  <a href="javae9.htm">Prev</a>  <a href="javac11.htm">Next</a>  <a href="javabook.htm">Index</a></pre>
<font size=-1>Java API Document (HTML generated by dkramer on April 22, 1996)<br>
<a href="copyrigh.htm">Copyright &#169 1996 Sun Microsystems, Inc.</a>
All rights reserved<br>
Please send any comments or corrections to <a href="mailto:doug.kramer@sun.com"-->doug.kramer@sun.com</a>
</font>
</body></html>
