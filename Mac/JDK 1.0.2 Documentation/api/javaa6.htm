<html><head><title>Class Double</title></head>
<!--Intermediate split file from a FrameMaker file-->
<body bgcolor=#ffffff>

<pre><a href="javabooa.htm">Packages</a>  <a href="java.htm">This Package</a>  <a href="javaa5.htm">Prev</a>  <a href="javaa7.htm">Next</a>  <a href="javabook.htm">Index</a>  </pre>


<hr>
<a name="2250"><h1>	&#167;1.6 Class Double</h1></a>
<pre>public &#32;final &#32;class &#32;java.lang.<strong>Double
</strong>    extends &#32;java.lang.<strong>Number</strong> &#32;<a href="java2.htm#5764">(I-&#167;1.11)</a>
{
 &#32; &#32; &#32; &#32;// Fields
    public final static double <strong>MAX_VALUE</strong>;	<a href="javaa6.htm#2406">&#167;1.6.1</a>
    public final static double <strong>MIN_VALUE</strong>;	<a href="javaa6.htm#2418">&#167;1.6.2</a>
    public final static double <strong>NaN</strong>;	<a href="javaa6.htm#2430">&#167;1.6.3</a>
    public final static double <strong>NEGATIVE_INFINITY</strong>;	<a href="javaa6.htm#2442">&#167;1.6.4</a>
 &#32; &#32;public final static double <strong>POSITIVE_INFINITY</strong>;	<a href="javaa6.htm#2454">&#167;1.6.5</a>

 &#32; &#32; &#32; &#32;// Constructors
    public <strong>Double</strong>(double &#32;value);	<a href="javaa6.htm#2470">&#167;1.6.6</a>
    public <strong>Double</strong>(String &#32;s);	<a href="javaa6.htm#2488">&#167;1.6.7</a>

 &#32; &#32; &#32; &#32;// Methods
    public static long <strong>doubleToLongBits</strong>(double &#32;value);	<a href="javaa6.htm#2522">&#167;1.6.8</a>
    public double <strong>doubleValue</strong>();	<a href="javaa6.htm#31223">&#167;1.6.9</a>
    public boolean <strong>equals</strong>(Object &#32;obj);	<a href="javaa6.htm#2558">&#167;1.6.10</a>
    public float <strong>floatValue</strong>();	<a href="javaa6.htm#2590">&#167;1.6.11</a>
    public int <strong>hashCode</strong>();	<a href="javaa6.htm#2612">&#167;1.6.12</a>
    public int <strong>intValue</strong>();	<a href="javaa6.htm#2634">&#167;1.6.13</a>
    public boolean <strong>isInfinite</strong>();	<a href="javaa6.htm#2656">&#167;1.6.14</a>
    public static boolean <strong>isInfinite</strong>(double &#32;v);	<a href="javaa6.htm#2668">&#167;1.6.15</a>
    public boolean <strong>isNaN</strong>();	<a href="javaa6.htm#2688">&#167;1.6.16</a>
    public static boolean <strong>isNaN</strong>(double &#32;v);	<a href="javaa6.htm#2700">&#167;1.6.17</a>
    public static double <strong>longBitsToDouble</strong>(long &#32;bits);	<a href="javaa6.htm#2720">&#167;1.6.18</a>
    public long <strong>longValue</strong>();	<a href="javaa6.htm#2734">&#167;1.6.19</a>
    public String <strong>toString</strong>();	<a href="javaa6.htm#2756">&#167;1.6.20</a>
    public static String <strong>toString</strong>(double &#32;d);	<a href="javaa6.htm#2776">&#167;1.6.21</a>
    public static Double <strong>valueOf</strong>(String &#32;s);	<a href="javaa6.htm#2796">&#167;1.6.22</a>
}
</pre><a name="36886">This class wraps a value of the primitive type double in an object. An object of type Double 
contains a single field whose type is double.
</a><p><a name="36887">In addition, this class provides a number of methods for converting a double to a String and 
a String to a double, as well as other constants and methods useful when dealing with a double.
</a><p>
<hr>
<a name="30915"><h2>
<img src="images/fields.gif" width=153 height=38 alt="Fields"></h2></a>


<META NAME="keywords" CONTENT="MAX_VALUE">
<a name="2406"><h3>MAX_VALUE
</h3></a>
<a name="2408"><code>public final static double 
</code></a>
<a name="27909"><code> &#32; &#32; &#32; &#32;MAX_VALUE = 1.79769313486231570e+308d
</code></a>
<dl>
<dd><a name="29130">The largest positive value of type double.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="MIN_VALUE">
<a name="2418"><h3>MIN_VALUE
</h3></a>
<a name="2420"><code>public final static double 
</code></a>
<a name="43192"><code> &#32; &#32; &#32; &#32;MIN_VALUE = 4.94065645841246544e-324
</code></a>
<dl>
<dd><a name="29136">The smallest positive finite value of type double.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="NaN">
<a name="2430"><h3>NaN
</h3></a>
<a name="2432"><code>public final static double NaN = 0.0 / 0.0
</code></a>
<dl>
<dd><a name="29150">A Not-a-Number value of type double.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="NEGATIVE_INFINITY">
<a name="2442"><h3>NEGATIVE_INFINITY
</h3></a>
<a name="2444"><code>public final static double 
</code></a>
<a name="29158"><code> &#32; &#32; &#32; &#32;NEGATIVE_INFINITY = -1.0 / 0.0
</code></a>
<dl>
<dd><a name="29140">The negative infinity of type double. 
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="POSITIVE_INFINITY">
<a name="2454"><h3>POSITIVE_INFINITY
</h3></a>
<a name="2456"><code>public final static double 
</code></a>
<a name="43198"><code> &#32; &#32; &#32; &#32;POSITIVE_INFINITY = 1.0 / 0.0
</code></a>
<dl>
<dd><a name="43202">The positive infinity of type double. 
<pre>
</pre></a>
</dl>
<hr>
<a name="43204"><h2>
<img src="images/constrct.gif" width=231 height=38 alt="Constructors"></h2></a>


<META NAME="keywords" CONTENT="Double">
<a name="2470"><h3>Double
</h3></a>
<a name="38643"><code>public Double(double &#32;value)
</code></a>
<dl>
<dd><a name="38644">Constructs a newly allocated Double object that represents the primitive 
double argument.
<pre>
</pre></a>
<dl>
<dt><a name="38645"><b>Parameters:
</b></a><dd><a name="38646"><code>value
- </code></a><a name="2480">the value to be represented by the Double
</a>
</dl></dl>

<META NAME="keywords" CONTENT="Double">
<a name="2488"><h3>Double
</h3></a>
<a name="2490"><code>public Double(String &#32;s)
</code></a>
<a name="2492"><code>throws NumberFormatException
</code></a>
<dl>
<dd><a name="29162">Constructs a newly allocated Double object that represents the floating-
point value of type double represented by the string. The string is converted to a double value as if by the valueOf method <a href="javaa6.htm#2796">(I-&#167;1.6.22)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="2496"><b>Parameters:
</b></a><dd><a name="2498"><code>s
- </code></a><a name="2500">a string to be converted to a Double
</a>

<dt><a name="2502"><b>Throws
</b></a><dd><a name="2508">NumberFormatException &#32;<a href="java23.htm#14456">(I-&#167;1.41)</a>
</a>
<dd><a name="2510">If the string does not contain a parsable number.
</a>
</dl></dl>
<hr>
<a name="2512"><h2>
<img src="images/methods.gif" width=151 height=38 alt="Methods"></h2></a>


<META NAME="keywords" CONTENT="doubleToLongBits">
<a name="2522"><h3>doubleToLongBits
</h3></a>
<a name="2524"><code>public static long doubleToLongBits(double &#32;value)
</code></a>
<dl>
<dd><a name="29278">The result is a representation of the floating-point argument according to 
the IEEE 754 floating-point "double format" bit layout.
<pre>
</pre></a>

<dd><a name="29279">Bit 63 represents the sign of the floating-point number. Bits 62-52 represent the exponent. Bits 51-0 represent the significand (sometimes called 
the mantissa) of the floating-point number.
<pre>
</pre></a>

<dd><a name="29282">If the argument is positive infinity, the result is 0x7ff0000000000000L.
<pre>
</pre></a>

<dd><a name="31233">If the argument is negative infinity, the result is 0xfff0000000000000L.
<pre>
</pre></a>

<dd><a name="31234">If the argument is NaN, the result is 0x7ff8000000000000L.
<pre>
</pre></a>
<dl>
<dt><a name="31240"><b>Parameters:
</b></a><dd><a name="31241"><code>value
- </code></a><a name="31242">a double precision floating point number
</a>

<dt><a name="31245"><b>Returns:
</b></a><dd><a name="31246">the bits that represent the floating point number.
</a>
<a name="31243">
</a>
</dl></dl>

<META NAME="keywords" CONTENT="doubleValue">
<a name="31223"><h3>doubleValue
</h3></a>
<a name="31253"><code>public double doubleValue()
</code></a>
<dl><dl>
<dt><a name="31265"><b>Returns:
</b></a><dd><a name="31266">the double value represented by this object.
</a>

<dt><a name="31267"><b>Overrides:
</b></a><dd><a name="2548">doubleValue in class Number &#32;<a href="java2.htm#5854">(I-&#167;1.11.1)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="equals">
<a name="2558"><h3>equals
</h3></a>
<a name="2560"><code>public boolean equals(Object &#32;obj)
</code></a>
<dl>
<dd><a name="29174">The result is true if and only if the argument is not null and is a Double 
object that represents a double that has the identical bit pattern to the bit 
pattern of the double represented by this object.
<pre>
</pre></a>

<dd><a name="29175">Note that in most cases, for two instances of class Double, d1 and d2, the 
value of d1.equals(d2) is true if and only if <br>
 &#32; &#32; &#32;d1.doubleValue() == d2.longValue()<br>
also has the value true. However, there are two exceptions:
<pre>
</pre></a>
<dl><ul><li><a name="43245">If d1 and d2 both represent Double.NaN,then the equals method returns true, 
even though Double.NaN==Double.NaN has the value false. 
</a></ul><ul><li><a name="44740">If d1 represents +0.0 while d2 represents -0.0, or vice versa, the equal test has 
the value false, even though +0.0==-0.0 has the value true.
</a></ul>
<dt><a name="43246"><b>Parameters:
</b></a><dd><a name="43247"><code>obj
- </code></a><a name="2568">the object to compare with
</a>

<dt><a name="2570"><b>Returns:
</b></a><dd><a name="2572">true if the objects are the same; false otherwise.
</a>

<dt><a name="2574"><b>Overrides:
</b></a><dd><a name="2580">equals in class Object &#32;<a href="java3.htm#6068">(I-&#167;1.12.3)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="floatValue">
<a name="2590"><h3>floatValue
</h3></a>
<a name="2592"><code>public float floatValue()
</code></a>
<dl>
<dd><a name="29210"><strong>Returns</strong>:
<pre>
</pre></a>
<dl><dd><a name="31275">the double value represented by this object is converted to type 
float and the result of the conversion is returned.
</a>

<dt><a name="2596"><b>Overrides:
</b></a><dd><a name="2602">floatValue in class Number &#32;<a href="java2.htm#5868">(I-&#167;1.11.2)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="hashCode">
<a name="2612"><h3>hashCode
</h3></a>
<a name="2614"><code>public int hashCode()
</code></a>
<dl><dl>
<dt><a name="31145"><b>Returns:
</b></a><dd><a name="31146">a hash code value for this object. 
</a>

<dt><a name="2618"><b>Overrides:
</b></a><dd><a name="2624">hashCode in class Object &#32;<a href="java3.htm#6130">(I-&#167;1.12.6)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="intValue">
<a name="2634"><h3>intValue
</h3></a>
<a name="2636"><code>public int intValue()
</code></a>
<dl>
<dd><a name="29205"><strong>Returns</strong>:
<pre>
</pre></a>
<dl><dd><a name="31278">the double value represented by this object is converted to type int 
and the result of the conversion is returned.
</a>

<dt><a name="2640"><b>Overrides:
</b></a><dd><a name="2646">intValue in class Number &#32;<a href="java2.htm#5882">(I-&#167;1.11.3)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isInfinite">
<a name="2656"><h3>isInfinite
</h3></a>
<a name="2658"><code>public boolean isInfinite()
</code></a>
<dl>
<dd><a name="29274"><strong>Returns</strong>:
<pre>
</pre></a>
<dl><dd><a name="31281">true if the value represented by this object is positive infinity <a href="javaa6.htm#2454">(I-&#167;1.6.5)</a> 
or negative infinity &#32;<a href="javaa6.htm#2442">(I-&#167;1.6.4)</a>; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isInfinite">
<a name="2668"><h3>isInfinite
</h3></a>
<a name="31300"><code>public static boolean isInfinite(double &#32;v)
</code></a>
<dl><dl>
<dt><a name="44013"><b>Parameters:
</b></a><dd><a name="31305"><code>v
- </code></a><a name="31306">the value to be tested
</a>
</dl></dl><dl>
<dd><a name="31301"><strong>Returns</strong>:
<pre>
</pre></a>
<dl><dd><a name="31302">true if the value of the argument is positive infinity &#32;<a href="javaa6.htm#2454">(I-&#167;1.6.5)</a> or negative infinity &#32;<a href="javaa6.htm#2442">(I-&#167;1.6.4)</a>; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isNaN">
<a name="2688"><h3>isNaN
</h3></a>
<a name="2690"><code>public boolean isNaN()
</code></a>
<dl>
<dd><a name="31310"><strong>Returns</strong>:
<pre>
</pre></a>
<dl><dd><a name="29270">true if the value represented by this object is NaN &#32;<a href="javaa6.htm#2430">(I-&#167;1.6.3)</a>; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isNaN">
<a name="2700"><h3>isNaN
</h3></a>
<a name="2702"><code>public static boolean isNaN(double &#32;v)
</code></a>
<dl><dl>
<dt><a name="2706"><b>Parameters:
</b></a><dd><a name="2708"><code>v
- </code></a><a name="2710">the value to be tested
</a>
</dl></dl><dl>
<dd><a name="31316"><strong>Returns</strong>:
<pre>
</pre></a>
<dl><dd><a name="31317">true if the value of the argument is NaN <a href="javaa6.htm#2430">(I-&#167;1.6.3)</a>; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="longBitsToDouble">
<a name="2720"><h3>longBitsToDouble
</h3></a>
<a name="2722"><code>public static double longBitsToDouble(long &#32;bits)
</code></a>
<dl>
<dd><a name="29306">The argument is considered to be a representation of a floating-point value 
according to the IEEE 754 floating-point "double precision" bit layout. 
That floating-point value is returned as the result.
<pre>
</pre></a>

<dd><a name="29307">If the argument is 0x7f80000000000000L, the result is positive infinity.
<pre>
</pre></a>

<dd><a name="29308">If the argument is 0xff80000000000000L, the result is negative infinity.
<pre>
</pre></a>

<dd><a name="29309">If the argument is any value in the range 0x7ff0000000000001L through 
0x7fffffffffffffffL or in the range 0xfff0000000000001L through 0xffffffffffffffffL, the 
result is NaN. All IEEE 754 NaN values are, in effect, lumped together by 
the Java language into a single value.
<pre>
</pre></a>
<dl>
<dt><a name="31349"><b>Parameters:
</b></a><dd><a name="31350"><code>bits
- </code></a><a name="31351">any long integer
</a>
</dl>
<dd><a name="31352"><strong>Returns</strong>:
<pre>
</pre></a>
<dl><dd><a name="31356">the double floating-point value with the same bit pattern.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="longValue">
<a name="2734"><h3>longValue
</h3></a>
<a name="2736"><code>public long longValue()
</code></a>
<dl>
<dd><a name="31368"><strong>Returns</strong>:
<pre>
</pre></a>
<dl><dd><a name="29214">the double value represented by this object is converted to type 
long and the result of the conversion is returned.
</a>

<dt><a name="2740"><b>Overrides:
</b></a><dd><a name="2746">longValue in class Number &#32;<a href="java2.htm#5896">(I-&#167;1.11.4)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="toString">
<a name="2756"><h3>toString
</h3></a>
<a name="2758"><code>public String toString()
</code></a>
<dl>
<dd><a name="43262">The primitive double value represented by this object is converted to a 
string exactly as if by the method toString of one argument <a href="javaa6.htm#2776">(I-&#167;1.6.21)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="31374"><b>Returns:
</b></a><dd><a name="31375">a String representation of this object.
</a>

<dt><a name="2762"><b>Overrides:
</b></a><dd><a name="2768">toString in class Object &#32;<a href="java3.htm#6228">(I-&#167;1.12.9)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="toString">
<a name="2776"><h3>toString
</h3></a>
<a name="2778"><code>public static String toString(double &#32;d)
</code></a>
<dl>
<dd><a name="38887">Creates a string representation of the double argument.
<pre>
</pre></a>

<dd><a name="43267">The values NaN, NEGATIVE_INFINITY, POSITIVE_INFINITY, -0.0, and +0.0 
are represented by the strings "NaN", "-Infinity", "Infinity", "-0.0" and "0.0", 
respectively.
<pre>
</pre></a>

<dd><a name="45637">If d is in the range <img src="javaa11.gif">, then it is converted to a string in the 
style [-]ddd.ddd. Otherwise, it is converted to a string in the style 
[-]m.ddddE&#177;&#177;&#177;&#177;xx.
<pre>
</pre></a>

<dd><a name="45638">Warning to editor: I want a plus/minus symbol before the xx in the previous line. For some reason, some printers aren't printing itit. I don't completely understand
<pre>
</pre></a>

<dd><a name="38892">There is always a minimum of one digit after the decimal point. The number of digits is the minimum needed to uniquely distinguish the argument 
value from adjacent values of type double.
<pre>
</pre></a>
<dl>
<dt><a name="38893"><b>Parameters:
</b></a><dd><a name="38894"><code>d
- </code></a><a name="38895">the double to be converted
</a>

<dt><a name="38896"><b>Returns:
</b></a><dd><a name="38897">a string representation of the argument.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="valueOf">
<a name="2796"><h3>valueOf
</h3></a>
<a name="2798"><code>public static Double valueOf(String &#32;s)
</code></a>
<a name="2800"><code>throws NumberFormatException
</code></a>
<dl>
<dd><a name="2804">Parses a string into a Double.
<pre>
</pre></a>
<dl>
<dt><a name="43268"><b>Parameters:
</b></a><dd><a name="2806"><code>s
- </code></a><a name="2808">the string to be parsed
</a>

<dt><a name="38611"><b>Returns:
</b></a><dd><a name="38612">a newly constructed Double initialized to the value represented by the 
string argument..
</a>

<dt><a name="38618"><b>Throws
</b></a><dd><a name="38622">NumberFormatException &#32;<a href="java23.htm#14456">(I-&#167;1.41)</a>
</a>
<dd><a name="38623">If the string does not contain a parsable number.
</a>
</dl></dl>

<hr>
<!-- This inserts footnotes--><p>
<pre><a href="javabooa.htm">Packages</a>  <a href="java.htm">This Package</a>  <a href="javaa5.htm">Prev</a>  <a href="javaa7.htm">Next</a>  <a href="javabook.htm">Index</a></pre>
<font size=-1>Java API Document (HTML generated by dkramer on April 22, 1996)<br>
<a href="copyrigh.htm">Copyright &#169 1996 Sun Microsystems, Inc.</a>
All rights reserved<br>
Please send any comments or corrections to <a href="mailto:doug.kramer@sun.com"-->doug.kramer@sun.com</a>
</font>
</body></html>
