<html><head><title>Class BorderLayout</title></head>
<!--Intermediate split file from a FrameMaker file-->
<body bgcolor=#ffffff>

<pre><a href="javabooa.htm">Packages</a>  <a href="javag.htm">This Package</a>  <a href="javag.htm">Prev</a>  <a href="javag2.htm">Next</a>  <a href="javabook.htm">Index</a>  </pre>


<hr>
<a name="43335"><h1>	&#167;1.1 Class BorderLayout</h1></a>
<pre>public &#32;class &#32;java.awt.<strong>BorderLayout
</strong>    extends &#32;java.lang.<strong>Object</strong> &#32;<a href="java3.htm#5914">(I-&#167;1.12)</a>
    implements java.awt.<strong>LayoutManager</strong> &#32;<a href="javac16.htm#51689">(II-&#167;1.43)</a>
{
 &#32; &#32; &#32; &#32;// Constructors
    public <strong>BorderLayout</strong>();	<a href="javag1.htm#301">&#167;1.1.1</a>
    public <strong>BorderLayout</strong>(int &#32;hgap, int &#32;vgap);	<a href="javag1.htm#313">&#167;1.1.2</a>

 &#32; &#32; &#32; &#32;// Methods
    public void &#32;<strong>addLayoutComponent</strong>(String &#32;name,	<a href="javag1.htm#339">&#167;1.1.3</a>
 &#32; &#32; &#32; &#32; &#32;Component &#32;comp);
    public void <strong>layoutContainer</strong>(Container &#32;target);	<a href="javag1.htm#33782">&#167;1.1.4</a>
    public Dimension <strong>minimumLayoutSize</strong>(Container &#32;target);	<a href="javag1.htm#391">&#167;1.1.5</a>
    public Dimension <strong>preferredLayoutSize</strong>(Container &#32;target);	<a href="javag1.htm#427">&#167;1.1.6</a>
    public void <strong>removeLayoutComponent</strong>(Component &#32;comp);	<a href="javag1.htm#463">&#167;1.1.7</a>
    public String <strong>toString</strong>();	<a href="javag1.htm#483">&#167;1.1.8</a>
}
</pre><a name="289">A border layout lays out a container using members named "North", "South", "East", "West", 
and "Center". The components get laid out according to their preferred sizes and the constraints of the container's size. The "North" and "South" components may be stretched horizontally; the "East" and "West" components may be stretched vertically; the "Center" 
component may stretch both horizontally and vertically to fill any space left over.
</a><p><a name="53705">
</a><p><a name="38484">Here is an example of five buttons in an applet laid out using the BorderLayout layout manager<img src="javaag1.gif">:
</a><p><a name="38495">The code for this applet is the following:
</a><p><pre><hr>
<a name="38497">import java.awt.*;
</a><a name="38498">import java.applet.Applet;
</a><a name="38499">
</a><a name="38500">public class buttonDir extends Applet {
</a><a name="38504">  public void init() {
</a><a name="38505">    setLayout(new BorderLayout());
</a><a name="38511"> &#32; &#32; &#32; &#32;add("North", new Button("North"));
</a><a name="38512">    add("South", new Button("South"));
</a><a name="38513">    add("East", new Button("East"));
</a><a name="38514">    add("West", new Button("West"));
</a><a name="38515">    add("Center", new Button("Center"));
</a><a name="38516">  }
</a><a name="38517">}
</a>
<hr></pre>
<hr>
<a name="38489"><h2>
<img src="images/constrct.gif" width=231 height=38 alt="Constructors"></h2></a>


<META NAME="keywords" CONTENT="BorderLayout">
<a name="301"><h3>BorderLayout
</h3></a>
<a name="303"><code>public BorderLayout()
</code></a>
<dl>
<dd><a name="305">Constructs a new border layout.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="BorderLayout">
<a name="313"><h3>BorderLayout
</h3></a>
<a name="315"><code>public BorderLayout(int &#32;hgap, int &#32;vgap)
</code></a>
<dl>
<dd><a name="317">Creates a new border layout with the specified horizontal and vertical 
gaps. The horizontal and vertical gaps specify the space between the components.
<pre>
</pre></a>
<dl>
<dt><a name="319"><b>Parameters:
</b></a><dd><a name="321"><code>hgap
- </code></a><a name="323">the horizontal gap
</a>
<dd><a name="325"><code>vgap
- </code></a><a name="327">the vertical gap
</a>
</dl></dl>
<hr>
<a name="329"><h2>
<img src="images/methods.gif" width=151 height=38 alt="Methods"></h2></a>


<META NAME="keywords" CONTENT="addLayoutComponent">
<a name="339"><h3>addLayoutComponent
</h3></a>
<a name="341"><code>public void addLayoutComponent(String &#32;name, Component &#32;comp)
</code></a>
<dl>
<dd><a name="33757">Adds the specified component to this border layout using the indicated tag.
<pre>
</pre></a>

<dd><a name="33889">For border layouts, the tag should be one of "North", "South", "East", "West", 
or "Center". Any other tag is ignored.
<pre>
</pre></a>

<dd><a name="40515">Most applications do not call this method directly. This method is called 
when a component is added to a container using the two-argument add 
method &#32;<a href="javae11.htm#6239">(II-&#167;1.11.3)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="33758"><b>Parameters:
</b></a><dd><a name="33759"><code>name
- </code></a><a name="33760">a tag understood by the layout manager
</a>
<dd><a name="33761"><code>comp
- </code></a><a name="33771">the component to be added
</a>
</dl></dl>

<META NAME="keywords" CONTENT="layoutContainer">
<a name="33782"><h3>layoutContainer
</h3></a>
<a name="365"><code>public void layoutContainer(Container &#32;target)
</code></a>
<dl>
<dd><a name="53193">Lays out the container argument using this border layout.
<pre>
</pre></a>

<dd><a name="33669">This method reshapes the components in the specified container in order to 
satisfy the constraints of this BorderLayout object. The "North" and 
"South"components, if any, are placed at the top and bottom of the container, respectively. The "West" and "East" components are then placed on 
the left and right, respectively. Finally, the "Center" object is placed in any 
remaining space in the middle.
<pre>
</pre></a>

<dd><a name="40544">Most applications do not call this method directly. This method is called 
when a container calls its layout method <a href="javae11.htm#6483">(II-&#167;1.11.11)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="369"><b>Parameters:
</b></a><dd><a name="371"><code>target
- </code></a><a name="373">the container in which to do the layout
</a>

<dt><a name="375"><b>See Also:
</b></a><dd><a name="381">Container &#32;<a href="javae11.htm#6019">(II-&#167;1.11)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="minimumLayoutSize">
<a name="391"><h3>minimumLayoutSize
</h3></a>
<a name="393"><code>public Dimension minimumLayoutSize(Container &#32;target)
</code></a>
<dl>
<dd><a name="52598">Determines the minimum size of the target container using this layout manager.
<pre>
</pre></a>

<dd><a name="40604">This method is called when a container calls its minimumSize method 
<a href="javae11.htm#6589">(II-&#167;1.11.14)</a>. Most applications do not call this method directly. 
<pre>
</pre></a>
<dl>
<dt><a name="33533"><b>Parameters:
</b></a><dd><a name="33534"><code>target
- </code></a><a name="33535">the container in which to do the layout
</a>

<dt><a name="33527"><b>Returns:
</b></a><dd><a name="33528">the minimum dimensions needed to lay out the subcomponents of the 
specified container.
</a>

<dt><a name="407"><b>See Also:
</b></a><dd><a name="417">Container &#32;<a href="javae11.htm#6019">(II-&#167;1.11)</a><br>
preferredLayoutSize &#32;<a href="javag1.htm#427">(II-&#167;1.1.6)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="preferredLayoutSize">
<a name="427"><h3>preferredLayoutSize
</h3></a>
<a name="429"><code>public Dimension preferredLayoutSize(Container &#32;target)
</code></a>
<dl>
<dd><a name="52604">Determines the preferred size of the target container using this layout manager.
<pre>
</pre></a>

<dd><a name="40710">This method is called when a container calls its preferredSize method 
<a href="javae11.htm#6681">(II-&#167;1.11.17)</a>. Most applications do not call this method directly.
<pre>
</pre></a>
<dl>
<dt><a name="33589"><b>Parameters:
</b></a><dd><a name="33590"><code>target
- </code></a><a name="33591">the container in which to do the layout
</a>

<dt><a name="33592"><b>Returns:
</b></a><dd><a name="33593">the preferred dimensions to lay out the subcomponents of the specified container.
</a>

<dt><a name="443"><b>See Also:
</b></a><dd><a name="453">Container &#32;<a href="javae11.htm#6019">(II-&#167;1.11)</a><br>
minimumLayoutSize &#32;<a href="javag1.htm#391">(II-&#167;1.1.5)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="removeLayoutComponent">
<a name="463"><h3>removeLayoutComponent
</h3></a>
<a name="465"><code>public void removeLayoutComponent(Component &#32;comp)
</code></a>
<dl>
<dd><a name="33881">Removes the specified component from this border layout. This method is 
called when a container calls its remove <a href="javae11.htm#6747">(II-&#167;1.11.19)</a> or removeAll 
<a href="javae11.htm#6775">(II-&#167;1.11.20)</a> methods. Most applications do not call this method directly.
<pre>
</pre></a>
<dl>
<dt><a name="40781"><b>Parameters:
</b></a><dd><a name="33883"><code>comp
- </code></a><a name="33884">the component to be removed
</a>
</dl></dl>

<META NAME="keywords" CONTENT="toString">
<a name="483"><h3>toString
</h3></a>
<a name="485"><code>public String toString()
</code></a>
<dl><dl>
<dt><a name="27302"><b>Returns:
</b></a><dd><a name="27303">a string representation of this border layout.
</a>

<dt><a name="493"><b>Overrides:
</b></a><dd><a name="499">toString in class Object &#32;<a href="java3.htm#6228">(I-&#167;1.12.9)</a>.
</a>
</dl></dl>

<hr>
<!-- This inserts footnotes--><p>
<pre><a href="javabooa.htm">Packages</a>  <a href="javag.htm">This Package</a>  <a href="javag.htm">Prev</a>  <a href="javag2.htm">Next</a>  <a href="javabook.htm">Index</a></pre>
<font size=-1>Java API Document (HTML generated by dkramer on April 22, 1996)<br>
<a href="copyrigh.htm">Copyright &#169 1996 Sun Microsystems, Inc.</a>
All rights reserved<br>
Please send any comments or corrections to <a href="mailto:doug.kramer@sun.com"-->doug.kramer@sun.com</a>
</font>
</body></html>
