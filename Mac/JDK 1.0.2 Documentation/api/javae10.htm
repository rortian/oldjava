<html><head><title>Class Component</title></head>
<!--Intermediate split file from a FrameMaker file-->
<body bgcolor=#ffffff>

<pre><a href="javabooa.htm">Packages</a>  <a href="javag.htm">This Package</a>  <a href="javag9.htm">Prev</a>  <a href="javae11.htm">Next</a>  <a href="javabook.htm">Index</a>  </pre>


<hr>
<a name="3219"><h1>	&#167;1.10 Class Component</h1></a>
<pre>public &#32;abstract &#32;class &#32;java.awt.<strong>Component
</strong>    extends &#32;java.lang.<strong>Object</strong> &#32;<a href="java3.htm#5914">(I-&#167;1.12)</a>
    implements java.awt.image.<strong>ImageObserver</strong> &#32;<a href="javag11.htm#999757">(II-&#167;2.11)</a>
{
 &#32; &#32; &#32; &#32;// Methods
    public boolean &#32;<strong>action</strong>(Event &#32;evt, Object &#32;what);	<a href="javae10.htm#3701">&#167;1.10.1</a>
    public void <strong>addNotify</strong>();	<a href="javae10.htm#3737">&#167;1.10.2</a>
    public Rectangle <strong>bounds</strong>();	<a href="javae10.htm#3763">&#167;1.10.3</a>
    public int <strong>checkImage</strong>(Image &#32;image,	<a href="javae10.htm#49599">&#167;1.10.4</a>
     &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;ImageObserver &#32;observer);
    public int <strong>checkImage</strong>(Image &#32;image,	<a href="javae10.htm#3827">&#167;1.10.5</a>
     &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;width, int &#32;height,
     &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;ImageObserver &#32;observer);
    public Image <strong>createImage</strong>(ImageProducer &#32;producer);	<a href="javae10.htm#3875">&#167;1.10.6</a>
    public Image <strong>createImage</strong>(int &#32;width, int &#32;height);	<a href="javae10.htm#3897">&#167;1.10.7</a>
 &#32; &#32;public void <strong>deliverEvent</strong>(Event &#32;evt);	<a href="javae10.htm#3925">&#167;1.10.8</a>
    public void <strong>disable</strong>();	<a href="javae10.htm#3957">&#167;1.10.9</a>
    public void <strong>enable</strong>();	<a href="javae10.htm#3983">&#167;1.10.10</a>
    public void <strong>enable</strong>(boolean &#32;cond);	<a href="javae10.htm#4007">&#167;1.10.11</a>
    public Color <strong>getBackground</strong>();	<a href="javae10.htm#4039">&#167;1.10.12</a>
    public ColorModel <strong>getColorModel</strong>();	<a href="javae10.htm#4065">&#167;1.10.13</a>
    public Font <strong>getFont</strong>();	<a href="javae10.htm#52173">&#167;1.10.14</a>
    public FontMetrics <strong>getFontMetrics</strong>(Font &#32;font);	<a href="javae10.htm#4117">&#167;1.10.15</a>
    public Color <strong>getForeground</strong>();	<a href="javae10.htm#4149">&#167;1.10.16</a>
    public Graphics <strong>getGraphics</strong>();	<a href="javae10.htm#4175">&#167;1.10.17</a>
    public Container <strong>getParent</strong>();	<a href="javae10.htm#4201">&#167;1.10.18</a>
    public ComponentPeer <strong>getPeer</strong>();	<a href="javae10.htm#4219">&#167;1.10.19</a>
    public Toolkit <strong>getToolkit</strong>();	<a href="javae10.htm#4237">&#167;1.10.20</a>
    public boolean <strong>gotFocus</strong>(Event &#32;evt, Object &#32;what);	<a href="javae10.htm#4255">&#167;1.10.21</a>
 &#32; &#32;public boolean <strong>handleEvent</strong>(Event &#32;evt);	<a href="javae10.htm#4295">&#167;1.10.22</a>
    public void <strong>hide</strong>();	<a href="javae10.htm#53852">&#167;1.10.23</a>
    public boolean <strong>imageUpdate</strong>(Image &#32;img, int &#32;flags, int &#32;x,	<a href="javae10.htm#4381">&#167;1.10.24</a>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;y, int &#32;w, int &#32;h);
    public boolean <strong>inside</strong>(int &#32;x, int &#32;y);	<a href="javae10.htm#4425">&#167;1.10.25</a>
    public void <strong>invalidate</strong>();	<a href="javae10.htm#4461">&#167;1.10.26</a>
    public boolean <strong>isEnabled</strong>();	<a href="javae10.htm#4491">&#167;1.10.27</a>
    public boolean <strong>isShowing</strong>();	<a href="javae10.htm#4521">&#167;1.10.28</a>
    public boolean <strong>isValid</strong>();	<a href="javae10.htm#4551">&#167;1.10.29</a>
    public boolean <strong>isVisible</strong>();	<a href="javae10.htm#4581">&#167;1.10.30</a>
    public boolean <strong>keyDown</strong>(Event &#32;evt, int &#32;key);	<a href="javae10.htm#4611">&#167;1.10.31</a>
    public boolean <strong>keyUp</strong>(Event &#32;evt, int &#32;key);	<a href="javae10.htm#4647">&#167;1.10.32</a>
    public void <strong>layout</strong>();	<a href="javae10.htm#4683">&#167;1.10.33</a>
    public void <strong>list</strong>();	<a href="javae10.htm#4709">&#167;1.10.34</a>
    public void <strong>list</strong>(PrintStream &#32;out);	<a href="javae10.htm#4721">&#167;1.10.35</a>
    public void <strong>list</strong>(PrintStream &#32;out, int &#32;indent);	<a href="javae10.htm#4739">&#167;1.10.36</a>
    public Component <strong>locate</strong>(int &#32;x, int &#32;y);	<a href="javae10.htm#4763">&#167;1.10.37</a>
    public Point <strong>location</strong>();	<a href="javae10.htm#4799">&#167;1.10.38</a>
    public boolean <strong>lostFocus</strong>(Event &#32;evt, Object &#32;what);	<a href="javae10.htm#4825">&#167;1.10.39</a>
    public Dimension <strong>minimumSize</strong>();	<a href="javae10.htm#4865">&#167;1.10.40</a>
    public boolean <strong>mouseDown</strong>(Event &#32;evt, int &#32;x, int &#32;y);	<a href="javae10.htm#4895">&#167;1.10.41</a>
    public boolean <strong>mouseDrag</strong>(Event &#32;evt, int &#32;x, int &#32;y);	<a href="javae10.htm#4935">&#167;1.10.42</a> 
    public boolean <strong>mouseEnter</strong>(Event &#32;evt, int &#32;x, int &#32;y);	<a href="javae10.htm#4975">&#167;1.10.43</a>
    public boolean <strong>mouseExit</strong>(Event &#32;evt, int &#32;x, int &#32;y);	<a href="javae10.htm#5015">&#167;1.10.44</a>
    public boolean <strong>mouseMove</strong>(Event &#32;evt, int &#32;x, int &#32;y);	<a href="javae10.htm#5055">&#167;1.10.45</a>
    public boolean <strong>mouseUp</strong>(Event &#32;evt, int &#32;x, int &#32;y);	<a href="javae10.htm#5095">&#167;1.10.46</a>
    public void <strong>move</strong>(int &#32;x, int &#32;y);	<a href="javae10.htm#5135">&#167;1.10.47</a>
    public void <strong>nextFocus</strong>();	<a href="javae10.htm#5171">&#167;1.10.48</a>
    public void <strong>paint</strong>(Graphics &#32;g);	<a href="javae10.htm#5197">&#167;1.10.49</a>
    public void <strong>paintAll</strong>(Graphics &#32;g);	<a href="javae10.htm#5225">&#167;1.10.50</a>
    protected String <strong>paramString</strong>();	<a href="javae10.htm#5253">&#167;1.10.51</a>
    public boolean <strong>postEvent</strong>(Event &#32;evt);	<a href="javae10.htm#5271">&#167;1.10.52</a>
    public Dimension <strong>preferredSize</strong>();	<a href="javae10.htm#5307">&#167;1.10.53</a>
    public boolean 	<a href="javae10.htm#54580">&#167;1.10.54</a>
 &#32; &#32; &#32; &#32; &#32;<strong>prepareImage</strong>(Image &#32;image, &#32;ImageObserver &#32;observer);
    public 	<a href="javae10.htm#5371">&#167;1.10.55</a>
 &#32; &#32; &#32; &#32; &#32;<strong>prepareImage</strong>(Image &#32;image, &#32;int &#32;width, int height, 
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;ImageObserver observer);	 &#32; &#32; 
    public void <strong>print</strong>(Graphics &#32;g);	<a href="javae10.htm#5415">&#167;1.10.56</a>
    public void <strong>printAll</strong>(Graphics &#32;g);	<a href="javae10.htm#5443">&#167;1.10.57</a>
    public void <strong>removeNotify</strong>();	<a href="javae10.htm#5471">&#167;1.10.58</a>
    public void <strong>repaint</strong>();	<a href="javae10.htm#5497">&#167;1.10.59</a>
    public void <strong>repaint</strong>(int &#32;x, int &#32;y, int &#32;width, int height);	<a href="javae10.htm#5517">&#167;1.10.60</a>
    public void <strong>repaint</strong>(long &#32;tm);	<a href="javae10.htm#5555">&#167;1.10.61</a>
    public void <strong>repaint</strong>(long &#32;tm, int &#32;x, int &#32;y,	<a href="javae10.htm#5581">&#167;1.10.62</a>
     &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;width, int &#32;height);
    public void <strong>requestFocus</strong>();	<a href="javae10.htm#5625">&#167;1.10.63</a>
    public void <strong>reshape</strong>(int &#32;x, int &#32;y, int &#32;width, int height);	<a href="javae10.htm#5647">&#167;1.10.64</a>
    public void <strong>resize</strong>(Dimension &#32;d);	<a href="javae10.htm#5695">&#167;1.10.65</a>
    public void <strong>resize</strong>(int &#32;width, int &#32;height);	<a href="javae10.htm#5725">&#167;1.10.66</a>
    public void <strong>setBackground</strong>(Color &#32;c);	<a href="javae10.htm#5761">&#167;1.10.67</a>
    public void <strong>setFont</strong>(Font &#32;f);	<a href="javae10.htm#5789">&#167;1.10.68</a>
    public void <strong>setForeground</strong>(Color &#32;c);	<a href="javae10.htm#5817">&#167;1.10.69</a>
    public void <strong>show</strong>();	<a href="javae10.htm#5845">&#167;1.10.70</a>
    public void <strong>show</strong>(boolean &#32;cond);	<a href="javae10.htm#30416">&#167;1.10.71</a>
    public Dimension <strong>size</strong>();	<a href="javae10.htm#5901">&#167;1.10.72</a>
    public String <strong>toString</strong>();	<a href="javae10.htm#5927">&#167;1.10.73</a>
    public void <strong>update</strong>(Graphics &#32;g);	<a href="javae10.htm#5953">&#167;1.10.74</a>
    public void <strong>validate</strong>();	<a href="javae10.htm#5985">&#167;1.10.75</a>
}
</pre><a name="3689">The Component class is the abstract superclass of many of the Abstract Window Toolkit 
classes. It represents something that has a position, a size, can be painted on the screen, 
and can receive input events.
</a><p>
<hr>
<a name="3691"><h2>
<img src="images/methods.gif" width=151 height=38 alt="Methods"></h2></a>


<META NAME="keywords" CONTENT="action">
<a name="3701"><h3>action
</h3></a>
<a name="3703"><code>public boolean action(Event &#32;evt, Object &#32;what)
</code></a>
<dl>
<dd><a name="3705">This method is called when an action occurs inside this component. This 
method is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which case the 
what argument contains the arg field of the event argument. The specific 
value and type of the what argument depends on the component that originally triggered the action.
<pre>
</pre></a>

<dd><a name="27764">The method returns true to indicate that it has successfully handled the 
action or false if the event that triggered the action should be passed up to 
the component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="27774">The action method of Component simply returns false.
<pre>
</pre></a>
<dl>
<dt><a name="27771"><b>Parameters:
</b></a><dd><a name="3709"><code>evt
- </code></a><a name="3711">the event that caused the action
</a>
<dd><a name="3713"><code>what
- </code></a><a name="3715">the action
</a>

<dt><a name="3717"><b>Returns:
</b></a><dd><a name="53856">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
<dd><a name="53835">
</a>
</dl></dl>

<META NAME="keywords" CONTENT="addNotify">
<a name="3737"><h3>addNotify
</h3></a>
<a name="3739"><code>public void addNotify()
</code></a>
<dl>
<dd><a name="27785">This method notifies the Component to create a peer. This peer allows the 
application to change the look of a component without changing its functionality.
<pre>
</pre></a>

<dd><a name="27805">The addNotify method of Component sets a flag indicating that the component needs to be laid out again because its size has possibly changed.
<pre>
</pre></a>

<dd><a name="43779">Most applications do not call this method directly.
<pre>
</pre></a>
<dl>
<dt><a name="3743"><b>See Also:
</b></a><dd><a name="28167">getPeer &#32;<a href="javae10.htm#4219">(II-&#167;1.10.19)</a><br>
removeNotify &#32;<a href="javae10.htm#5471">(II-&#167;1.10.58)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="bounds">
<a name="3763"><h3>bounds
</h3></a>
<a name="3765"><code>public Rectangle bounds()
</code></a>
<dl><dl>
<dt><a name="3769"><b>Returns:
</b></a><dd><a name="3771">the containing rectangle of this component.
</a>

<dt><a name="49591"><b>See Also:
</b></a><dd><a name="49595">reshape &#32;<a href="javae10.htm#5647">(II-&#167;1.10.64)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="checkImage">
<a name="49599"><h3>checkImage
</h3></a>
<a name="3791"><code>public int checkImage(Image &#32;image, ImageObserver &#32;observer)
</code></a>
<dl>
<dd><a name="3793">Returns the status of the construction of a screen representation of the 
specified image. 
<pre>
</pre></a>

<dd><a name="27823">This method does not cause the image to begin loading. An application 
must use the prepareImage <a href="javae10.htm#5371">(II-&#167;1.10.55)</a> method to force the loading of an 
image.
<pre>
</pre></a>

<dd><a name="37109">The checkImage method of Component calls its peer's checkImage 
method &#32;<a href="javal6.htm#653">(II-&#167;3.6.1)</a> to calculate the flags. If this component does not yet 
have a peer, the component's toolkit's checkImage method <a href="javae14.htm#37095">(II-&#167;1.41.2)</a> is 
called instead.
<pre>
</pre></a>

<dd><a name="37122">Information on the flags returned by this method can be found in &#32;<a href="javag11.htm#999757">II</a>-<a href="javag11.htm#999757">&#167;2.11</a>. 
<pre>
</pre></a>
<dl>
<dt><a name="27836"><b>Parameters:
</b></a><dd><a name="27833"><code>image
- </code></a><a name="3799">the Image whose status is being checked
</a>
<dd><a name="3801"><code>observer
- </code></a><a name="3803">the ImageObserver object to be notified as the image is being 
prepared
</a>

<dt><a name="3805"><b>Returns:
</b></a><dd><a name="3807">the bitwise inclusive OR of ImageObserver <a href="javag11.htm#999757">(II-&#167;2.11)</a> flags indicating 
what information about the image is currently available.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="checkImage">
<a name="3827"><h3>checkImage
</h3></a>
<a name="3829"><code>public int checkImage(Image &#32;image, int &#32;width, int &#32;height,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;ImageObserver &#32;observer)
</code></a>
<dl>
<dd><a name="27838">Returns the status of the construction of a scaled screen representation of 
the specified image. 
<pre>
</pre></a>

<dd><a name="27839">This method does not cause the image to begin loading. An application 
must use the prepareImage <a href="javae10.htm#5371">(II-&#167;1.10.55)</a> method to force the loading of an 
image.
<pre>
</pre></a>

<dd><a name="37146">The checkImage method of Component calls its peer's checkImage 
method &#32;<a href="javal6.htm#653">(II-&#167;3.6.1)</a> to calculate the flags. If this component does not yet 
have a peer, the component's toolkit's checkImage method <a href="javae14.htm#37095">(II-&#167;1.41.2)</a> is 
called instead.
<pre>
</pre></a>

<dd><a name="53307">Information on the flags returned by this method can be found in &#32;<a href="javag11.htm#999757">II</a>-<a href="javag11.htm#999757">&#167;2.11</a>. 
<pre>
</pre></a>
<dl>
<dt><a name="3833"><b>Parameters:
</b></a><dd><a name="27857"><code>image
- </code></a><a name="27858">the Image whose status is being checked
</a>
<dd><a name="3839"><code>width
- </code></a><a name="3841">the width of the scaled version to check the status of
</a>
<dd><a name="3843"><code>height
- </code></a><a name="3845">the height of the scaled version to check the status of
</a>
<dd><a name="3847"><code>observer
- </code></a><a name="3849">the ImageObserver object to be notified as the image is being 
prepared
</a>

<dt><a name="3851"><b>Returns:
</b></a><dd><a name="3853">the bitwise inclusive OR of the ImageObserver flags for the data that is 
currently available.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="createImage">
<a name="3875"><h3>createImage
</h3></a>
<a name="3877"><code>public Image createImage(ImageProducer &#32;producer)
</code></a>
<dl>
<dd><a name="3879">Creates an image from the specified image producer.
<pre>
</pre></a>
<dl>
<dt><a name="3881"><b>Parameters:
</b></a><dd><a name="3883"><code>producer
- </code></a><a name="3885">the image producer
</a>

<dt><a name="3887"><b>Returns:
</b></a><dd><a name="3889">the image produced.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="createImage">
<a name="3897"><h3>createImage
</h3></a>
<a name="3899"><code>public Image createImage(int &#32;width, int &#32;height)
</code></a>
<dl><dl>
<dt><a name="3903"><b>Parameters:
</b></a><dd><a name="3905"><code>width
- </code></a><a name="3907">the specified width
</a>
<dd><a name="3909"><code>height
- </code></a><a name="3911">the specified height
</a>

<dt><a name="3913"><b>Returns:
</b></a><dd><a name="3915">an off-screen drawable image, which can be used for double buffering.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="deliverEvent">
<a name="3925"><h3>deliverEvent
</h3></a>
<a name="3927"><code>public void deliverEvent(Event &#32;evt)
</code></a>
<dl>
<dd><a name="3929">Delivers an event to this component or one of its subcomponents.
<pre>
</pre></a>

<dd><a name="29373">The deliverEvent method of Component calls the component's postEvent 
method <a href="javae10.htm#5271">(II-&#167;1.10.52)</a> on the event.
<pre>
</pre></a>
<dl>
<dt><a name="27868"><b>Parameters:
</b></a><dd><a name="3933"><code>evt
- </code></a><a name="3935">the event
</a>

<dt><a name="3937"><b>See Also:
</b></a><dd><a name="3947">handleEvent &#32;<a href="javae10.htm#4295">(II-&#167;1.10.22)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="disable">
<a name="3957"><h3>disable
</h3></a>
<a name="3959"><code>public void disable()
</code></a>
<dl>
<dd><a name="3961">Makes this component insensitive to user input.
<pre>
</pre></a>
<dl>
<dt><a name="3963"><b>See Also:
</b></a><dd><a name="3973">isEnabled &#32;<a href="javae10.htm#4491">(II-&#167;1.10.27)</a><br>
enable &#32;<a href="javae10.htm#3983">(II-&#167;1.10.10)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="enable">
<a name="3983"><h3>enable
</h3></a>
<a name="3985"><code>public void enable()
</code></a>
<dl>
<dd><a name="3987">Makes this component sensitive to user input. This is the default.
<pre>
</pre></a>
<dl>
<dt><a name="3989"><b>See Also:
</b></a><dd><a name="3999">isEnabled &#32;<a href="javae10.htm#4491">(II-&#167;1.10.27)</a><br>
disable &#32;<a href="javae10.htm#3957">(II-&#167;1.10.9)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="enable">
<a name="4007"><h3>enable
</h3></a>
<a name="4009"><code>public void enable(boolean &#32;cond)
</code></a>
<dl>
<dd><a name="4013">If the boolean argument is true, enables this component. If false, disables it.
<pre>
</pre></a>
<dl>
<dt><a name="27879"><b>Parameters:
</b></a><dd><a name="4015"><code>cond
- </code></a><a name="4017">a boolean indicating whether to enable or disable this component
</a>
</dl></dl>

<META NAME="keywords" CONTENT="getBackground">
<a name="4039"><h3>getBackground
</h3></a>
<a name="4041"><code>public Color getBackground()
</code></a>
<dl>
<dd><a name="4045">Determines the background color of this component. If this component 
has not specified a background color using the setBackground method 
<a href="javae10.htm#5761">(II-&#167;1.10.67)</a>, the background color of its parent component is returned.
<pre>
</pre></a>
<dl>
<dt><a name="52576"><b>Returns:
</b></a><dd><a name="4047">the background color of this component.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="getColorModel">
<a name="4065"><h3>getColorModel
</h3></a>
<a name="4067"><code>public ColorModel getColorModel()
</code></a>
<dl>
<dd><a name="37525">Detetermins the color model of this component. The ColorModel <a href="javak1.htm#996814">(II-&#167;2.1)</a> is 
an abstract class that encapsulates how to translate between pixel values of 
an image and its red, green, blue, and alpha (transparency) components.
<pre>
</pre></a>

<dd><a name="37535">The getColorModel method of Component calls its peer's getColorModel 
method &#32;<a href="javal6.htm#723">(II-&#167;3.6.7)</a> to determine the component's color model. If this component does not yet have a peer, the component's toolkit's getColorModel 
method <a href="javae14.htm#22693">(II-&#167;1.41.22)</a> is called instead.
<pre>
</pre></a>
<dl>
<dt><a name="38402"><b>Returns:
</b></a><dd><a name="38403">the color model of this component.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="getFont">
<a name="52173"><h3>getFont
</h3></a>
<a name="52174"><code>public Font getFont()
</code></a>
<dl>
<dd><a name="52175">Determines the font of this component. If this component has not yet specified a font using the setFont method <a href="javae10.htm#5789">(II-&#167;1.10.68)</a>, the font of its parent 
component is returned.
<pre>
</pre></a>
<dl>
<dt><a name="53340"><b>Returns:
</b></a><dd><a name="4099">the font of this component.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="getFontMetrics">
<a name="4117"><h3>getFontMetrics
</h3></a>
<a name="4119"><code>public FontMetrics getFontMetrics(Font &#32;font)
</code></a>
<dl>
<dd><a name="4123">Determines the font metrics for the specified font when rendered by a platform-dependent toolkit. 
<pre>
</pre></a>

<dd><a name="53899">The getFontMetrics method checks to see if this component has a peer 
<a href="javae10.htm#4219">(II-&#167;1.10.19)</a>. If so, the peer's getFontMetrics method <a href="javal6.htm#735">(II-&#167;3.6.8)</a> is called. 
Otherwise, the component's toolkit's get-Font-Metrics method <a href="javae14.htm#22757">(II-&#167;1.41.25)</a> is 
called.
<pre>
</pre></a>
<dl>
<dt><a name="53894"><b>Parameters:
</b></a><dd><a name="4125"><code>font
- </code></a><a name="4127">the font
</a>

<dt><a name="4129"><b>Returns:
</b></a><dd><a name="4131">the font metrics for the specified font.
</a>

<dt><a name="4133"><b>See Also:
</b></a><dd><a name="4139">getFont &#32;<a href="javae10.htm#52173">(II-&#167;1.10.14)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="getForeground">
<a name="4149"><h3>getForeground
</h3></a>
<a name="4151"><code>public Color getForeground()
</code></a>
<dl>
<dd><a name="53361">Determines the foreground color of this component. If this component has 
not specified a background color using the setForeground method 
<a href="javae10.htm#5817">(II-&#167;1.10.69)</a>, the background color of its parent component is returned.
<pre>
</pre></a>
<dl>
<dt><a name="53365"><b>Returns:
</b></a><dd><a name="53366">the foreground color of this component.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="getGraphics">
<a name="4175"><h3>getGraphics
</h3></a>
<a name="4177"><code>public Graphics getGraphics()
</code></a>
<dl><dl>
<dt><a name="4181"><b>Returns:
</b></a><dd><a name="4183">the graphics context of this component; this method returns null if the 
component does not currently have a peer.
</a>

<dt><a name="4185"><b>See Also:
</b></a><dd><a name="4191">paint &#32;<a href="javae10.htm#5197">(II-&#167;1.10.49)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="getParent">
<a name="4201"><h3>getParent
</h3></a>
<a name="4203"><code>public Container getParent()
</code></a>
<dl><dl>
<dt><a name="4207"><b>Returns:
</b></a><dd><a name="4209">the parent of this component.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="getPeer">
<a name="4219"><h3>getPeer
</h3></a>
<a name="4221"><code>public ComponentPeer getPeer()
</code></a>
<dl><dl>
<dt><a name="44932"><b>Returns:
</b></a><dd><a name="44933">the peer of this component.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="getToolkit">
<a name="4237"><h3>getToolkit
</h3></a>
<a name="4239"><code>public Toolkit getToolkit()
</code></a>
<dl>
<dd><a name="4241">The toolkit is used to create this component's peer when its its add-Notify 
method &#32;<a href="javae10.htm#3737">(II-&#167;1.10.2)</a> is called.
<pre>
</pre></a>

<dd><a name="27984">A Component's toolkit is determined by its containing Frame &#32;<a href="javah8.htm#10801">(II-&#167;1.19)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="4243"><b>Returns:
</b></a><dd><a name="4245">the toolkit of this component.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="gotFocus">
<a name="4255"><h3>gotFocus
</h3></a>
<a name="28018"><code>public boolean gotFocus(Event &#32;evt, Object &#32;what)
</code></a>
<dl>
<dd><a name="38766">This method is called when the this component receives the input focus. 
This method is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which case 
the what argument contains the arg field of the event argument.
<pre>
</pre></a>

<dd><a name="28024">The method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
the component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="28025">The getFocus method of Component simply returns false.
<pre>
</pre></a>

<dd><a name="28020">The what argument is currently always null.
<pre>
</pre></a>
<dl>
<dt><a name="45049"><b>Parameters:
</b></a><dd><a name="28021"><code>evt
- </code></a><a name="28005">the event that caused the action
</a>
<dd><a name="28006"><code>what
- </code></a><a name="28007">the action
</a>

<dt><a name="28008"><b>Returns:
</b></a><dd><a name="53870">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>

<dt><a name="4275"><b>See Also:
</b></a><dd><a name="4285">requestFocus &#32;<a href="javae10.htm#5625">(II-&#167;1.10.63)</a><br>
lostFocus &#32;<a href="javae10.htm#4825">(II-&#167;1.10.39)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="handleEvent">
<a name="4295"><h3>handleEvent
</h3></a>
<a name="4297"><code>public boolean handleEvent(Event &#32;evt)
</code></a>
<dl>
<dd><a name="28034">This method is called when any event occurs inside this component.
<pre>
</pre></a>

<dd><a name="28035">The method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
the component's parent.
<pre>
</pre></a>

<dd><a name="28072">The handleEvent method of Component determines the type of event, and 
calls one of the following methods, if appropriate:<br>
	action &#32;<a href="javae10.htm#3701">(II-&#167;1.10.1)</a><br>
	gotFocus <a href="javae10.htm#4255">(II-&#167;1.10.21)</a>	lostFocus <a href="javae10.htm#4825">(II-&#167;1.10.39)</a><br>
	keyDown &#32;<a href="javae10.htm#4611">(II-&#167;1.10.31)</a>	keyUp <a href="javae10.htm#4647">(II-&#167;1.10.32)</a><br>
	mouseEnter &#32;<a href="javae10.htm#4975">(II-&#167;1.10.43)</a>		mouseExit &#32;<a href="javae10.htm#5015">(II-&#167;1.10.44)</a><br>
	mouseMove <a href="javae10.htm#5055">(II-&#167;1.10.45)</a>	mouseDrag &#32;<a href="javae10.htm#4935">(II-&#167;1.10.42)</a><br>
	mouseDown &#32;<a href="javae10.htm#4895">(II-&#167;1.10.41)</a>		mouseUp &#32;<a href="javae10.htm#5095">(II-&#167;1.10.46)</a><br>
and returns whatever value that method returns. If none of those methods 
is appropriate, then handleEvent returns false.
<pre>
</pre></a>

<dd><a name="38729">All the above methods are called with the event as their first argument. The 
action method is called with the arg field of the event as its second argument. The keyUp and keyDown are passed the key field of the event as its 
second argument. The six mouse methods are passed the x and y fields of 
the event as their second and third argument, respectively.<a href="#44954"><sup>1</sup></a>
<pre>
</pre></a>
<dl>
<dt><a name="4301"><b>Parameters:
</b></a><dd><a name="4303"><code>nevt
- </code></a><a name="4305">the event
</a>

<dt><a name="53847"><b>Returns:
</b></a><dd><a name="53872">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="hide">
<a name="53852"><h3>hide
</h3></a>
<a name="53853"><code>public void hide()
</code></a>
<dl>
<dd><a name="31778">Hides this component. The component continues to exist and be in its containing object, but it is not visible and does not have any space allocated 
for it.
<pre>
</pre></a>
<dl>
<dt><a name="31779"><b>See Also:
</b></a><dd><a name="4371">isVisible &#32;<a href="javae10.htm#4581">(II-&#167;1.10.30)</a><br>
show &#32;<a href="javae10.htm#5845">(II-&#167;1.10.70)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="imageUpdate">
<a name="4381"><h3>imageUpdate
</h3></a>
<a name="4383"><code>public boolean<br>
imageUpdate(Image &#32;img, int &#32;flags, int &#32;x, int &#32;y,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;w, int &#32;h)
</code></a>
<dl>
<dd><a name="38138">This imageUpdate method of an ImageObserver (such as Component) is called 
when more information about an image which had been previously 
requested using an asynchronous interface (such as draw-Image) becomes 
available. See <a href="javag11.htm#999915">&#167;2.11.9</a> on <a href="javag11.htm#999915">page &#32;311</a> for more information on this method 
and its arguments.
<pre>
</pre></a>

<dd><a name="38152">The imageUpdate method of Component incrementally draws an image on the 
component as more of the bits of the image are available.
<pre>
</pre></a>

<dd><a name="38163">If the system property "awt.image.incrementalDraw" is missing or has the 
value "true", the image is incrementally drawn, If the system property has 
any other value, then the image is not drawn until it has been completely 
loaded.
<pre>
</pre></a>

<dd><a name="38164">Also, if incremental drawing is in effect, the value of the system property 
"awt.image.redrawrate" is interpreted as an integer to give the maximum 
redraw rate, in milliseconds. If the system property is missing or cannot be 
interpreted as an integer, the redraw rate is once every 100ms. 
<pre>
</pre></a>

<dd><a name="44965">The interpretation of the x, y, width, and height arguments depends on the 
infoflags argument.
<pre>
</pre></a>
<dl>
<dt><a name="44966"><b>Parameters:
</b></a><dd><a name="44967"><code>img
- </code></a><a name="44968">the image being observed
</a>
<dd><a name="46992"><code>infoflags
- </code></a><a name="46996">see <a href="javag11.htm#999915">&#167;2.11.9</a> for more information
</a>
<dd><a name="46997"><code>x
- </code></a><a name="44972">an x coordinate
</a>
<dd><a name="44973"><code>y
- </code></a><a name="44974">a y coordinate
</a>
<dd><a name="44975"><code>width
- </code></a><a name="44976">the width
</a>
<dd><a name="44977"><code>height
- </code></a><a name="44978">the height
</a>

<dt><a name="44979"><b>Returns:
</b></a><dd><a name="4415">true if the flags have indicated that the image is completely loaded; 
false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="inside">
<a name="4425"><h3>inside
</h3></a>
<a name="4427"><code>public boolean inside(int &#32;x, int &#32;y)
</code></a>
<dl>
<dd><a name="4429">Determines if the specified <img src="javaad8.gif"> location is inside this component.
<pre>
</pre></a>

<dd><a name="28152">The inside method of Component returns true if the <img src="javaad9.gif"> location is inside 
the bounding box &#32;<a href="javae10.htm#3763">(II-&#167;1.10.3)</a> of the component.
<pre>
</pre></a>
<dl>
<dt><a name="4431"><b>Parameters:
</b></a><dd><a name="4433"><code>x
- </code></a><a name="4435">the x coordinate
</a>
<dd><a name="4437"><code>y
- </code></a><a name="4439">the y coordinate
</a>

<dt><a name="4441"><b>Returns:
</b></a><dd><a name="4443">true if the specified <img src="javaad10.gif"> location lies within this component; false 
otherwise.
</a>

<dt><a name="4445"><b>See Also:
</b></a><dd><a name="4451">locate &#32;<a href="javae10.htm#4763">(II-&#167;1.10.37)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="invalidate">
<a name="4461"><h3>invalidate
</h3></a>
<a name="28217"><code>public void invalidate()
</code></a>
<dl>
<dd><a name="28218">Invalidates this component. This component is marked as having changed. 
The next call to the validate <a href="javae10.htm#5985">(II-&#167;1.10.75)</a> method on this component or its 
parent(s) causes the component to be laid out again.
<pre>
</pre></a>
<dl>
<dt><a name="28219"><b>See Also:
</b></a><dd><a name="46834">layout &#32;<a href="javae10.htm#4683">(II-&#167;1.10.33)</a>
</a>
<dd><a name="46837">LayoutManager &#32;<a href="javac16.htm#51689">(II-&#167;1.43)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isEnabled">
<a name="4491"><h3>isEnabled
</h3></a>
<a name="4493"><code>public boolean isEnabled()
</code></a>
<dl>
<dd><a name="4495">Indicates whether this component is enabled to receive events. By default, 
components are initially enabled.
<pre>
</pre></a>

<dd><a name="53420">A component is disabled by calling its disable method <a href="javae10.htm#3957">(II-&#167;1.10.9)</a>. A component is enabled by calling its enable method <a href="javae10.htm#3983">(II-&#167;1.10.10)</a>
<pre>
</pre></a>
<dl>
<dt><a name="4497"><b>Returns:
</b></a><dd><a name="4499">true if this component is enabled; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isShowing">
<a name="4521"><h3>isShowing
</h3></a>
<a name="4523"><code>public boolean isShowing()
</code></a>
<dl>
<dd><a name="4525">Indicates whether this component is visible. A component is showing if it 
is visible <a href="javae10.htm#4581">(II-&#167;1.10.30)</a> and is inside a container this is both visible and 
showing. 
<pre>
</pre></a>

<dd><a name="53454">A component is hidden by calling its hide method <a href="javae10.htm#53852">(II-&#167;1.10.23)</a>. A component is made visible by calling its show method <a href="javae10.htm#5845">(II-&#167;1.10.70)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="53451"><b>Returns:
</b></a><dd><a name="4529">true if this component is showing; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isValid">
<a name="4551"><h3>isValid
</h3></a>
<a name="4553"><code>public boolean isValid()
</code></a>
<dl>
<dd><a name="4555">Indicates whether this component is valid. A component is valid if it has a 
peer and it and its subcomponents have been properly laid out.
<pre>
</pre></a>
<dl>
<dt><a name="4557"><b>Returns:
</b></a><dd><a name="4559">true if this component is valid; false otherwise.
</a>

<dt><a name="4561"><b>See Also:
</b></a><dd><a name="4571">validate &#32;<a href="javae10.htm#5985">(II-&#167;1.10.75)</a><br>
invalidate &#32;<a href="javae10.htm#4461">(II-&#167;1.10.26)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isVisible">
<a name="4581"><h3>isVisible
</h3></a>
<a name="4583"><code>public boolean isVisible()
</code></a>
<dl>
<dd><a name="4585">Indicates whether this component is visible. Except for top-level components such as a frame, components are visible unless they have been specifically been made invisible by a call to the hide method &#32;<a href="javae10.htm#53852">(II-&#167;1.10.23)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="4587"><b>Returns:
</b></a><dd><a name="28254">true if this component is showing; false otherwise.
</a>

<dt><a name="4591"><b>See Also:
</b></a><dd><a name="4601">show &#32;<a href="javae10.htm#5845">(II-&#167;1.10.70)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="keyDown">
<a name="4611"><h3>keyDown
</h3></a>
<a name="4613"><code>public boolean keyDown(Event &#32;evt, int &#32;key)
</code></a>
<dl>
<dd><a name="4615">This method is called when a key is pressed and this component has the 
focus. This method is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which 
case the key argument contains the key field of the event argument.
<pre>
</pre></a>

<dd><a name="28271">This method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
the component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="28272">The keyDown method of Component simply returns false. 
<pre>
</pre></a>

<dd><a name="45030">Note that the key argument is an int rather than a char.
<pre>
</pre></a>
<dl>
<dt><a name="45027"><b>Parameters:
</b></a><dd><a name="28274"><code>evt
- </code></a><a name="28275">the event that caused the action
</a>
<dd><a name="28276"><code>key
- </code></a><a name="28277">the key that has been pressed 
</a>

<dt><a name="28278"><b>Returns:
</b></a><dd><a name="53874">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="keyUp">
<a name="4647"><h3>keyUp
</h3></a>
<a name="4649"><code>public boolean keyUp(Event &#32;evt, int &#32;key)
</code></a>
<dl>
<dd><a name="28319">This method is called when a key is released and this component has the 
focus. This method is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which 
case the key argument contains the key field of the event argument.
<pre>
</pre></a>

<dd><a name="28320">This method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
this component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="28321">The keyUp method of Component simply returns false.
<pre>
</pre></a>
<dl>
<dt><a name="28322"><b>Note that the key argument is an int rather than a char.
</b></a>
<dt><a name="45041"><b>Parameters:
</b></a><dd><a name="28323"><code>evt
- </code></a><a name="28324">the event that caused the action
</a>
<dd><a name="28325"><code>key
- </code></a><a name="28326">the key that has been pressed 
</a>

<dt><a name="28327"><b>Returns:
</b></a><dd><a name="53876">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="layout">
<a name="4683"><h3>layout
</h3></a>
<a name="4685"><code>public void layout()
</code></a>
<dl>
<dd><a name="4687">This method is called to lay out the subcomponents of this component so 
that they fit inside the borders of this component. 
<pre>
</pre></a>

<dd><a name="38196">This method is called when this component is validated by a call to the validate method <a href="javae10.htm#5985">(II-&#167;1.10.75)</a>. Most applications should not call this method 
directly.
<pre>
</pre></a>

<dd><a name="28391">The layout method of Component does nothing.
<pre>
</pre></a>
<dl>
<dt><a name="4689"><b>See Also:
</b></a><dd><a name="4699">LayoutManager &#32;<a href="javac16.htm#51689">(II-&#167;1.43)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="list">
<a name="4709"><h3>list
</h3></a>
<a name="4711"><code>public void list()
</code></a>
<dl>
<dd><a name="4713">Prints a listing of this component to System.out &#32;<a href="java9.htm#10738">(I-&#167;1.18.3)</a>.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="list">
<a name="4721"><h3>list
</h3></a>
<a name="4723"><code>public void list(PrintStream &#32;out)
</code></a>
<dl>
<dd><a name="4725">Prints a listing of this component to the specified output stream.
<pre>
</pre></a>
<dl>
<dt><a name="4727"><b>Parameters:
</b></a><dd><a name="4729"><code>out
- </code></a><a name="4731">a print stream
</a>
</dl></dl>

<META NAME="keywords" CONTENT="list">
<a name="4739"><h3>list
</h3></a>
<a name="28406"><code>public void list(PrintStream &#32;out, int &#32;indent)
</code></a>
<dl>
<dd><a name="28407">Prints a listing of this component to the specified output stream. The listing starts at the specified indentation.
<pre>
</pre></a>

<dd><a name="29467">The list method of Component calls the println method <a href="javad4.htm#7382">(I-&#167;2.18.23)</a> on the 
component after indenting by the specified amount.
<pre>
</pre></a>
<dl>
<dt><a name="28408"><b>Parameters:
</b></a><dd><a name="4747"><code>out
- </code></a><a name="4749">a print stream
</a>
<dd><a name="4751"><code>indent
- </code></a><a name="4753">number of spaces to indent
</a>
</dl></dl>

<META NAME="keywords" CONTENT="locate">
<a name="4763"><h3>locate
</h3></a>
<a name="4765"><code>public Component locate(int &#32;x, int &#32;y)
</code></a>
<dl>
<dd><a name="28435">Determines if this component or one of its subcomponents contains the 
<img src="javaac11.gif"> coordinate, and if so returns the containing component. This 
method only looks one level deep. If the point <img src="javaac12.gif"> is inside a subcomponent that itself has subcomponents, it does not go looking down the subcomponent tree.
<pre>
</pre></a>

<dd><a name="29499">The locate method of Component simply returns the component itself if the 
<img src="javaac13.gif"> coordinate is inside <a href="javae10.htm#4425">(II-&#167;1.10.25)</a> its bounding box, and null otherwise.
<pre>
</pre></a>
<dl>
<dt><a name="4769"><b>Parameters:
</b></a><dd><a name="4771"><code>x
- </code></a><a name="4773">the x coordinate
</a>
<dd><a name="4775"><code>y
- </code></a><a name="4777">the y coordinate
</a>

<dt><a name="4779"><b>Returns:
</b></a><dd><a name="4781">the component or subcomponent that contains the <img src="javaab14.gif"> coordinate ; 
null if the coordinate is outside this component.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="location">
<a name="4799"><h3>location
</h3></a>
<a name="4801"><code>public Point location()
</code></a>
<dl><dl>
<dt><a name="4805"><b>Returns:
</b></a><dd><a name="4807">the location of this component in its parent's coordinate space.
</a>

<dt><a name="4809"><b>See Also:
</b></a><dd><a name="4815">move &#32;<a href="javae10.htm#5135">(II-&#167;1.10.47)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="lostFocus">
<a name="4825"><h3>lostFocus
</h3></a>
<a name="4827"><code>public boolean lostFocus(Event &#32;evt, Object &#32;what)
</code></a>
<dl>
<dd><a name="28458">This method is called when this component loses the input focus. This 
method is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which case the 
what argument contains the arg field of the event argument.
<pre>
</pre></a>

<dd><a name="45079">This method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
this component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="45080">The getFocus method of Component simply returns false.
<pre>
</pre></a>

<dd><a name="45053">The what argument is currently always null.
<pre>
</pre></a>
<dl>
<dt><a name="28461"><b>Parameters:
</b></a><dd><a name="28462"><code>evt
- </code></a><a name="28463">the event that caused the action
</a>
<dd><a name="28464"><code>what
- </code></a><a name="28465">the action that's occuring
</a>

<dt><a name="28466"><b>Returns:
</b></a><dd><a name="53878">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>

<dt><a name="4845"><b>See Also:
</b></a><dd><a name="4855">requestFocus &#32;<a href="javae10.htm#5625">(II-&#167;1.10.63)</a><br>
gotFocus &#32;<a href="javae10.htm#4255">(II-&#167;1.10.21)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="minimumSize">
<a name="4865"><h3>minimumSize
</h3></a>
<a name="4867"><code>public Dimension minimumSize()
</code></a>
<dl>
<dd><a name="4869">Determines the minimum size of thiscomponent. 
<pre>
</pre></a>

<dd><a name="52585">The minimumSize method of Component checks to see if the component has a 
peer <a href="javae10.htm#4219">(II-&#167;1.10.19)</a>. If so, the minimumSize request is passed to the peer 
<a href="javal6.htm#795">(II-&#167;3.6.13)</a>. Otherwise, the minimum size is the width and height specified by the most recent reshape <a href="javae10.htm#5647">(II-&#167;1.10.64)</a> or resize <a href="javae10.htm#5695">(II-&#167;1.10.65)</a> method 
call.
<pre>
</pre></a>
<dl>
<dt><a name="4871"><b>Returns:
</b></a><dd><a name="4873">the minimum size of this component.
</a>

<dt><a name="4875"><b>See Also:
</b></a><dd><a name="4885">preferredSize &#32;<a href="javae10.htm#5307">(II-&#167;1.10.53)</a><br>
LayoutManager &#32;<a href="javac16.htm#51689">(II-&#167;1.43)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="mouseDown">
<a name="4895"><h3>mouseDown
</h3></a>
<a name="4897"><code>public boolean mouseDown(Event &#32;evt, int &#32;x, int &#32;y)
</code></a>
<dl>
<dd><a name="38223">This method is called when the mouse button is pushed inside this component. This method is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which 
case the x and y arguments contains the x and y field of the event argument.The <img src="javaaa15.gif"> coordinate is relative to the top-left corner of this component.
<pre>
</pre></a>

<dd><a name="28554">This method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
this component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="28556">The mouseDown method of Component simply returns false.
<pre>
</pre></a>
<dl>
<dt><a name="28557"><b>Parameters:
</b></a><dd><a name="28558"><code>evt
- </code></a><a name="28559">the event that caused the action
</a>
<dd><a name="28576"><code>x
- </code></a><a name="28577">the x coordinate 
</a>
<dd><a name="28578"><code>y
- </code></a><a name="28579">the y coordinate
</a>

<dt><a name="53530"><b>Returns:
</b></a><dd><a name="53880">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="mouseDrag">
<a name="4935"><h3>mouseDrag
</h3></a>
<a name="4937"><code>public boolean mouseDrag(Event &#32;evt, int &#32;x, int &#32;y)
</code></a>
<dl>
<dd><a name="38228">This method is called when the mouse button is moved inside this component with the button pushed. This method is usually called by handleEvent 
<a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which case the x and y arguments contains the x and y 
field of the event argument.The <img src="javaaa16.gif"> coordinate is relative to the top-
left corner of this component.
<pre>
</pre></a>

<dd><a name="45062">Mouse drag events continue to get sent to this component even when the 
mouse has left the bounds of the component. The drag events continue 
until a mouse up event occurs.
<pre>
</pre></a>

<dd><a name="28690">This method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
this component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="28691">The mouseDrag method of Component simply returns false.
<pre>
</pre></a>
<dl>
<dt><a name="28692"><b>Parameters:
</b></a><dd><a name="28693"><code>evt
- </code></a><a name="28694">the event that caused the action
</a>
<dd><a name="28695"><code>x
- </code></a><a name="28696">the x coordinate 
</a>
<dd><a name="28697"><code>y
- </code></a><a name="28698">the y coordinate 
</a>

<dt><a name="53533"><b>Returns:
</b></a><dd><a name="53882">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="mouseEnter">
<a name="4975"><h3>mouseEnter
</h3></a>
<a name="38237"><code>public boolean mouseEnter(Event &#32;evt, int &#32;x, int &#32;y)
</code></a>
<dl>
<dd><a name="38238">This method is called when the mouse first enters this component. This 
method is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which case the x 
and y arguments contains the x and y field of the event argument. The 
<img src="javaaa17.gif"> coordinate is relative to the top-left corner of this component.
<pre>
</pre></a>

<dd><a name="38239">This method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
this component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="28707">The mouseEnter method of Component simply returns false.
<pre>
</pre></a>
<dl>
<dt><a name="28708"><b>Parameters:
</b></a><dd><a name="28709"><code>evt
- </code></a><a name="28710">the event that caused the action
</a>
<dd><a name="28711"><code>x
- </code></a><a name="28712">the x coordinate
</a>
<dd><a name="28713"><code>y
- </code></a><a name="28714">the y coordinate
</a>

<dt><a name="53536"><b>Returns:
</b></a><dd><a name="53884">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="mouseExit">
<a name="5015"><h3>mouseExit
</h3></a>
<a name="5017"><code>public boolean mouseExit(Event &#32;evt, int &#32;x, int &#32;y)
</code></a>
<dl>
<dd><a name="28655">This method is called when the mouse exits this component. This method 
is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which case the x and y 
arguments contains the x and y field of the event argument. The <img src="javaaa18.gif"> 
coordinate is relative to the top-left corner of this component. Most applications should return either true or the value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="54008">This method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
this component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="28657">The mouseEixt method of Component simply returns false.
<pre>
</pre></a>
<dl>
<dt><a name="28658"><b>Parameters:
</b></a><dd><a name="28659"><code>evt
- </code></a><a name="28660">the event that caused the action
</a>
<dd><a name="28661"><code>x
- </code></a><a name="28662">the x coordinate
</a>
<dd><a name="28663"><code>y
- </code></a><a name="28664">the y coordinate
</a>

<dt><a name="53543"><b>Returns:
</b></a><dd><a name="53888">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="mouseMove">
<a name="5055"><h3>mouseMove
</h3></a>
<a name="5057"><code>public boolean mouseMove(Event &#32;evt, int &#32;x, int &#32;y)
</code></a>
<dl>
<dd><a name="28725">This method is called when the mouse is moved inside this component 
with the mouse button not pushed. This method is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in which case the x and y arguments contains the x 
and y field of the event argument. The <img src="javaa19.gif"> coordinate is relative to the 
top-left corner of this component.
<pre>
</pre></a>

<dd><a name="28726">This method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
this component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="28727">The mouseMove method of Component simply returns false.
<pre>
</pre></a>
<dl>
<dt><a name="28728"><b>Parameters:
</b></a><dd><a name="28729"><code>evt
- </code></a><a name="28730">the event that caused the action
</a>
<dd><a name="28731"><code>x
- </code></a><a name="28732">the x coordinate
</a>
<dd><a name="28733"><code>y
- </code></a><a name="28734">the y coordinate
</a>

<dt><a name="53546"><b>Returns:
</b></a><dd><a name="53886">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="mouseUp">
<a name="5095"><h3>mouseUp
</h3></a>
<a name="5097"><code>public boolean mouseUp(Event &#32;evt, int &#32;x, int &#32;y)
</code></a>
<dl>
<dd><a name="28673">This method is called when the mouse button is released inside this component. This method is usually called by handleEvent <a href="javae10.htm#4295">(II-&#167;1.10.22)</a>, in 
which case the x and y arguments contains the x and y field of the event 
argument. The <img src="javaa20.gif"> coordinate is relative to the top-left corner of the 
component.
<pre>
</pre></a>

<dd><a name="54010">This method returns true to indicate that it has successfully handled the 
action; or false if the event that triggered the action should be passed up to 
this component's parent. Most applications should return either true or the 
value of super.handleEvent(evt).
<pre>
</pre></a>

<dd><a name="28675">The mouseUp method of Component simply returns false.
<pre>
</pre></a>
<dl>
<dt><a name="28676"><b>Parameters:
</b></a><dd><a name="28677"><code>evt
- </code></a><a name="28678">the event that caused the action
</a>
<dd><a name="28679"><code>x
- </code></a><a name="28680">the x coordinate 
</a>
<dd><a name="28681"><code>y
- </code></a><a name="28682">the y coordinate 
</a>

<dt><a name="53549"><b>Returns:
</b></a><dd><a name="53890">true if the event has been handled and no further action is necessary; 
false if the event is to be given to the component's parent.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="move">
<a name="5135"><h3>move
</h3></a>
<a name="5137"><code>public void move(int &#32;x, int &#32;y)
</code></a>
<dl>
<dd><a name="5139">Moves this component to the coordinate <img src="javaa21.gif"> in the parent's coordinate 
space. The <img src="javaa22.gif"> coordinate is relative to the top-left corner of the parent component.
<pre>
</pre></a>

<dd><a name="5141">Components that are in a container with a layout manager should not call 
this method explicitly.
<pre>
</pre></a>
<dl>
<dt><a name="46150"><b>Parameters:
</b></a><dd><a name="5143"><code>x
- </code></a><a name="5145">the x coordinate
</a>
<dd><a name="5147"><code>y
- </code></a><a name="5149">the y coordinate
</a>

<dt><a name="5151"><b>See Also:
</b></a><dd><a name="5161">location &#32;<a href="javae10.htm#4799">(II-&#167;1.10.38)</a><br>
reshape &#32;<a href="javae10.htm#5647">(II-&#167;1.10.64)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="nextFocus">
<a name="5171"><h3>nextFocus
</h3></a>
<a name="5173"><code>public void nextFocus()
</code></a>
<dl>
<dd><a name="5175">Moves the input focus to the next component, as determined by the component's peer <a href="javal6.htm#807">(II-&#167;3.6.14)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="28779"><b>See Also:
</b></a><dd><a name="5187">requestFocus &#32;<a href="javae10.htm#5625">(II-&#167;1.10.63)</a><br>
gotFocus &#32;<a href="javae10.htm#4255">(II-&#167;1.10.21)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="paint">
<a name="5197"><h3>paint
</h3></a>
<a name="5199"><code>public void paint(Graphics &#32;g)
</code></a>
<dl>
<dd><a name="5201">Paints this component. Most application components, including applets, 
override this method.
<pre>
</pre></a>

<dd><a name="28792">The paint method of Component calls the repaint method <a href="javal6.htm#867">(II-&#167;3.6.19)</a> of this 
component's peer.
<pre>
</pre></a>

<dd><a name="38284">The <img src="javaa23.gif"> coordinate of the graphics context is the top-left corner of this 
components. The clipping region of the graphics context is the bounding 
rectangle of this component.
<pre>
</pre></a>

<dd><a name="54022">The paint method of Component calls the repaint method <a href="javal6.htm#867">(II-&#167;3.6.19)</a> of this 
component's peer.
<pre>
</pre></a>
<dl>
<dt><a name="5203"><b>Parameters:
</b></a><dd><a name="5205"><code>g
- </code></a><a name="5207">the graphics context to use for painting
</a>

<dt><a name="5209"><b>See Also:
</b></a><dd><a name="5215">update &#32;<a href="javae10.htm#5953">(II-&#167;1.10.74)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="paintAll">
<a name="5225"><h3>paintAll
</h3></a>
<a name="5227"><code>public void paintAll(Graphics &#32;g)
</code></a>
<dl>
<dd><a name="38294">Paints this component and all of its subcomponents.
<pre>
</pre></a>
<dl>
<dt><a name="38295"><b>The <img src="javaa24.gif"> coordinate of the graphics context is the top-left corner of this 
component. The clipping region of the graphics context is the bounding 
rectangle of this component
</b></a>
<dt><a name="38297"><b>Parameters:
</b></a><dd><a name="38296"><code>g
- </code></a><a name="5235">the graphics context to use for painting
</a>

<dt><a name="5237"><b>See Also:
</b></a><dd><a name="5243">paint &#32;<a href="javae10.htm#5197">(II-&#167;1.10.49)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="paramString">
<a name="5253"><h3>paramString
</h3></a>
<a name="5255"><code>protected String paramString()
</code></a>
<dl>
<dd><a name="54099">Returns the parameter string representing the state of this component. This 
string is useful for debugging.
<pre>
</pre></a>
<dl>
<dt><a name="28805"><b>Returns:
</b></a><dd><a name="26919">the parameter string of this component.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="postEvent">
<a name="5271"><h3>postEvent
</h3></a>
<a name="5273"><code>public boolean postEvent(Event &#32;evt)
</code></a>
<dl>
<dd><a name="5275">Posts an event to this component by calling its handleEvent method 
<a href="javae10.htm#4295">(II-&#167;1.10.22)</a>. If handleEvent returns false, the event is posted to this component's parent.
<pre>
</pre></a>

<dd><a name="44939">If this component and all of its parents return false, the event is passed to 
this component's peer object's handleEvent method &#32;<a href="javal6.htm#771">(II-&#167;3.6.11)</a>. 
<pre>
</pre></a>
<dl>
<dt><a name="5277"><b>Parameters:
</b></a><dd><a name="5279"><code>evt
- </code></a><a name="5281">the event
</a>

<dt><a name="5283"><b>Returns:
</b></a><dd><a name="5285">true if this component, one of its parents, or this component's peer 
handled the event; false otherwise.
</a>

<dt><a name="5287"><b>See Also:
</b></a><dd><a name="53583">deliverEvent &#32;<a href="javae10.htm#3925">(II-&#167;1.10.8)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="preferredSize">
<a name="5307"><h3>preferredSize
</h3></a>
<a name="5309"><code>public Dimension this()
</code></a>
<dl>
<dd><a name="28526">Determines the preferred size of the component. 
<pre>
</pre></a>

<dd><a name="52582">The preferredSize method of Component checks to see if this component has a 
peer <a href="javae10.htm#4219">(II-&#167;1.10.19)</a>. If so, the preferredSize request is passed to the peer 
<a href="javal6.htm#28523">(II-&#167;3.6.16)</a>. Otherwise, the preferred size is the width and height specified 
by the most recent reshape <a href="javae10.htm#5647">(II-&#167;1.10.64)</a> or resize <a href="javae10.htm#5695">(II-&#167;1.10.65)</a> method call.
<pre>
</pre></a>
<dl>
<dt><a name="28540"><b>Returns:
</b></a><dd><a name="28541">the preferred size of this component.
</a>

<dt><a name="5317"><b>See Also:
</b></a><dd><a name="5327">minimumSize &#32;<a href="javae10.htm#4865">(II-&#167;1.10.40)</a><br>
LayoutManager &#32;<a href="javac16.htm#51689">(II-&#167;1.43)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="prepareImage">
<a name="54580"><h3>prepareImage
</h3></a>
<a name="54581"><code>public boolean 
</code></a>
<a name="54582"><code>prepareImage(Image &#32;image, ImageObserver &#32;observer)
</code></a>
<dl>
<dd><a name="5341">Prepares an image for rendering on this component. 
<pre>
</pre></a>

<dd><a name="28823">The image data is downloaded asynchronously in another thread and the 
appropriate screen representation of the image is generated.
<pre>
</pre></a>
<dl>
<dt><a name="5343"><b>Parameters:
</b></a><dd><a name="5345"><code>image
- </code></a><a name="5347">the Image to prepare a screen representation for
</a>
<dd><a name="5349"><code>observer
- </code></a><a name="5351">the ImageObserver <a href="javag11.htm#999757">(II-&#167;2.11)</a> object to be notified as the image 
is being prepared
</a>

<dt><a name="5353"><b>Returns:
</b></a><dd><a name="5355">true if the image has already been fully prepared; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="prepareImage">
<a name="5371"><h3>prepareImage
</h3></a>
<a name="5373"><code>public boolean<br>
prepareImage(Image &#32;image, int &#32;width, int &#32;height,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;ImageObserver &#32;observer)
</code></a>
<dl>
<dd><a name="5375">Prepares an image for rendering on this component at the specified width 
and height. 
<pre>
</pre></a>

<dd><a name="28826">The image data is downloaded asynchronously in another thread and an 
appropriately scaled screen representation of the image is generated.
<pre>
</pre></a>
<dl>
<dt><a name="5377"><b>Parameters:
</b></a><dd><a name="5379"><code>image
- </code></a><a name="5381">the Image to prepare a screen representation for
</a>
<dd><a name="5383"><code>width
- </code></a><a name="5385">the width of the desired screen representation
</a>
<dd><a name="5387"><code>height
- </code></a><a name="5389">the height of the desired screen representation
</a>
<dd><a name="5391"><code>observer
- </code></a><a name="5393">the ImageObserver <a href="javag11.htm#999757">(II-&#167;2.11)</a> object to be notified as the image 
is being prepared
</a>

<dt><a name="5395"><b>Returns:
</b></a><dd><a name="5397">true if the image has already been fully prepared; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="print">
<a name="5415"><h3>print
</h3></a>
<a name="5417"><code>public void print(Graphics &#32;g)
</code></a>
<dl>
<dd><a name="5419">Prints this component. Applications should override this method for components that must do special processing before being printed.
<pre>
</pre></a>

<dd><a name="28830">The print method of Component calls the paint method <a href="javae10.htm#5197">(II-&#167;1.10.49)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="38307"><b>The<img src="javaa25.gif"> coordinate of the graphics context is the top-left corner of this 
component. The clipping region of the graphics context is the bounding 
rectangle of this component
</b></a>
<dt><a name="5421"><b>Parameters:
</b></a><dd><a name="5423"><code>g
- </code></a><a name="5425">the graphics context to use for printing
</a>

<dt><a name="5427"><b>See Also:
</b></a><dd><a name="5433">paint &#32; &#32;<a href="javae10.htm#5197">(II-&#167;1.10.49)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="printAll">
<a name="5443"><h3>printAll
</h3></a>
<a name="5445"><code>public void printAll(Graphics &#32;g)
</code></a>
<dl>
<dd><a name="5447">Paints this component and all of its subcomponents.
<pre>
</pre></a>
<dl>
<dt><a name="38312"><b>The <img src="javaa26.gif"> coordinate of the graphics context is the top-left corner of this 
component. The clipping region of the graphics context is the bounding 
rectangle of this component
</b></a>
<dt><a name="5449"><b>Parameters:
</b></a><dd><a name="5451"><code>g
- </code></a><a name="5453">the graphics context to use for printing
</a>

<dt><a name="5455"><b>See Also:
</b></a><dd><a name="5461">print &#32;<a href="javae10.htm#5415">(II-&#167;1.10.56)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="removeNotify">
<a name="5471"><h3>removeNotify
</h3></a>
<a name="29640"><code>public void removeNotify()
</code></a>
<dl>
<dd><a name="29641">Notifies this component and all its subcomponents to destroy their peers. 
Applications should not call this method directly. It is called when a component is removed (<a href="javae11.htm#6747">&#167;1.11.19</a> <a href="javae11.htm#6775">&#167;1.11.20</a>) from its container. 
<pre>
</pre></a>

<dd><a name="29642">The removeNotify method of Component removes the components peer and 
has the peer clean up after itself by calling its dispose method &#32;<a href="javal6.htm#699">(II-&#167;3.6.5)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="5477"><b>See Also:
</b></a><dd><a name="5487">getPeer &#32;<a href="javae10.htm#4219">(II-&#167;1.10.19)</a><br>
addNotify &#32;<a href="javae10.htm#3737">(II-&#167;1.10.2)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="repaint">
<a name="5497"><h3>repaint
</h3></a>
<a name="5499"><code>public void repaint()
</code></a>
<dl>
<dd><a name="5501">Repaints this component. 
<pre>
</pre></a>

<dd><a name="28877">This method causes a call to this component's update method &#32;<a href="javae10.htm#5953">(II-&#167;1.10.74)</a> 
as soon as possible.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="repaint">
<a name="5517"><h3>repaint
</h3></a>
<a name="5519"><code>public void<br>
repaint(int &#32;x, int &#32;y, int &#32;width, int &#32;height)
</code></a>
<dl>
<dd><a name="5521">Repaints the specified rectangle of this component.
<pre>
</pre></a>

<dd><a name="28895">This method causes a call to this component's update method &#32;<a href="javae10.htm#5953">(II-&#167;1.10.74)</a> 
as soon as possible.
<pre>
</pre></a>
<dl>
<dt><a name="5523"><b>Parameters:
</b></a><dd><a name="5525"><code>x
- </code></a><a name="5527">the x coordinate
</a>
<dd><a name="5529"><code>y
- </code></a><a name="5531">the y coordinate
</a>
<dd><a name="5533"><code>width
- </code></a><a name="5535">the width
</a>
<dd><a name="5537"><code>height
- </code></a><a name="5539">the height
</a>
</dl></dl>

<META NAME="keywords" CONTENT="repaint">
<a name="5555"><h3>repaint
</h3></a>
<a name="5557"><code>public void repaint(long &#32;tm)
</code></a>
<dl>
<dd><a name="28907">Repaints theis component within tm milliseconds.
<pre>
</pre></a>

<dd><a name="28911">This method causes a call to this component's update method <a href="javae10.htm#5953">(II-&#167;1.10.74)</a>. 
<pre>
</pre></a>
<dl>
<dt><a name="28912"><b>Parameters:
</b></a><dd><a name="28913"><code>tm
- </code></a><a name="5565">maximum time in milliseconds before update
</a>
</dl></dl>

<META NAME="keywords" CONTENT="repaint">
<a name="5581"><h3>repaint
</h3></a>
<a name="5583"><code>public void repaint(long &#32;tm, int &#32;x, int &#32;y,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;width, int &#32;height)
</code></a>
<dl>
<dd><a name="28920">Repaints the specified rectangle of this component within tm milliseconds.
<pre>
</pre></a>

<dd><a name="28918">This method causes a call to this component's update method <a href="javae10.htm#5953">(II-&#167;1.10.74)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="5587"><b>Parameters:
</b></a><dd><a name="5589"><code>tm
- </code></a><a name="5591">maximum time in milliseconds before update
</a>
<dd><a name="5593"><code>x
- </code></a><a name="5595">the x coordinate
</a>
<dd><a name="5597"><code>y
- </code></a><a name="5599">the y coordinate
</a>
<dd><a name="5601"><code>width
- </code></a><a name="5603">the width
</a>
<dd><a name="5605"><code>height
- </code></a><a name="5607">the height
</a>
</dl></dl>

<META NAME="keywords" CONTENT="requestFocus">
<a name="5625"><h3>requestFocus
</h3></a>
<a name="5627"><code>public void requestFocus()
</code></a>
<dl>
<dd><a name="50038">Requests that this component get the input focus
<pre>
</pre></a>

<dd><a name="50042">This component's gotFocus method <a href="javae10.htm#4255">(II-&#167;1.10.21)</a> is called when this 
method is successful.
<pre>
</pre></a>

<dd><a name="50043">The requestFocus method of Component calls the request-Focus method 
<a href="javal6.htm#26704">(II-&#167;3.6.21)</a> of the component's peer.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="reshape">
<a name="5647"><h3>reshape
</h3></a>
<a name="5649"><code>public void reshape(int &#32;x, int &#32;y, int &#32;width, int &#32;height)
</code></a>
<dl>
<dd><a name="5651">Reshapes this component to the specified bounding box in its parent's 
coordinate space. Components that are in a container with a layout manager should not call this method explicitly.
<pre>
</pre></a>
<dl>
<dt><a name="5653"><b>Parameters:
</b></a><dd><a name="5655"><code>x
- </code></a><a name="5657">the x coordinate
</a>
<dd><a name="5659"><code>y
- </code></a><a name="5661">the y coordinate
</a>
<dd><a name="5663"><code>width
- </code></a><a name="5665">the width of this component
</a>
<dd><a name="5667"><code>height
- </code></a><a name="5669">the height of this component
</a>

<dt><a name="5671"><b>See Also:
</b></a><dd><a name="5685">bounds &#32;<a href="javae10.htm#3763">(II-&#167;1.10.3)</a><br>
move &#32;<a href="javae10.htm#5135">(II-&#167;1.10.47)</a><br>
resize &#32;<a href="javae10.htm#5725">(II-&#167;1.10.66)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="resize">
<a name="5695"><h3>resize
</h3></a>
<a name="5697"><code>public void resize(Dimension &#32;d)
</code></a>
<dl>
<dd><a name="28971">Resizes this component to the width and height specified by the dimension 
argument. Components that are in a container with a layout manager 
should not call this method explicitly.
<pre>
</pre></a>
<dl>
<dt><a name="28993"><b>Parameters:
</b></a><dd><a name="28994"><code>d
- </code></a><a name="28995">the new dimension for this component
</a>

<dt><a name="28981"><b>See Also:
</b></a><dd><a name="5717">size &#32;<a href="javae10.htm#5901">(II-&#167;1.10.72)</a><br>
reshape &#32;<a href="javae10.htm#5647">(II-&#167;1.10.64)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="resize">
<a name="5725"><h3>resize
</h3></a>
<a name="5727"><code>public void resize(int &#32;width, int &#32;height)
</code></a>
<dl>
<dd><a name="5729">Resizes this component to the specified width and height. Components 
that are in a container with a layout manager should not call this method 
explicitly.
<pre>
</pre></a>
<dl>
<dt><a name="5731"><b>Parameters:
</b></a><dd><a name="5733"><code>width
- </code></a><a name="5735">the new width of this component
</a>
<dd><a name="5737"><code>height
- </code></a><a name="5739">the new height of this component
</a>

<dt><a name="5741"><b>See Also:
</b></a><dd><a name="5751">size &#32;<a href="javae10.htm#5901">(II-&#167;1.10.72)</a><br>
reshape &#32;<a href="javae10.htm#5647">(II-&#167;1.10.64)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="setBackground">
<a name="5761"><h3>setBackground
</h3></a>
<a name="5763"><code>public void setBackground(Color &#32;c)
</code></a>
<dl>
<dd><a name="5765">Sets the background color of this component.
<pre>
</pre></a>

<dd><a name="29065">The setBackground method of Component calls the setBackground method 
<a href="javal6.htm#903">(II-&#167;3.6.23)</a> of the component's peer.
<pre>
</pre></a>
<dl>
<dt><a name="5767"><b>Parameters:
</b></a><dd><a name="5769"><code>c
- </code></a><a name="5771">the color
</a>

<dt><a name="5773"><b>See Also:
</b></a><dd><a name="5779">getBackground &#32;<a href="javae10.htm#4039">(II-&#167;1.10.12)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="setFont">
<a name="5789"><h3>setFont
</h3></a>
<a name="5791"><code>public void setFont(Font &#32;f)
</code></a>
<dl>
<dd><a name="5793">Sets the font of this component.
<pre>
</pre></a>

<dd><a name="29075">The setFont method of Component calls the setFont method <a href="javal6.htm#915">(II-&#167;3.6.24)</a> of the 
component's peer.
<pre>
</pre></a>
<dl>
<dt><a name="29073"><b>Parameters:
</b></a><dd><a name="5797"><code>f
- </code></a><a name="5799">the font
</a>

<dt><a name="5801"><b>See Also:
</b></a><dd><a name="5807">getFont &#32;<a href="javae10.htm#52173">(II-&#167;1.10.14)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="setForeground">
<a name="5817"><h3>setForeground
</h3></a>
<a name="5819"><code>public void setForeground(Color &#32;c)
</code></a>
<dl>
<dd><a name="29084">Sets the foreground color of this component.
<pre>
</pre></a>

<dd><a name="29085">The setForeground method of Component calls the setForeground method 
<a href="javal6.htm#927">(II-&#167;3.6.25)</a> of the component's peer.
<pre>
</pre></a>
<dl>
<dt><a name="5823"><b>Parameters:
</b></a><dd><a name="5825"><code>c
- </code></a><a name="30363">the color
</a>

<dt><a name="30364"><b>See Also:
</b></a><dd><a name="30368">getForeground &#32;<a href="javae10.htm#4149">(II-&#167;1.10.16)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="show">
<a name="5845"><h3>show
</h3></a>
<a name="5847"><code>public void show()
</code></a>
<dl>
<dd><a name="5849">Shows this component; if this component had been made invisible by a 
call to the hide method &#32;<a href="javae10.htm#53852">(II-&#167;1.10.23)</a>, makes this component visible again.
<pre>
</pre></a>
<dl>
<dt><a name="5851"><b>See Also:
</b></a><dd><a name="29146">isVisible &#32;<a href="javae10.htm#4581">(II-&#167;1.10.30)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="show">
<a name="30416"><h3>show
</h3></a>
<a name="29150"><code>public void show(boolean &#32;cond)
</code></a>
<dl>
<dd><a name="29154">If the boolean argument is true, makes this component visible. If false, makes 
this component invisible.
<pre>
</pre></a>
<dl>
<dt><a name="5875"><b>Parameters:
</b></a><dd><a name="5877"><code>cond
- </code></a><a name="5879">if true, show this component; if false, hide this component.
</a>

<dt><a name="5881"><b>See Also:
</b></a><dd><a name="5891">show &#32;<a href="javae10.htm#5845">(II-&#167;1.10.70)</a><br>
hide &#32;<a href="javae10.htm#53852">(II-&#167;1.10.23)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="size">
<a name="5901"><h3>size
</h3></a>
<a name="5903"><code>public Dimension size()
</code></a>
<dl><dl>
<dt><a name="52588"><b>Returns:
</b></a><dd><a name="5909">the current size of this component.
</a>

<dt><a name="5911"><b>See Also:
</b></a><dd><a name="5917">resize &#32;<a href="javae10.htm#5695">(II-&#167;1.10.65)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="toString">
<a name="5927"><h3>toString
</h3></a>
<a name="5929"><code>public String toString()
</code></a>
<dl><dl>
<dt><a name="27197"><b>Returns:
</b></a><dd><a name="27198">a string representation of this component.
</a>

<dt><a name="5937"><b>Overrides:
</b></a><dd><a name="5943">toString in class Object &#32;<a href="java3.htm#6228">(I-&#167;1.12.9)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="update">
<a name="5953"><h3>update
</h3></a>
<a name="5955"><code>public void update(Graphics &#32;g)
</code></a>
<dl>
<dd><a name="5957">Updates this component. 
<pre>
</pre></a>

<dd><a name="29173">The AWT calls the update method in response to a call to repaint &#32; 
<a href="javae10.htm#5497">(II-&#167;1.10.59)</a>. The appearance of the component on the screen has not 
changed since the last call to update or paint.
<pre>
</pre></a>

<dd><a name="29211">The update method of Component:
<pre>
</pre></a>
<ol>
<li><a name="29212">Clears this component by filling it with the background color.
</a></ol>
<ol>
<li><a name="29215">Sets the color of the graphics context to be the foreground color of this 
component.
</a><li><a name="29219">Calls this component's paint &#32;method <a href="javae10.htm#5197">(II-&#167;1.10.49)</a> to completely redraw 
this component.
</a>
<dt><a name="38321"><b>The <img src="javaa27.gif"> coordinate of the graphics context is the top-left corner of this 
components. The clipping region of the graphics context is the bounding 
rectangle of this component
</b></a>
<dt><a name="5959"><b>Parameters:
</b></a><dd><a name="5961"><code>g
- </code></a><a name="5963">the graphics context to use for updating
</a>
</ol>
</dl>

<META NAME="keywords" CONTENT="validate">
<a name="5985"><h3>validate
</h3></a>
<a name="5987"><code>public void validate()
</code></a>
<dl>
<dd><a name="5989">Validates this component if necessary. This component and any subcomponents are laid out <a href="javae10.htm#4683">(II-&#167;1.10.33)</a> again, if necessary.
<pre>
</pre></a>
<dl>
<dt><a name="5991"><b>See Also:
</b></a><dd><a name="6005">invalidate &#32;<a href="javae10.htm#4461">(II-&#167;1.10.26)</a><br>
LayoutManager &#32;<a href="javac16.htm#51689">(II-&#167;1.43)</a>.
</a>
</dl></dl>

<hr>
<sup>1</sup><!--"Footnote" is same tag as body.-->
<a name="44954">In Java 1.0, AWT does not send all components mouse, keyboard, and focus 
events. Each component documents the events that AWT sends it.
</a><p><!-- This inserts footnotes--><p>
<pre><a href="javabooa.htm">Packages</a>  <a href="javag.htm">This Package</a>  <a href="javag9.htm">Prev</a>  <a href="javae11.htm">Next</a>  <a href="javabook.htm">Index</a></pre>
<font size=-1>Java API Document (HTML generated by dkramer on April 22, 1996)<br>
<a href="copyrigh.htm">Copyright &#169 1996 Sun Microsystems, Inc.</a>
All rights reserved<br>
Please send any comments or corrections to <a href="mailto:doug.kramer@sun.com"-->doug.kramer@sun.com</a>
</font>
</body></html>
