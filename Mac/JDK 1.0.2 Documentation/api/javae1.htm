<html><head><title>Class BitSet</title></head>
<!--Intermediate split file from a FrameMaker file-->
<body bgcolor=#ffffff>

<pre><a href="javabooa.htm">Packages</a>  <a href="javae.htm">This Package</a>  <a href="javae.htm">Prev</a>  <a href="javae2.htm">Next</a>  <a href="javabook.htm">Index</a>  </pre>


<hr>
<a name="31209"><h1>	&#167;3.1 Class BitSet</h1></a>
<pre>public &#32;final &#32;class &#32;java.util.<strong>BitSet
</strong>    extends &#32;java.lang.<strong>Object</strong> &#32;<a href="java3.htm#5914">(I-&#167;1.12)</a>
    implements java.lang.<strong>Cloneable</strong> &#32;<a href="javab4.htm#45621">(I-&#167;1.22)</a>
{
 &#32; &#32; &#32; &#32;// Constructors
    public <strong>BitSet</strong>();	<a href="javae1.htm#318">&#167;3.1.1</a>
    public <strong>BitSet</strong>(int &#32;nbits);	<a href="javae1.htm#330">&#167;3.1.2</a>

 &#32; &#32; &#32; &#32;// Methods
    public void <strong>and</strong>(BitSet &#32;set);	<a href="javae1.htm#352">&#167;3.1.3</a>
    public void <strong>clear</strong>(int &#32;bit);	<a href="javae1.htm#372">&#167;3.1.4</a>
    public Object <strong>clone</strong>();	<a href="javae1.htm#392">&#167;3.1.5</a>
    public boolean <strong>equals</strong>(Object &#32;obj);	<a href="javae1.htm#418">&#167;3.1.6</a>
    public boolean <strong>get</strong>(int &#32;bit);	<a href="javae1.htm#450">&#167;3.1.7</a>
    public int <strong>hashCode</strong>();	<a href="javae1.htm#474">&#167;3.1.8</a>
    public void <strong>or</strong>(BitSet &#32;set);	<a href="javae1.htm#500">&#167;3.1.9</a>
    public void <strong>set</strong>(int &#32;bit);	<a href="javae1.htm#520">&#167;3.1.10</a>
    public int <strong>size</strong>();	<a href="javae1.htm#540">&#167;3.1.11</a>
    public String <strong>toString</strong>();	<a href="javae1.htm#558">&#167;3.1.12</a>
    public void <strong>xor</strong>(BitSet &#32;set);	<a href="javae1.htm#584">&#167;3.1.13</a>
}
</pre><a name="306">This class implements a vector of bits that grows as needed. Each component of the bit set 
has a boolean value. The bits of a BitSet are inded by nonnegative integers. Individual bits 
can be examined, set, or cleared.
</a><p><a name="28293">By default, all bits in the set initially have the value false.
</a><p><a name="310">Every bit set has a current size, which is the number of bits currently in the bit set.
</a><p>
<hr>
<a name="28300"><h2>
<img src="images/constrct.gif" width=231 height=38 alt="Constructors"></h2></a>


<META NAME="keywords" CONTENT="BitSet">
<a name="318"><h3>BitSet
</h3></a>
<a name="320"><code>public BitSet()
</code></a>
<dl>
<dd><a name="322">Creates a new bit set. All bits are initially false.
<pre>
</pre></a>
</dl>

<META NAME="keywords" CONTENT="BitSet">
<a name="330"><h3>BitSet
</h3></a>
<a name="332"><code>public BitSet(int &#32;nbits)
</code></a>
<dl>
<dd><a name="334">Creates a bit set whose initial size is the specified number of bits. All bits 
are initially false. 
<pre>
</pre></a>
<dl>
<dt><a name="336"><b>Parameters:
</b></a><dd><a name="338"><code>nbits
- </code></a><a name="340">the initial size of the bit set.
</a>
</dl></dl>
<hr>
<a name="342"><h2>
<img src="images/methods.gif" width=151 height=38 alt="Methods"></h2></a>


<META NAME="keywords" CONTENT="and">
<a name="352"><h3>and
</h3></a>
<a name="354"><code>public void and(BitSet &#32;set)
</code></a>
<dl>
<dd><a name="356">Performs a logical <strong>and</strong> of this target bit set with the argument bit set. This 
bit set is modified so that each bit in it has the value true if and only if it 
both initially had the value true and the corresponding bit in the bit set 
argument also had the value true. 
<pre>
</pre></a>
<dl>
<dt><a name="358"><b>Parameters:
</b></a><dd><a name="360"><code>set
- </code></a><a name="362">a bit set 
</a>
</dl></dl>

<META NAME="keywords" CONTENT="clear">
<a name="372"><h3>clear
</h3></a>
<a name="374"><code>public void clear(int &#32;bit)
</code></a>
<dl>
<dd><a name="376">Sets the bit specified by the index to false.
<pre>
</pre></a>
<dl>
<dt><a name="378"><b>Parameters:
</b></a><dd><a name="380"><code>bit
- </code></a><a name="382">the index of the bit to be cleared
</a>
</dl></dl>

<META NAME="keywords" CONTENT="clone">
<a name="392"><h3>clone
</h3></a>
<a name="394"><code>public Object clone()
</code></a>
<dl>
<dd><a name="398">The clone of the bit set is another bit set that has exactly the same bits set 
to true as this bit set and the same current size <a href="javae1.htm#540">(I-&#167;3.1.11)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="28306"><b>Returns:
</b></a><dd><a name="400">a clone of this bit set. 
</a>

<dt><a name="402"><b>Overrides:
</b></a><dd><a name="408">clone in class Object &#32;<a href="java3.htm#26164">(I-&#167;1.12.2)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="equals">
<a name="418"><h3>equals
</h3></a>
<a name="420"><code>public boolean equals(Object &#32;obj)
</code></a>
<dl>
<dd><a name="26428">The result is true if and only if the argument is not null and is a Bitset object 
that has exactly the same set of bits set to true as this bit set. The current 
sizes <a href="javae1.htm#540">(I-&#167;3.1.11)</a> of the two bit sets are not compared.
<pre>
</pre></a>
<dl>
<dt><a name="26426"><b>Parameters:
</b></a><dd><a name="426"><code>obj
- </code></a><a name="428">the object to compare with
</a>

<dt><a name="430"><b>Returns:
</b></a><dd><a name="432">true if the objects are the same; false otherwise.
</a>

<dt><a name="434"><b>Overrides:
</b></a><dd><a name="440">equals in class Object &#32;<a href="java3.htm#6068">(I-&#167;1.12.3)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="get">
<a name="450"><h3>get
</h3></a>
<a name="452"><code>public boolean get(int &#32;bit)
</code></a>
<dl><dl>
<dt><a name="456"><b>Parameters:
</b></a><dd><a name="458"><code>bit
- </code></a><a name="460">the bit index
</a>

<dt><a name="462"><b>Returns:
</b></a><dd><a name="464">the value of the bit with the specified index.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="hashCode">
<a name="474"><h3>hashCode
</h3></a>
<a name="476"><code>public int hashCode()
</code></a>
<dl><dl>
<dt><a name="26444"><b>Returns:
</b></a><dd><a name="26445">a hash code value for this bit set.
</a>

<dt><a name="484"><b>Overrides:
</b></a><dd><a name="490">hashCode in class Object &#32;<a href="java3.htm#6130">(I-&#167;1.12.6)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="or">
<a name="500"><h3>or
</h3></a>
<a name="502"><code>public void or(BitSet &#32;set)
</code></a>
<dl>
<dd><a name="26449">Performs a logical <strong>or</strong> of this bit set with the bit set argument. This bit set is 
modified so that a bit in it has the value true if and only if it either already 
had the value true or the corresponding bit in the bit set argument has the 
value true.
<pre>
</pre></a>
<dl>
<dt><a name="26450"><b>Parameters:
</b></a><dd><a name="26451"><code>set
- </code></a><a name="26452">a bit set 
</a>
</dl></dl>

<META NAME="keywords" CONTENT="set">
<a name="520"><h3>set
</h3></a>
<a name="522"><code>public void set(int &#32;bit)
</code></a>
<dl>
<dd><a name="26523">Sets the bit specified by the index to true.
<pre>
</pre></a>
<dl>
<dt><a name="26470"><b>Parameters:
</b></a><dd><a name="26471"><code>bit
- </code></a><a name="26472">a bit index.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="size">
<a name="540"><h3>size
</h3></a>
<a name="542"><code>public int size()
</code></a>
<dl><dl>
<dt><a name="546"><b>Returns:
</b></a><dd><a name="548">the number of bits currently in this bit set.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="toString">
<a name="558"><h3>toString
</h3></a>
<a name="560"><code>public String toString()
</code></a>
<dl><dl>
<dt><a name="564"><b>Returns:
</b></a><dd><a name="566">a string representation of this bit set.
</a>

<dt><a name="568"><b>Overrides:
</b></a><dd><a name="574">toString in class Object &#32;<a href="java3.htm#6228">(I-&#167;1.12.9)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="xor">
<a name="584"><h3>xor
</h3></a>
<a name="586"><code>public void xor(BitSet &#32;set)
</code></a>
<dl>
<dd><a name="26504">Performs a logical x<strong>or</strong> of this bit set with the bit set argument. This bit set 
is modified so that a bit in it has the value true if and only if one of the following statements holds:
<pre>
</pre></a>
<dl><ul><li><a name="26508">The bit initially has the value true, and the corresponding bit in the argument 
has the value false.
</a></ul><ul><li><a name="26513">The bit initially has the value false, and the corresponding bit in the 
argument has the value true.
</a></ul>
<dt><a name="26505"><b>Parameters:
</b></a><dd><a name="26506"><code>set
- </code></a><a name="26507">a bit set 
</a>
</dl></dl>

<hr>
<!-- This inserts footnotes--><p>
<pre><a href="javabooa.htm">Packages</a>  <a href="javae.htm">This Package</a>  <a href="javae.htm">Prev</a>  <a href="javae2.htm">Next</a>  <a href="javabook.htm">Index</a></pre>
<font size=-1>Java API Document (HTML generated by dkramer on April 22, 1996)<br>
<a href="copyrigh.htm">Copyright &#169 1996 Sun Microsystems, Inc.</a>
All rights reserved<br>
Please send any comments or corrections to <a href="mailto:doug.kramer@sun.com"-->doug.kramer@sun.com</a>
</font>
</body></html>
