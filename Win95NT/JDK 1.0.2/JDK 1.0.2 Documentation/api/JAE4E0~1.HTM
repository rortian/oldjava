<html><head><title>Class MemoryImageSource</title></head>
<!--Intermediate split file from a FrameMaker file-->
<body bgcolor=#ffffff>

<pre><a href="javabooa.htm">Packages</a>  <a href="javak.htm">This Package</a>  <a href="java.awt.image.IndexColorModel.html">Prev</a>  <a href="java.awt.image.PixelGrabber.html">Next</a>  <a href="javabook.htm">Index</a>  </pre>


<hr>
<a name="998275"><h1>	&#167;2.7 Class MemoryImageSource</h1></a>
<pre>public &#32;class &#32;java.awt.image.<strong>MemoryImageSource
</strong>    extends &#32;java.lang.<strong>Object</strong> &#32;<a href="java.lang.Object.html#5914">(I-&#167;1.12)</a>
    implements java.awt.image.<strong>ImageProducer</strong> &#32;<a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a>
{
 &#32; &#32; &#32; &#32;// Constructors
    public <strong>MemoryImageSource</strong>(int &#32;w, int &#32;h, ColorModel cm, 	<a href="java.awt.image.MemoryImageSource.html#998361">&#167;2.7.1</a>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;byte &#32;pix[], int &#32;off, &#32;int &#32;scan);
    public <strong>MemoryImageSource</strong>(int &#32;w, int &#32;h, ColorModel cm, 	<a href="java.awt.image.MemoryImageSource.html#998389">&#167;2.7.2</a>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;byte &#32;pix[], int &#32;off, &#32;int &#32;scan,
 ; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;Hashtable &#32;props);
    public <strong>MemoryImageSource</strong>(int &#32;w, int &#32;h, ColorModel cm, 	<a href="java.awt.image.MemoryImageSource.html#998420">&#167;2.7.3</a>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;pix[], int &#32;off, &#32;int &#32;scan);
    public <strong>MemoryImageSource</strong>(int &#32;w, int &#32;h, ColorModel cm,	<a href="java.awt.image.MemoryImageSource.html#998448">&#167;2.7.4</a>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;pix[], int &#32;off, int scan, 
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;Hashtable &#32;props);
    public <strong>MemoryImageSource</strong>(int &#32;w, int &#32;h, int pix[], 	<a href="java.awt.image.MemoryImageSource.html#998479">&#167;2.7.5</a>
&#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int off, int &#32;scan);
    public <strong>MemoryImageSource</strong>(int &#32;w, int &#32;h, int pix[], 	<a href="java.awt.image.MemoryImageSource.html#998509">&#167;2.7.6</a>
   &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;off, int scan, 
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;Hashtable &#32;props);

 &#32; &#32; &#32; &#32;// Methods
    public void <strong>addConsumer</strong>(ImageConsumer &#32;ic);	<a href="java.awt.image.MemoryImageSource.html#998544">&#167;2.7.7</a>
    public boolean <strong>isConsumer</strong>(ImageConsumer &#32;ic);	<a href="java.awt.image.MemoryImageSource.html#998563">&#167;2.7.8</a>
    public void <strong>removeConsumer</strong>(ImageConsumer &#32;ic);	<a href="java.awt.image.MemoryImageSource.html#998577">&#167;2.7.9</a>
 &#32; &#32;public void	     <a href="java.awt.image.MemoryImageSource.html#998595">&#167;2.7.10</a>
        <strong>requestTopDownLeftRightResend</strong>(ImageConsumer &#32;ic);
    public void <strong>startProduction</strong>(ImageConsumer &#32;ic);	<a href="java.awt.image.MemoryImageSource.html#998612">&#167;2.7.11</a>
}
</pre><a name="998335">A memory image source is an implementation of the image producer interface <a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a>. 
It uses an array to produce pixel values for the image. 
</a><p><a name="998339">Here is an example which calculates a <img src="javaad17.gif"> image representing a fade from black to 
blue along the X axis and from black to red along the Y axis:
</a><p><pre><hr>
<a name="998340">int &#32;w &#32;= &#32;100;
</a><a name="998341">int &#32;h &#32;= &#32;100;
</a><a name="998342">int &#32;pix[] &#32;= &#32;new &#32;int[w &#32;* &#32;h];
</a><a name="998343">int &#32;index &#32;= &#32;0;
</a><a name="998344">for &#32;(int &#32;y &#32;= &#32;0; &#32;y &lt; &#32;h; &#32;y++) &#32;{
</a><a name="998345"> &#32; &#32; &#32; &#32;int &#32;red &#32;= &#32;(y &#32;* &#32;255) &#32;/ &#32;(h &#32;- &#32;1);
</a><a name="998346"> &#32; &#32; &#32; &#32;for &#32;(int &#32;x &#32;= &#32;0; &#32;x &#32;&lt; &#32;w; &#32;x++) &#32;{
</a><a name="998347"> &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;blue &#32;= &#32;(x &#32;* &#32;255) &#32;/ &#32;(w &#32;- &#32;1);
</a><a name="998348"> &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;pix[index++] &#32;= &#32;(255 &#32;&lt;&lt; &#32;24) &#32;| &#32;(red &#32;&lt;&lt; &#32;16) &#32;| &#32;blue;
</a><a name="998349"> &#32; &#32; &#32; &#32;}
</a><a name="998350">}
Image &#32;img &#32;= &#32;createImage(new &#32;MemoryImageSource(w, &#32;h, &#32;pix, &#32;0, &#32;w));
</a>
<hr></pre><a name="998355">An application can use the method createImage in class &#32;Component &#32;<a href="java.awt.Component.html#3875">(II-&#167;1.10.6)</a> to create an 
Image from a MemoryImageSource.
</a><p><a name="998356">The method 
</a><p>
<hr>
<a name="998357"><h2>
<img src="images/constrct.gif" width=231 height=38 alt="Constructors">
</h2></a>


<META NAME="keywords" CONTENT="MemoryImageSource">
<a name="998361"><h3>MemoryImageSource
</h3></a>
<a name="998362"><code>public<br>
MemoryImageSource(int &#32;w, int &#32;h, ColorModel &#32;cm,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;byte &#32;pix[], int &#32;off, int &#32;scan)
</code></a>
<dl>
<dd><a name="998366">Constructs an image producer <a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a> object which uses an array of 
bytes to produce data for the image object. The pixel at coordinate <img src="javaad18.gif"> 
is stored in the pixel array at index <img src="javaac19.gif">.
<pre>
</pre></a>
<dl>
<dt><a name="998373"><b>Parameters:
</b></a><dd><a name="998374"><code>w
- </code></a><a name="998375">the width of the image
</a>
<dd><a name="998376"><code>h
- </code></a><a name="998377">the height of the image
</a>
<dd><a name="998378"><code>cm
- </code></a><a name="998379">the color model used the pixels
</a>
<dd><a name="998380"><code>pix
- </code></a><a name="998381">the array of pixel values
</a>
<dd><a name="998382"><code>off
- </code></a><a name="998383">the offset of the first pixel in the array
</a>
<dd><a name="998384"><code>scan
- </code></a><a name="998385">the number of pixels in the array per line
</a>
</dl></dl>

<META NAME="keywords" CONTENT="MemoryImageSource">
<a name="998389"><h3>MemoryImageSource
</h3></a>
<a name="998390"><code>public MemoryImageSource(int &#32;w, int &#32;h, ColorModel &#32;cm,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;byte &#32;pix[], int &#32;off, int &#32;scan,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;Hashtable &#32;props)
</code></a>
<dl>
<dd><a name="998394">Constructs an image producer <a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a> object which uses an array of 
bytes to produce data for the image object. The pixel at coordinate <img src="javaac20.gif"> 
is stored in the pixel array at index <img src="javaac21.gif">.
<pre>
</pre></a>

<dd><a name="998401">In addition, the image has the properties indicated in the hash table argument.
<pre>
</pre></a>
<dl>
<dt><a name="998402"><b>Parameters:
</b></a><dd><a name="998403"><code>w
- </code></a><a name="998404">the width of the image
</a>
<dd><a name="998405"><code>h
- </code></a><a name="998406">the height of the image
</a>
<dd><a name="998407"><code>cm
- </code></a><a name="998408">the color model used the pixels
</a>
<dd><a name="998409"><code>pix
- </code></a><a name="998410">the array of pixel values
</a>
<dd><a name="998411"><code>off
- </code></a><a name="998412">the offset of the first pixel in the array
</a>
<dd><a name="998413"><code>scan
- </code></a><a name="998414">the number of pixels in the array per line
</a>
<dd><a name="998415"><code>props
- </code></a><a name="998416">a hash table of properties
</a>
</dl></dl>

<META NAME="keywords" CONTENT="MemoryImageSource">
<a name="998420"><h3>MemoryImageSource
</h3></a>
<a name="998421"><code>public MemoryImageSource(int &#32;w, int &#32;h, ColorModel &#32;cm,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;pix[], int &#32;off, int &#32;scan)
</code></a>
<dl>
<dd><a name="998425">Constructs an image producer <a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a> object which uses an array of 
integers to produce data for the image object. The pixel at coordinate 
<img src="javaac22.gif"> is stored in the pixel array at index <img src="javaac23.gif">.
<pre>
</pre></a>
<dl>
<dt><a name="998432"><b>Parameters:
</b></a><dd><a name="998433"><code>w
- </code></a><a name="998434">the width of the image
</a>
<dd><a name="998435"><code>h
- </code></a><a name="998436">the height of the image
</a>
<dd><a name="998437"><code>cm
- </code></a><a name="998438">the color model used the pixels
</a>
<dd><a name="998439"><code>pix
- </code></a><a name="998440">the array of pixel values
</a>
<dd><a name="998441"><code>off
- </code></a><a name="998442">the offset of the first pixel in the array
</a>
<dd><a name="998443"><code>scan
- </code></a><a name="998444">the number of pixels in the array per line
</a>
</dl></dl>

<META NAME="keywords" CONTENT="MemoryImageSource">
<a name="998448"><h3>MemoryImageSource
</h3></a>
<a name="998449"><code>public &#32;MemoryImageSource(int &#32;w, int &#32;h, ColorModel &#32;cm,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;pix[], int &#32;off, int &#32;scan,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;Hashtable &#32;props)
</code></a>
<dl>
<dd><a name="998453">Constructs an image producer <a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a> object which uses an array of 
integers to produce data for the image object. The pixel at coordinate 
<img src="javaac24.gif"> is stored in the pixel array at index <img src="javaac25.gif">.
<pre>
</pre></a>

<dd><a name="998460">In addition, the image has the properties indicated in the hash table argument.
<pre>
</pre></a>
<dl>
<dt><a name="998461"><b>Parameters:
</b></a><dd><a name="998462"><code>w
- </code></a><a name="998463">the width of the image
</a>
<dd><a name="998464"><code>h
- </code></a><a name="998465">the height of the image
</a>
<dd><a name="998466"><code>cm
- </code></a><a name="998467">the color model used the pixels
</a>
<dd><a name="998468"><code>pix
- </code></a><a name="998469">the array of pixel values
</a>
<dd><a name="998470"><code>off
- </code></a><a name="998471">the offset of the first pixel in the array
</a>
<dd><a name="998472"><code>scan
- </code></a><a name="998473">the number of pixels in the array per line
</a>
<dd><a name="998474"><code>props
- </code></a><a name="998475">a hash table of properties
</a>
</dl></dl>

<META NAME="keywords" CONTENT="MemoryImageSource">
<a name="998479"><h3>MemoryImageSource
</h3></a>
<a name="998480"><code>public MemoryImageSource(int &#32;w, int &#32;h, int &#32;pix[],<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;off, int &#32;scan)
</code></a>
<dl>
<dd><a name="998484">Constructs an image producer <a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a> object which uses an array of 
integers to produce data for the image object. The pixel at coordinate 
<img src="javaac26.gif"> is stored in the pixel array at index <img src="javaac27.gif">.
<pre>
</pre></a>

<dd><a name="998494">The resulting image uses the default RGB color model <a href="java.awt.image.ColorModel.html#1001364">(II-&#167;2.1.9)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="998495"><b>Parameters:
</b></a><dd><a name="998496"><code>w
- </code></a><a name="998497">the width of the image
</a>
<dd><a name="998498"><code>h
- </code></a><a name="998499">the height of the image
</a>
<dd><a name="998500"><code>pix
- </code></a><a name="998501">the array of pixel values
</a>
<dd><a name="998502"><code>off
- </code></a><a name="998503">the offset of the first pixel in the array
</a>
<dd><a name="998504"><code>scan
- </code></a><a name="998505">the number of pixels in the array per line
</a>
</dl></dl>

<META NAME="keywords" CONTENT="MemoryImageSource">
<a name="998509"><h3>MemoryImageSource
</h3></a>
<a name="998510"><code>public MemoryImageSource(int &#32;w, int &#32;h, int &#32;pix[], int &#32;off,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;scan, Hashtable &#32;props)
</code></a>
<dl>
<dd><a name="998514">Constructs an image producer <a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a> object which uses an array of 
integers to produce data for the image object. The pixel at coordinate 
<img src="javaac28.gif"> is stored in the pixel array at index <img src="javaac29.gif">. The 
resulting image uses the default RGB color model <a href="java.awt.image.ColorModel.html#1001364">(II-&#167;2.1.9)</a>.
<pre>
</pre></a>

<dd><a name="998524">In addition, the image has the properties indicated in the hash table argument.
<pre>
</pre></a>
<dl>
<dt><a name="998525"><b>Parameters:
</b></a><dd><a name="998526"><code>w
- </code></a><a name="998527">the width of the image
</a>
<dd><a name="998528"><code>h
- </code></a><a name="998529">the height of the image
</a>
<dd><a name="998530"><code>cm
- </code></a><a name="998531">the color model used the pixels
</a>
<dd><a name="998532"><code>pix
- </code></a><a name="998533">the array of pixel values
</a>
<dd><a name="998534"><code>off
- </code></a><a name="998535">the offset of the first pixel in the array
</a>
<dd><a name="998536"><code>scan
- </code></a><a name="998537">the number of pixels in the array per line
</a>
<dd><a name="998538"><code>props
- </code></a><a name="998539">a hash table of properties
</a>
</dl></dl>
<hr>
<a name="998540"><h2>
<img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2></a>


<META NAME="keywords" CONTENT="addConsumer">
<a name="998544"><h3>addConsumer
</h3></a>
<a name="998545"><code>public void addConsumer(ImageConsumer &#32;ic)
</code></a>
<dl>
<dd><a name="998549">Registers the image consumer <a href="java.awt.image.ImageConsumer.html#999415">(II-&#167;2.10)</a> argument as wanting the image 
produced by this image producer. For more information on this method 
and its arguments, see <a href="java.awt.image.ImageProducer.html#1000010">&#167;2.12.1</a> on <a href="java.awt.image.ImageProducer.html#1000010">page &#32;313</a>.
<pre>
</pre></a>

<dd><a name="998556">The addConsumer method of MemoryImageSource, since it already has the 
image data, immediately delivers the data to the image consumer.
<pre>
</pre></a>
<dl>
<dt><a name="998557"><b>Parameters:
</b></a><dd><a name="998558"><code>ic
- </code></a><a name="998559">an image consumer
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isConsumer">
<a name="998563"><h3>isConsumer
</h3></a>
<a name="998564"><code>public boolean isConsumer(ImageConsumer &#32;ic)
</code></a>
<dl>
<dd><a name="998565">Determines if the image consumer argument is registered with this image 
producer as a consumer. Because the memory image source delivers data 
immediately to its image consumer, the memory image source can have at 
most one consumer at a time.
<pre>
</pre></a>
<dl>
<dt><a name="998566"><b>Parameters:
</b></a><dd><a name="998567"><code>ic
- </code></a><a name="998568">an image consumer
</a>

<dt><a name="998569"><b>Returns:
</b></a><dd><a name="998573">true if the specified image consumer argument <a href="java.awt.image.ImageConsumer.html#999415">(II-&#167;2.10)</a> is currently 
registered with this image producer as one of its consumers; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="removeConsumer">
<a name="998577"><h3>removeConsumer
</h3></a>
<a name="998578"><code>public void removeConsumer(ImageConsumer &#32;ic)
</code></a>
<dl>
<dd><a name="998582">Removes the specified image consumer <a href="java.awt.image.ImageConsumer.html#999415">(II-&#167;2.10)</a> object from the list of 
consumers registered to receive the image data. For more information on 
this method and its arguments, see <a href="java.awt.image.ImageProducer.html#1000033">&#167;2.12.3</a> on <a href="java.awt.image.ImageProducer.html#1000033">page &#32;314</a>.
<pre>
</pre></a>
<dl>
<dt><a name="998589"><b>Parameters:
</b></a><dd><a name="998590"><code>ic
- </code></a><a name="998591">an image consumer
</a>
</dl></dl>

<META NAME="keywords" CONTENT="requestTopDownLeftRightResend">
<a name="998595"><h3>requestTopDownLeftRightResend
</h3></a>
<a name="998596"><code>public void requestTopDownLeftRightResend(ImageConsumer &#32;ic)
</code></a>
<dl>
<dd><a name="998597">An image consumer sends this message to request that the image producer 
attempt to resend the image data one more time in top-down, left-to-right 
order. For more information on this method and its arguments, see <a href="java.awt.image.ImageProducer.html#1000043">&#167;2.12.4</a> 
on <a href="java.awt.image.ImageProducer.html#1000043">page &#32;314</a>.
<pre>
</pre></a>

<dd><a name="998604">The requestTopDownLeftRightResend method of memoryImageSource ignores 
this request, since it always sends its data in that order.
<pre>
</pre></a>
<dl>
<dt><a name="998605"><b>Parameters:
</b></a><dd><a name="998606"><code>ic
- </code></a><a name="998607">an image consumer
</a>
<a name="998608">
</a>
</dl></dl>

<META NAME="keywords" CONTENT="startProduction">
<a name="998612"><h3>startProduction
</h3></a>
<a name="998613"><code>public void startProduction(ImageConsumer &#32;ic)
</code></a>
<dl>
<dd><a name="998617">Registers the image consumer <a href="java.awt.image.ImageConsumer.html#999415">(II-&#167;2.10)</a> argument as wanting the image 
produced by this image producer. In addition, this method forces the 
image producer to start an immediate reconstruction of the image data For 
more information on this method and its arguments, see <a href="java.awt.image.ImageProducer.html#1000061">&#167;2.12.5</a> on 
<a href="java.awt.image.ImageProducer.html#1000061">page &#32;314</a>.
<pre>
</pre></a>

<dd><a name="998624">The addConsumer method of MemoryImageSource, since it already has the 
image data, immediately delivers the data to the image consumer.
<pre>
</pre></a>
<dl>
<dt><a name="998625"><b>Parameters:
</b></a><dd><a name="998626"><code>ic
- </code></a><a name="998627">an image consumer
</a>
</dl></dl>

<hr>
<!-- This inserts footnotes--><p>
<pre><a href="javabooa.htm">Packages</a>  <a href="javak.htm">This Package</a>  <a href="java.awt.image.IndexColorModel.html">Prev</a>  <a href="java.awt.image.PixelGrabber.html">Next</a>  <a href="javabook.htm">Index</a></pre>
<font size=-1>Java API Document (HTML generated by dkramer on April 22, 1996)<br>
<a href="copyrigh.htm">Copyright &#169 1996 Sun Microsystems, Inc.</a>
All rights reserved<br>
Please send any comments or corrections to <a href="mailto:doug.kramer@sun.com">doug.kramer@sun.com</a>
</font>
</body></html>