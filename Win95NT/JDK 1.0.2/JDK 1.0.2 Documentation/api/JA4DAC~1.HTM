<html><head><title>Class CropImageFilter</title></head>
<!--Intermediate split file from a FrameMaker file-->
<body bgcolor=#ffffff>

<pre><a href="javabooa.htm">Packages</a>  <a href="javak.htm">This Package</a>  <a href="java.awt.image.ColorModel.html">Prev</a>  <a href="java.awt.image.DirectColorModel.html">Next</a>  <a href="javabook.htm">Index</a>  </pre>


<hr>
<a name="996972"><h1>	&#167;2.2 Class CropImageFilter</h1></a>
<pre>public &#32;class &#32;java.awt.image.<strong>CropImageFilter
</strong>    extends &#32;java.awt.image.<strong>ImageFilter</strong> &#32;<a href="java.awt.image.ImageFilter.html#997569">(II-&#167;2.5)</a>
{
 &#32; &#32; &#32; &#32;// Constructors
    public <strong>CropImageFilter</strong>(int &#32;x, int &#32;y, int &#32;w, int h);	<a href="java.awt.image.CropImageFilter.html#997016">&#167;2.2.1</a>

 &#32; &#32; &#32; &#32;// Methods
    public void <strong>setDimensions</strong>(int &#32;w, int &#32;h);	<a href="java.awt.image.CropImageFilter.html#997032">&#167;2.2.2</a>
    public void <strong>setPixels</strong>(int &#32;x, int &#32;y, int &#32;w, int &#32;h,	<a href="java.awt.image.CropImageFilter.html#1001469">&#167;2.2.3</a>
&#32; &#32; &#32; &#32; &#32; &#32;ColorModel &#32;model, byte &#32;pixels[],
         &#32; &#32; &#32; &#32; &#32; &#32;int &#32;off, int &#32;scansize);
    public void <strong>setPixels</strong>(int &#32;x, int &#32;y, int &#32;w, int &#32;h,	<a href="java.awt.image.CropImageFilter.html#997093">&#167;2.2.4</a>
  &#32; &#32; &#32; &#32; &#32;ColorModel &#32;model, int &#32;pixels[],
         &#32; &#32; &#32; &#32; &#32; &#32;int &#32;off, int &#32;scansize);
    public void <strong>setProperties</strong>(Hashtable &#32;props);	<a href="java.awt.image.CropImageFilter.html#997131">&#167;2.2.5</a>
}
</pre><a name="997003">The cropped image filter is an image filter for cropping images. This class extends the 
basic ImageFilter class <a href="java.awt.image.ImageFilter.html#997569">(II-&#167;2.5)</a> to extract a given rectangular region of an existing image 
and provides a source for new image containing only the extracted region.
</a><p><a name="997010">This class is meant to be used in conjunction with a FilteredImageSource &#32;<a href="java.awt.image.FilteredImageSource.html#997374">(II-&#167;2.4)</a> to produce 
cropped versions of existing images.
</a><p>
<hr>
<a name="997012"><h2>
<img src="images/constrct.gif" width=231 height=38 alt="Constructors">
</h2></a>


<META NAME="keywords" CONTENT="CropImageFilter">
<a name="997016"><h3>CropImageFilter
</h3></a>
<a name="997017"><code>public CropImageFilter(int &#32;x, int &#32;y, int &#32;w, int &#32;h)
</code></a>
<dl>
<dd><a name="997018">Constructs a cropped image filter that extracts the absolute rectangular 
region of pixels from its source Image as specified by the x, y, w, and h 
parameters.
<pre>
</pre></a>
<dl>
<dt><a name="997019"><b>Parameters:
</b></a><dd><a name="997020"><code>x
- </code></a><a name="997021">the x location of the top of the rectangle to be extracted
</a>
<dd><a name="997022"><code>y
- </code></a><a name="997023">the y location of the top of the rectangle to be extracted
</a>
<dd><a name="997024"><code>w
- </code></a><a name="997025">the width of the rectangle to be extracted
</a>
<dd><a name="997026"><code>h
- </code></a><a name="997027">the height of the rectangle to be extracted
</a>
</dl></dl>
<hr>
<a name="997028"><h2>
<img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2></a>


<META NAME="keywords" CONTENT="setDimensions">
<a name="997032"><h3>setDimensions
</h3></a>
<a name="997033"><code>public void setDimensions(int &#32;w, int &#32;h)
</code></a>
<dl>
<dd><a name="997034">The image producer calls the setDimensions of the image consumer to tell it 
the width and height of the image.
<pre>
</pre></a>

<dd><a name="997035">The setDimensions method of CroppedImageFilter ignores its arguments. It 
calls the setDimensions method <a href="java.awt.image.ImageConsumer.html#999637">(II-&#167;2.10.12)</a> of its image consumer with the 
width and height arguments of the constructor <a href="java.awt.image.CropImageFilter.html#997016">(II-&#167;2.2.1)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="997042"><b>Parameters:
</b></a><dd><a name="997043"><code>width
- </code></a><a name="997044">the width of the image
</a>
<dd><a name="997045"><code>height
- </code></a><a name="997046">the height of the image
</a>

<dt><a name="997047"><b>Overrides:
</b></a><dd><a name="997051">setDimensions in class ImageFilter &#32;<a href="java.awt.image.ImageFilter.html#997765">(II-&#167;2.5.8)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="setPixels">
<a name="1001469"><h3>setPixels
</h3></a>
<a name="1001470"><code>public void<br>
setPixels(int &#32;x, int &#32;y, int &#32;w, int &#32;h, &#32;ColorModel &#32;model,  &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;byte &#32;pixels[], int &#32;off, 
int &#32;scansize)
</code></a>
<dl>
<dd><a name="997057">The image producer calls the setPixels method of the image consumer one 
or more times to deliver the pixels of the image. For more information on 
this method and its arguments, see <a href="java.awt.image.ImageConsumer.html#999677">&#167;2.10.14</a> on <a href="java.awt.image.ImageConsumer.html#999677">page &#32;307</a>.
<pre>
</pre></a>

<dd><a name="997064">The setPixels method of CroppedImageFilter determines if the specified rectangle intersects its cropping region. If so, it calls the setPixels method 
<a href="java.awt.image.ImageConsumer.html#999677">(II-&#167;2.10.14)</a> after modifying the x, y, w, h, and offset arguments to reflect 
only the intersecting region.
<pre>
</pre></a>
<dl>
<dt><a name="997068"><b>Parameters:
</b></a><dd><a name="997069"><code>x
- </code></a><a name="997070">left coordinate of rectangle
</a>
<dd><a name="997071"><code>y
- </code></a><a name="997072">top coordinte of rectangle
</a>
<dd><a name="997073"><code>w
- </code></a><a name="997074">width of rectangle
</a>
<dd><a name="997075"><code>h
- </code></a><a name="997076">height of rectangle
</a>
<dd><a name="997077"><code>model
- </code></a><a name="997078">color model for bits
</a>
<dd><a name="997079"><code>pixels
- </code></a><a name="997080">array of bits
</a>
<dd><a name="997081"><code>off
- </code></a><a name="997082">offset for first element
</a>
<dd><a name="997083"><code>scansize
- </code></a><a name="997084">number of elements per row.
</a>

<dt><a name="997085"><b>Overrides:
</b></a><dd><a name="997089">setPixels in class ImageFilter &#32;<a href="java.awt.image.ImageFilter.html#997799">(II-&#167;2.5.10)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="setPixels">
<a name="997093"><h3>setPixels
</h3></a>
<a name="997094"><code>public void<br>
setPixels(int &#32;x, int &#32;y, int &#32;w, int &#32;h, ColorModel &#32;model,<br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;int &#32;pixels[], int &#32;off, &#32;int &#32;scansize)
</code></a>
<dl>
<dd><a name="997095">The image producer calls the setPixels method of the image consumer one 
or more times to deliver the pixels of the image. For more information on 
this method and its arguments, see <a href="java.awt.image.ImageConsumer.html#999709">&#167;2.10.15</a> on <a href="java.awt.image.ImageConsumer.html#999709">page &#32;308</a>.
<pre>
</pre></a>

<dd><a name="997102">The setPixels method of CroppedImageFilter determines if the specified rectangle intersects its cropping region. If so, it calls the setPixels method 
<a href="java.awt.image.ImageConsumer.html#999709">(II-&#167;2.10.15)</a> after modifying the x, y, w, h, and offset arguments to reflect 
only the intersecting region.
<pre>
</pre></a>
<dl>
<dt><a name="997106"><b>Parameters:
</b></a><dd><a name="997107"><code>x
- </code></a><a name="997108">left coordinate of rectangle
</a>
<dd><a name="997109"><code>y
- </code></a><a name="997110">top coordinte of rectangle
</a>
<dd><a name="997111"><code>w
- </code></a><a name="997112">width of rectangle
</a>
<dd><a name="997113"><code>h
- </code></a><a name="997114">height of rectangle
</a>
<dd><a name="997115"><code>model
- </code></a><a name="997116">color model for bits
</a>
<dd><a name="997117"><code>pixels
- </code></a><a name="997118">array of bits
</a>
<dd><a name="997119"><code>off
- </code></a><a name="997120">offset for first element
</a>
<dd><a name="997121"><code>scansize
- </code></a><a name="997122">number of elements per row.
</a>

<dt><a name="997123"><b>Overrides:
</b></a><dd><a name="997127">setPixels in class ImageFilter &#32;<a href="java.awt.image.ImageFilter.html#997832">(II-&#167;2.5.11)</a>.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="setProperties">
<a name="997131"><h3>setProperties
</h3></a>
<a name="997132"><code>public void setProperties(Hashtable &#32;props)
</code></a>
<dl>
<dd><a name="997133">The image producer calls the setProperties method of the image consumer to 
let it know of additional properties of the image. For more information on 
this method and its arguments, see <a href="java.awt.image.ImageConsumer.html#999739">&#167;2.10.16</a> on <a href="java.awt.image.ImageConsumer.html#999739">page &#32;308</a>.
<pre>
</pre></a>

<dd><a name="997140">The setProperties method of CroppedImageFilter adds the property "croprect" 
with the value <br>
 &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;new &#32;Rectangle(x, y, width, height)<br>
to the table of properties, and then calls the setProperties method of its 
image consumer <a href="java.awt.image.ImageConsumer.html#999739">(II-&#167;2.10.16)</a> with the modified properties table.
<pre>
</pre></a>
<dl>
<dt><a name="997144"><b>Parameters:
</b></a><dd><a name="997145"><code>props
- </code></a><a name="997146">a hashtable that maps image properties to their value
</a>

<dt><a name="997147"><b>Overrides:
</b></a><dd><a name="997151">setProperties in class ImageFilter &#32;<a href="java.awt.image.ImageFilter.html#997865">(II-&#167;2.5.12)</a>.
</a>
</dl></dl>

<hr>
<!-- This inserts footnotes--><p>
<pre><a href="javabooa.htm">Packages</a>  <a href="javak.htm">This Package</a>  <a href="java.awt.image.ColorModel.html">Prev</a>  <a href="java.awt.image.DirectColorModel.html">Next</a>  <a href="javabook.htm">Index</a></pre>
<font size=-1>Java API Document (HTML generated by dkramer on April 22, 1996)<br>
<a href="copyrigh.htm">Copyright &#169 1996 Sun Microsystems, Inc.</a>
All rights reserved<br>
Please send any comments or corrections to <a href="mailto:doug.kramer@sun.com">doug.kramer@sun.com</a>
</font>
</body></html>