<html><head><title>Class FilteredImageSource</title></head>
<!--Intermediate split file from a FrameMaker file-->
<body bgcolor=#ffffff>

<pre><a href="javabooa.htm">Packages</a>  <a href="javak.htm">This Package</a>  <a href="java.awt.image.DirectColorModel.html">Prev</a>  <a href="java.awt.image.ImageFilter.html">Next</a>  <a href="javabook.htm">Index</a>  </pre>


<hr>
<a name="997374"><h1>	&#167;2.4 Class FilteredImageSource</h1></a>
<pre>public &#32;class &#32;java.awt.image.<strong>FilteredImageSource
</strong>    extends &#32;java.lang.<strong>Object</strong> &#32;<a href="java.lang.Object.html#5914">(I-&#167;1.12)</a>
    implements java.awt.image.<strong>ImageProducer</strong> &#32;<a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a>
{
 &#32; &#32; &#32; &#32;// Constructors
    public <strong>FilteredImageSource</strong>(ImageProducer &#32;orig,	<a href="java.awt.image.FilteredImageSource.html#997435">&#167;2.4.1</a>
&#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;ImageFilter &#32;imgf);

 &#32; &#32; &#32; &#32;// Methods
    public void <strong>addConsumer</strong>(ImageConsumer &#32;ic);	<a href="java.awt.image.FilteredImageSource.html#997450">&#167;2.4.2</a>
    public boolean <strong>isConsumer</strong>(ImageConsumer &#32;ic);	<a href="java.awt.image.FilteredImageSource.html#997475">&#167;2.4.3</a>
    public void <strong>removeConsumer</strong>(ImageConsumer &#32;ic);	<a href="java.awt.image.FilteredImageSource.html#997488">&#167;2.4.4</a>
 &#32; &#32;public void 	<a href="java.awt.image.FilteredImageSource.html#997516">&#167;2.4.5</a>
        <strong>requestTopDownLeftRightResend</strong>(ImageConsumer &#32;ic);
    public void <strong>startProduction</strong>(ImageConsumer &#32;ic);	<a href="java.awt.image.FilteredImageSource.html#997541">&#167;2.4.6</a>
}
</pre><a name="997416">A filtered image source is an implementation of the image producer interface <a href="java.awt.image.ImageProducer.html#999977">(II-&#167;2.12)</a> 
which takes an existing image and an image filter <a href="java.awt.image.ImageFilter.html#997569">(II-&#167;2.5)</a> and uses them to produce a 
new filtered version of the original image.
</a><p><a name="997420">Here is an example which filters an image by swapping the red and blue components:
</a><p><pre><hr>
<a name="997421">Image &#32;src &#32;= &#32;getImage("doc:///demo/images/duke/T1.gif");
</a><a name="997425">// see comments in <a href="java.awt.image.RGBImageFilter.html#999012">&#167;2.9</a> for an implementation of RedBlueSwapFilter
</a><a name="997426">
</a><a name="997427">ImageFilter &#32;colorfilter &#32;= &#32;new &#32;RedBlueSwapFilter();
</a><a name="997428">Image &#32;img &#32;= &#32;createImage(new &#32;FilteredImageSource(src.getSource(),
</a><a name="997429"> &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;  &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32; &#32;colorfilter));
</a>
<hr></pre>
<hr>
<a name="997431"><h2>
<img src="images/constrct.gif" width=231 height=38 alt="Constructors">
</h2></a>


<META NAME="keywords" CONTENT="FilteredImageSource">
<a name="997435"><h3>FilteredImageSource
</h3></a>
<a name="997436"><code>public 
</code></a>
<a name="1001515"><code>FilteredImageSource(ImageProducer &#32;orig, &#32;ImageFilter &#32;imgf)
</code></a>
<dl>
<dd><a name="997437">Constructs a new image producer from an existing image producer and an 
an image filter <a href="java.awt.image.ImageFilter.html#997569">(II-&#167;2.5)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="997441"><b>Parameters:
</b></a><dd><a name="997442"><code>orig
- </code></a><a name="997443">an existing image producer
</a>
<dd><a name="997444"><code>imgf
- </code></a><a name="997445">an image filter
</a>
</dl></dl>
<hr>
<a name="997446"><h2>
<img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2></a>


<META NAME="keywords" CONTENT="addConsumer">
<a name="997450"><h3>addConsumer
</h3></a>
<a name="997451"><code>public void addConsumer(ImageConsumer &#32;ic)
</code></a>
<dl>
<dd><a name="997455">Registers the image consumer <a href="java.awt.image.ImageConsumer.html#999415">(II-&#167;2.10)</a> argument as wanting th image 
produced by this image producer. For more information on this method 
and its arguments, see <a href="java.awt.image.ImageProducer.html#1000010">&#167;2.12.1</a> on <a href="java.awt.image.ImageProducer.html#1000010">page &#32;313</a>.
<pre>
</pre></a>

<dd><a name="997462">The addConsumer method of FilteredImageSource calls its image filter's getFilterInstance method <a href="java.awt.image.ImageFilter.html#997691">(II-&#167;2.5.4)</a> to creates a new filter instance for the image 
consumer argument. The resulting filter instance is then passed as an argument to the image producer's addConsumer method <a href="java.awt.image.ImageProducer.html#1000010">(II-&#167;2.12.1)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="997469"><b>Parameters:
</b></a><dd><a name="997470"><code>ic
- </code></a><a name="997471">an image consumer
</a>
</dl></dl>

<META NAME="keywords" CONTENT="isConsumer">
<a name="997475"><h3>isConsumer
</h3></a>
<a name="997476"><code>public boolean isConsumer(ImageConsumer &#32;ic)
</code></a>
<dl><dl>
<dt><a name="997477"><b>Parameters:
</b></a><dd><a name="997478"><code>ic
- </code></a><a name="997479">an image consumer
</a>

<dt><a name="997480"><b>Returns:
</b></a><dd><a name="997484">true if the specified image consumer argument <a href="java.awt.image.ImageConsumer.html#999415">(II-&#167;2.10)</a> is currently 
registered with this image producer as one of its consumers; false otherwise.
</a>
</dl></dl>

<META NAME="keywords" CONTENT="removeConsumer">
<a name="997488"><h3>removeConsumer
</h3></a>
<a name="997489"><code>public void removeConsumer(ImageConsumer &#32;ic)
</code></a>
<dl>
<dd><a name="997493">Removes the specified image consumer <a href="java.awt.image.ImageConsumer.html#999415">(II-&#167;2.10)</a> object from the list of 
consumers registered to receive the image data from this image producer. 
For more information on this method and its arguments, see <a href="java.awt.image.ImageProducer.html#1000033">&#167;2.12.3</a> on 
<a href="java.awt.image.ImageProducer.html#1000033">page &#32;314</a>.
<pre>
</pre></a>

<dd><a name="997500">The removeConsumer method of FilteredImageSource calls its image producer's removeConsumer method <a href="java.awt.image.ImageProducer.html#1000033">(II-&#167;2.12.3)</a> with the image filter than was 
created when this image consumer was first registered (<a href="java.awt.image.FilteredImageSource.html#997450">&#167;2.4.2</a>, <a href="java.awt.image.FilteredImageSource.html#997541">&#167;2.4.6</a>).
<pre>
</pre></a>
<dl>
<dt><a name="997510"><b>Parameters:
</b></a><dd><a name="997511"><code>ic
- </code></a><a name="997512">an image consumer
</a>
</dl></dl>

<META NAME="keywords" CONTENT="requestTopDownLeftRightResend">
<a name="997516"><h3>requestTopDownLeftRightResend
</h3></a>
<a name="997517"><code>public void<br>
requestTopDownLeftRightResend(ImageConsumer &#32;ic)
</code></a>
<dl>
<dd><a name="997518">An image consumer sends this message to request that the image producer 
attempt to resend the image data one more time in top-down, left-to-right 
order. For more information on this method and its arguments, see <a href="java.awt.image.ImageProducer.html#1000043">&#167;2.12.4</a> 
on <a href="java.awt.image.ImageProducer.html#1000043">page &#32;314</a>.
<pre>
</pre></a>

<dd><a name="997525">The requestTopDownLeftRightResend method of FilteredImageSource calls its 
image producer's requestTopDownLeftRightResent method <a href="java.awt.image.ImageProducer.html#1000043">(II-&#167;2.12.4)</a> with 
the image filter than was created when this image consumer was first registered (<a href="java.awt.image.FilteredImageSource.html#997450">&#167;2.4.2</a>, <a href="java.awt.image.FilteredImageSource.html#997541">&#167;2.4.6</a>).
<pre>
</pre></a>
<dl>
<dt><a name="997535"><b>Parameters:
</b></a><dd><a name="997536"><code>ic
- </code></a><a name="997537">an image consumer
</a>
</dl></dl>

<META NAME="keywords" CONTENT="startProduction">
<a name="997541"><h3>startProduction
</h3></a>
<a name="997542"><code>public void startProduction(ImageConsumer &#32;ic)
</code></a>
<dl>
<dd><a name="997546">Registers the image consumer <a href="java.awt.image.ImageConsumer.html#999415">(II-&#167;2.10)</a> argument as wanting the image 
produced by this image producer. In addition, this method forces the 
image producer to start an immediate reconstruction of the image data. For 
more information on this method and its arguments, see <a href="java.awt.image.ImageProducer.html#1000061">&#167;2.12.5</a> on 
<a href="java.awt.image.ImageProducer.html#1000061">page &#32;314</a>.
<pre>
</pre></a>

<dd><a name="997553">The startProduction method of FilteredImageSource calls its image filter's getFilterInstance method <a href="java.awt.image.ImageFilter.html#997691">(II-&#167;2.5.4)</a> to creates a new filter instance for the 
image consumer argument. The resulting filter instance is then passed as 
an argument to the image producer's startProduction method <a href="java.awt.image.ImageProducer.html#1000061">(II-&#167;2.12.5)</a>.
<pre>
</pre></a>
<dl>
<dt><a name="997560"><b>Parameters:
</b></a><dd><a name="997561"><code>ic
- </code></a><a name="997562">an image consumer
</a>
</dl></dl>

<hr>
<!-- This inserts footnotes--><p>
<pre><a href="javabooa.htm">Packages</a>  <a href="javak.htm">This Package</a>  <a href="java.awt.image.DirectColorModel.html">Prev</a>  <a href="java.awt.image.ImageFilter.html">Next</a>  <a href="javabook.htm">Index</a></pre>
<font size=-1>Java API Document (HTML generated by dkramer on April 22, 1996)<br>
<a href="copyrigh.htm">Copyright &#169 1996 Sun Microsystems, Inc.</a>
All rights reserved<br>
Please send any comments or corrections to <a href="mailto:doug.kramer@sun.com">doug.kramer@sun.com</a>
</font>
</body></html>