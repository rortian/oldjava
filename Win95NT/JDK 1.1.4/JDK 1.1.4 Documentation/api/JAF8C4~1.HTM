<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sat Aug 30 15:44:46 PDT 1997 -->
<title>
  Class java.util.zip.InflaterInputStream
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.util.zip.html">This Package</a>  <a href="java.util.zip.Inflater.html#_top_">Previous</a>  <a href="java.util.zip.ZipEntry.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
<hr>
<h1>
  Class java.util.zip.InflaterInputStream
</h1>
<pre>
<a href="java.lang.Object.html#_top_">java.lang.Object</a>
   |
   +----<a href="java.io.InputStream.html#_top_">java.io.InputStream</a>
           |
           +----<a href="java.io.FilterInputStream.html#_top_">java.io.FilterInputStream</a>
                   |
                   +----java.util.zip.InflaterInputStream
</pre>
<hr>
<dl>
  <dt> public class <b>InflaterInputStream</b>
  <dt> extends <a href="java.io.FilterInputStream.html#_top_">FilterInputStream</a>
</dl>
This class implements a stream filter for uncompressing data in the
 "deflate" compression format. It is also used as the basis for other
 decompression filters, such as GZIPInputStream.
<p>
<dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.util.zip.Inflater.html#_top_">Inflater</a>
</dl>
<hr>
<a name="index"></a>
<h2>
  <img src="images/variable-index.gif" width=207 height=38 alt="Variable Index">
</h2>
<dl>
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#buf"><b>buf</b></a>
  <dd>  Input buffer for decompression.
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#inf"><b>inf</b></a>
  <dd>  Decompressor for this stream.
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#len"><b>len</b></a>
  <dd>  Length of input buffer.
</dl>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#InflaterInputStream(java.io.InputStream)"><b>InflaterInputStream</b></a>(InputStream)
  <dd>  Creates a new input stream with a default decompressor and buffer size.
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#InflaterInputStream(java.io.InputStream, java.util.zip.Inflater)"><b>InflaterInputStream</b></a>(InputStream, Inflater)
  <dd>  Creates a new input stream with the specified decompressor and a
 default buffer size.
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#InflaterInputStream(java.io.InputStream, java.util.zip.Inflater, int)"><b>InflaterInputStream</b></a>(InputStream, Inflater, int)
  <dd>  Creates a new input stream with the specified decompressor and
 buffer size.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#fill()"><b>fill</b></a>()
  <dd>  Fills input buffer with more data to decompress.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#read()"><b>read</b></a>()
  <dd>  Reads a byte of uncompressed data.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#read(byte[], int, int)"><b>read</b></a>(byte[], int, int)
  <dd>  Reads uncompressed data into an array of bytes.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#skip(long)"><b>skip</b></a>(long)
  <dd>  Skips specified number of bytes of uncompressed data.
</dl>
<a name="variables"></a>
<h2>
  <img src="images/variables.gif" width=153 height=38 alt="Variables">
</h2>
<a name="inf"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>inf</b>
<pre>
 protected <a href="java.util.zip.Inflater.html#_top_">Inflater</a> inf
</pre>
<dl>
  <dd> Decompressor for this stream.<p>
</dl>
<a name="buf"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>buf</b>
<pre>
 protected byte buf[]
</pre>
<dl>
  <dd> Input buffer for decompression.<p>
</dl>
<a name="len"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>len</b>
<pre>
 protected int len
</pre>
<dl>
  <dd> Length of input buffer.<p>
</dl>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="InflaterInputStream"></a>
<a name="InflaterInputStream(java.io.InputStream, java.util.zip.Inflater, int)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>InflaterInputStream</b>
<pre>
 public InflaterInputStream(<a href="java.io.InputStream.html#_top_">InputStream</a> in,
                            <a href="java.util.zip.Inflater.html#_top_">Inflater</a> inf,
                            int size)
</pre>
<dl>
  <dd> Creates a new input stream with the specified decompressor and
 buffer size.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> in - the input stream
    <dd> inf - the decompressor ("inflater")
    <dd> len - the input buffer size
  </dl></dd>
</dl>
<a name="InflaterInputStream(java.io.InputStream, java.util.zip.Inflater)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>InflaterInputStream</b>
<pre>
 public InflaterInputStream(<a href="java.io.InputStream.html#_top_">InputStream</a> in,
                            <a href="java.util.zip.Inflater.html#_top_">Inflater</a> inf)
</pre>
<dl>
  <dd> Creates a new input stream with the specified decompressor and a
 default buffer size.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> in - the input stream
    <dd> inf - the decompressor ("inflater")
  </dl></dd>
</dl>
<a name="InflaterInputStream(java.io.InputStream)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>InflaterInputStream</b>
<pre>
 public InflaterInputStream(<a href="java.io.InputStream.html#_top_">InputStream</a> in)
</pre>
<dl>
  <dd> Creates a new input stream with a default decompressor and buffer size.
<p>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="read()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="read"><b>read</b></a>
<pre>
 public int read() throws <a href="java.io.IOException.html#_top_">IOException</a>
</pre>
<dl>
  <dd> Reads a byte of uncompressed data. This method will block until
 enough input is available for decompression.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the byte read, or -1 if end of compressed input is reached
    <dt> <b>Throws:</b> <a href="java.io.IOException.html#_top_">IOException</a>
    <dd> if an I/O error has occurred
    <dt> <b>Overrides:</b>
    <dd> <a href="java.io.FilterInputStream.html#read()">read</a> in class <a href="java.io.FilterInputStream.html#_top_">FilterInputStream</a>
  </dl></dd>
</dl>
<a name="read(byte[], int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="read"><b>read</b></a>
<pre>
 public int read(byte b[],
                 int off,
                 int len) throws <a href="java.io.IOException.html#_top_">IOException</a>
</pre>
<dl>
  <dd> Reads uncompressed data into an array of bytes. This method will
 block until some input can be decompressed.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> b - the buffer into which the data is read
    <dd> off - the start offset of the data
    <dd> len - the maximum number of bytes read
    <dt> <b>Returns:</b>
    <dd> the actual number of bytes read, or -1 if the end of the
         compressed input is reached or a preset dictionary is needed
    <dt> <b>Throws:</b> <a href="java.util.zip.ZipException.html#_top_">ZipException</a>
    <dd> if a ZIP format error has occurred
    <dt> <b>Throws:</b> <a href="java.io.IOException.html#_top_">IOException</a>
    <dd> if an I/O error has occurred
    <dt> <b>Overrides:</b>
    <dd> <a href="java.io.FilterInputStream.html#read(byte[], int, int)">read</a> in class <a href="java.io.FilterInputStream.html#_top_">FilterInputStream</a>
  </dl></dd>
</dl>
<a name="skip(long)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="skip"><b>skip</b></a>
<pre>
 public long skip(long n) throws <a href="java.io.IOException.html#_top_">IOException</a>
</pre>
<dl>
  <dd> Skips specified number of bytes of uncompressed data.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> n - the number of bytes to skip
    <dt> <b>Returns:</b>
    <dd> the actual number of bytes skipped.
    <dt> <b>Throws:</b> <a href="java.io.IOException.html#_top_">IOException</a>
    <dd> if an I/O error has occurred
    <dt> <b>Overrides:</b>
    <dd> <a href="java.io.FilterInputStream.html#skip(long)">skip</a> in class <a href="java.io.FilterInputStream.html#_top_">FilterInputStream</a>
  </dl></dd>
</dl>
<a name="fill()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="fill"><b>fill</b></a>
<pre>
 protected void fill() throws <a href="java.io.IOException.html#_top_">IOException</a>
</pre>
<dl>
  <dd> Fills input buffer with more data to decompress.
<p>
  <dd><dl>
    <dt> <b>Throws:</b> <a href="java.io.IOException.html#_top_">IOException</a>
    <dd> if an I/O error has occurred
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.util.zip.html">This Package</a>  <a href="java.util.zip.Inflater.html#_top_">Previous</a>  <a href="java.util.zip.ZipEntry.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
</body>
</html>
