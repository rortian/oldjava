<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sat Aug 30 15:44:46 PDT 1997 -->
<title>
  Class java.awt.image.ReplicateScaleFilter
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.awt.image.html">This Package</a>  <a href="java.awt.image.RGBImageFilter.html#_top_">Previous</a>  <a href="Package-java.awt.image.html">Next</a>  <a href="a-names.html">Index</a></pre>
<hr>
<h1>
  Class java.awt.image.ReplicateScaleFilter
</h1>
<pre>
<a href="java.lang.Object.html#_top_">java.lang.Object</a>
   |
   +----<a href="java.awt.image.ImageFilter.html#_top_">java.awt.image.ImageFilter</a>
           |
           +----java.awt.image.ReplicateScaleFilter
</pre>
<hr>
<dl>
  <dt> public class <b>ReplicateScaleFilter</b>
  <dt> extends <a href="java.awt.image.ImageFilter.html#_top_">ImageFilter</a>
</dl>
An ImageFilter class for scaling images using the simplest algorithm.
 This class extends the basic ImageFilter Class to scale an existing
 image and provide a source for a new image containing the resampled
 image.  The pixels in the source image are sampled to produce pixels
 for an image of the specified size by replicating rows and columns of
 pixels to scale up or omitting rows and columns of pixels to scale
 down.
 It is meant to be used in conjunction with a FilteredImageSource
 object to produce scaled versions of existing images.
<p>
<dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.FilteredImageSource.html#_top_">FilteredImageSource</a>, <a href="java.awt.image.ImageFilter.html#_top_">ImageFilter</a>
</dl>
<hr>
<a name="index"></a>
<h2>
  <img src="images/variable-index.gif" width=207 height=38 alt="Variable Index">
</h2>
<dl>
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#destHeight"><b>destHeight</b></a>
  <dd> 
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#destWidth"><b>destWidth</b></a>
  <dd> 
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#outpixbuf"><b>outpixbuf</b></a>
  <dd> 
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#srccols"><b>srccols</b></a>
  <dd> 
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#srcHeight"><b>srcHeight</b></a>
  <dd> 
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#srcrows"><b>srcrows</b></a>
  <dd> 
  <dt> <img src="images/magenta-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#srcWidth"><b>srcWidth</b></a>
  <dd> 
</dl>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#ReplicateScaleFilter(int, int)"><b>ReplicateScaleFilter</b></a>(int, int)
  <dd>  Constructs a ReplicateScaleFilter that scales the pixels from
 its source Image as specified by the width and height parameters.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setDimensions(int, int)"><b>setDimensions</b></a>(int, int)
  <dd>  Override the dimensions of the source image and pass the dimensions
 of the new scaled size to the ImageConsumer.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setPixels(int, int, int, int, java.awt.image.ColorModel, byte[], int, int)"><b>setPixels</b></a>(int, int, int, int, ColorModel, byte[], int, int)
  <dd>  Choose which rows and columns of the delivered byte pixels are
 needed for the destination scaled image and pass through just
 those rows and columns that are needed, replicated as necessary.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setPixels(int, int, int, int, java.awt.image.ColorModel, int[], int, int)"><b>setPixels</b></a>(int, int, int, int, ColorModel, int[], int, int)
  <dd>  Choose which rows and columns of the delivered int pixels are
 needed for the destination scaled image and pass through just
 those rows and columns that are needed, replicated as necessary.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setProperties(java.util.Hashtable)"><b>setProperties</b></a>(Hashtable)
  <dd>  Passes along the properties from the source object after adding a
 property indicating the scale applied.
</dl>
<a name="variables"></a>
<h2>
  <img src="images/variables.gif" width=153 height=38 alt="Variables">
</h2>
<a name="srcWidth"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>srcWidth</b>
<pre>
 protected int srcWidth
</pre>
<a name="srcHeight"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>srcHeight</b>
<pre>
 protected int srcHeight
</pre>
<a name="destWidth"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>destWidth</b>
<pre>
 protected int destWidth
</pre>
<a name="destHeight"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>destHeight</b>
<pre>
 protected int destHeight
</pre>
<a name="srcrows"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>srcrows</b>
<pre>
 protected int srcrows[]
</pre>
<a name="srccols"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>srccols</b>
<pre>
 protected int srccols[]
</pre>
<a name="outpixbuf"><img src="images/magenta-ball.gif" width=12 height=12 alt=" o "></a>
<b>outpixbuf</b>
<pre>
 protected <a href="java.lang.Object.html#_top_">Object</a> outpixbuf
</pre>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="ReplicateScaleFilter"></a>
<a name="ReplicateScaleFilter(int, int)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>ReplicateScaleFilter</b>
<pre>
 public ReplicateScaleFilter(int width,
                             int height)
</pre>
<dl>
  <dd> Constructs a ReplicateScaleFilter that scales the pixels from
 its source Image as specified by the width and height parameters.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> width - the target width to scale the image
    <dd> height - the target height to scale the image
  </dl></dd>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="setProperties(java.util.Hashtable)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setProperties"><b>setProperties</b></a>
<pre>
 public void setProperties(<a href="java.util.Hashtable.html#_top_">Hashtable</a> props)
</pre>
<dl>
  <dd> Passes along the properties from the source object after adding a
 property indicating the scale applied.
<p>
  <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> <a href="java.awt.image.ImageFilter.html#setProperties(java.util.Hashtable)">setProperties</a> in class <a href="java.awt.image.ImageFilter.html#_top_">ImageFilter</a>
  </dl></dd>
</dl>
<a name="setDimensions(int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setDimensions"><b>setDimensions</b></a>
<pre>
 public void setDimensions(int w,
                           int h)
</pre>
<dl>
  <dd> Override the dimensions of the source image and pass the dimensions
 of the new scaled size to the ImageConsumer.
<p>
  <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> <a href="java.awt.image.ImageFilter.html#setDimensions(int, int)">setDimensions</a> in class <a href="java.awt.image.ImageFilter.html#_top_">ImageFilter</a>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a>
  </dl></dd>
</dl>
<a name="setPixels(int, int, int, int, java.awt.image.ColorModel, byte[], int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setPixels"><b>setPixels</b></a>
<pre>
 public void setPixels(int x,
                       int y,
                       int w,
                       int h,
                       <a href="java.awt.image.ColorModel.html#_top_">ColorModel</a> model,
                       byte pixels[],
                       int off,
                       int scansize)
</pre>
<dl>
  <dd> Choose which rows and columns of the delivered byte pixels are
 needed for the destination scaled image and pass through just
 those rows and columns that are needed, replicated as necessary.
<p>
  <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> <a href="java.awt.image.ImageFilter.html#setPixels(int, int, int, int, java.awt.image.ColorModel, byte[], int, int)">setPixels</a> in class <a href="java.awt.image.ImageFilter.html#_top_">ImageFilter</a>
  </dl></dd>
</dl>
<a name="setPixels(int, int, int, int, java.awt.image.ColorModel, int[], int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setPixels"><b>setPixels</b></a>
<pre>
 public void setPixels(int x,
                       int y,
                       int w,
                       int h,
                       <a href="java.awt.image.ColorModel.html#_top_">ColorModel</a> model,
                       int pixels[],
                       int off,
                       int scansize)
</pre>
<dl>
  <dd> Choose which rows and columns of the delivered int pixels are
 needed for the destination scaled image and pass through just
 those rows and columns that are needed, replicated as necessary.
<p>
  <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> <a href="java.awt.image.ImageFilter.html#setPixels(int, int, int, int, java.awt.image.ColorModel, int[], int, int)">setPixels</a> in class <a href="java.awt.image.ImageFilter.html#_top_">ImageFilter</a>
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.awt.image.html">This Package</a>  <a href="java.awt.image.RGBImageFilter.html#_top_">Previous</a>  <a href="Package-java.awt.image.html">Next</a>  <a href="a-names.html">Index</a></pre>
</body>
</html>
