<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sat Aug 30 15:44:46 PDT 1997 -->
<title>
  Class java.awt.image.FilteredImageSource
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.awt.image.html">This Package</a>  <a href="java.awt.image.DirectColorModel.html#_top_">Previous</a>  <a href="java.awt.image.ImageFilter.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
<hr>
<h1>
  Class java.awt.image.FilteredImageSource
</h1>
<pre>
<a href="java.lang.Object.html#_top_">java.lang.Object</a>
   |
   +----java.awt.image.FilteredImageSource
</pre>
<hr>
<dl>
  <dt> public class <b>FilteredImageSource</b>
  <dt> extends <a href="java.lang.Object.html#_top_">Object</a>
  <dt> implements <a href="java.awt.image.ImageProducer.html#_top_">ImageProducer</a>
</dl>
This class is an implementation of the ImageProducer interface which
 takes an existing image and a filter object and uses them to produce
 image data for a new filtered version of the original image.
 Here is an example which filters an image by swapping the red and
 blue compents:
 <pre>
	Image src = getImage("doc:///demo/images/duke/T1.gif");
	ImageFilter colorfilter = new RedBlueSwapFilter();
	Image img = createImage(new FilteredImageSource(src.getSource(),
							colorfilter));
 </pre>
<p>
<dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageProducer.html#_top_">ImageProducer</a>
</dl>
<hr>
<a name="index"></a>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#FilteredImageSource(java.awt.image.ImageProducer, java.awt.image.ImageFilter)"><b>FilteredImageSource</b></a>(ImageProducer, ImageFilter)
  <dd>  Constructs an ImageProducer object from an existing ImageProducer
 and a filter object.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#addConsumer(java.awt.image.ImageConsumer)"><b>addConsumer</b></a>(ImageConsumer)
  <dd>  Adds an ImageConsumer to the list of consumers interested in
 data for this image.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isConsumer(java.awt.image.ImageConsumer)"><b>isConsumer</b></a>(ImageConsumer)
  <dd>  Determines whether an ImageConsumer is on the list of consumers 
 currently interested in data for this image.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#removeConsumer(java.awt.image.ImageConsumer)"><b>removeConsumer</b></a>(ImageConsumer)
  <dd>  Removes an ImageConsumer from the list of consumers interested in
 data for this image.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#requestTopDownLeftRightResend(java.awt.image.ImageConsumer)"><b>requestTopDownLeftRightResend</b></a>(ImageConsumer)
  <dd>  Requests that a given ImageConsumer have the image data delivered
 one more time in top-down, left-right order.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#startProduction(java.awt.image.ImageConsumer)"><b>startProduction</b></a>(ImageConsumer)
  <dd>  Adds an ImageConsumer to the list of consumers interested in
 data for this image, and immediately starts delivery of the
 image data through the ImageConsumer interface.
</dl>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="FilteredImageSource"></a>
<a name="FilteredImageSource(java.awt.image.ImageProducer, java.awt.image.ImageFilter)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>FilteredImageSource</b>
<pre>
 public FilteredImageSource(<a href="java.awt.image.ImageProducer.html#_top_">ImageProducer</a> orig,
                            <a href="java.awt.image.ImageFilter.html#_top_">ImageFilter</a> imgf)
</pre>
<dl>
  <dd> Constructs an ImageProducer object from an existing ImageProducer
 and a filter object.
<p>
  <dd><dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageFilter.html#_top_">ImageFilter</a>, <a href="java.awt.Component.html#createImage">createImage</a>
  </dl></dd>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="addConsumer(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="addConsumer"><b>addConsumer</b></a>
<pre>
 public synchronized void addConsumer(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> Adds an ImageConsumer to the list of consumers interested in
 data for this image.
<p>
  <dd><dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a>
  </dl></dd>
</dl>
<a name="isConsumer(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isConsumer"><b>isConsumer</b></a>
<pre>
 public synchronized boolean isConsumer(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> Determines whether an ImageConsumer is on the list of consumers 
 currently interested in data for this image.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> true if the ImageConsumer is on the list; false otherwise
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a>
  </dl></dd>
</dl>
<a name="removeConsumer(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="removeConsumer"><b>removeConsumer</b></a>
<pre>
 public synchronized void removeConsumer(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> Removes an ImageConsumer from the list of consumers interested in
 data for this image.
<p>
  <dd><dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a>
  </dl></dd>
</dl>
<a name="startProduction(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="startProduction"><b>startProduction</b></a>
<pre>
 public void startProduction(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> Adds an ImageConsumer to the list of consumers interested in
 data for this image, and immediately starts delivery of the
 image data through the ImageConsumer interface.
<p>
  <dd><dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a>
  </dl></dd>
</dl>
<a name="requestTopDownLeftRightResend(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="requestTopDownLeftRightResend"><b>requestTopDownLeftRightResend</b></a>
<pre>
 public void requestTopDownLeftRightResend(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> Requests that a given ImageConsumer have the image data delivered
 one more time in top-down, left-right order.  The request is
 handed to the ImageFilter for further processing, since the
 ability to preserve the pixel ordering depends on the filter.
<p>
  <dd><dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a>
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.awt.image.html">This Package</a>  <a href="java.awt.image.DirectColorModel.html#_top_">Previous</a>  <a href="java.awt.image.ImageFilter.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
</body>
</html>
