<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sat Aug 30 15:44:46 PDT 1997 -->
<title>
  Class java.beans.EventSetDescriptor
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.beans.html">This Package</a>  <a href="java.beans.Beans.html#_top_">Previous</a>  <a href="java.beans.FeatureDescriptor.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
<hr>
<h1>
  Class java.beans.EventSetDescriptor
</h1>
<pre>
<a href="java.lang.Object.html#_top_">java.lang.Object</a>
   |
   +----<a href="java.beans.FeatureDescriptor.html#_top_">java.beans.FeatureDescriptor</a>
           |
           +----java.beans.EventSetDescriptor
</pre>
<hr>
<dl>
  <dt> public class <b>EventSetDescriptor</b>
  <dt> extends <a href="java.beans.FeatureDescriptor.html#_top_">FeatureDescriptor</a>
</dl>
An EventSetDescriptor describes a group of events that a given Java
 bean fires.
 <P>
 The given group of events are all delivered as method calls on a single
 event listener interface, and an event listener object can be registered
 via a call on a registration method supplied by the event source.
<p>
<hr>
<a name="index"></a>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#EventSetDescriptor(java.lang.Class, java.lang.String, java.lang.Class, java.lang.String)"><b>EventSetDescriptor</b></a>(Class, String, Class, String)
  <dd>  This constructor creates an EventSetDescriptor assuming that you are
 following the most simple standard design pattern where a named
 event "fred" is (1) delivered as a call on the single method of
 interface FredListener, (2) has a single argument of type FredEvent,
 and (3) where the FredListener may be registered with a call on an
 addFredListener method of the source component and removed with a
 call on a removeFredListener method.
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#EventSetDescriptor(java.lang.Class, java.lang.String, java.lang.Class, java.lang.String[], java.lang.String, java.lang.String)"><b>EventSetDescriptor</b></a>(Class, String, Class, String[], String, String)
  <dd>  This constructor creates an EventSetDescriptor from scratch using
 string names.
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#EventSetDescriptor(java.lang.String, java.lang.Class, java.lang.reflect.Method[], java.lang.reflect.Method, java.lang.reflect.Method)"><b>EventSetDescriptor</b></a>(String, Class, Method[], Method, Method)
  <dd>  This constructor creates an EventSetDescriptor from scratch using
 java.lang.reflect.Method and java.lang.Class objects.
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#EventSetDescriptor(java.lang.String, java.lang.Class, java.beans.MethodDescriptor[], java.lang.reflect.Method, java.lang.reflect.Method)"><b>EventSetDescriptor</b></a>(String, Class, MethodDescriptor[], Method, Method)
  <dd>  This constructor creates an EventSetDescriptor from scratch using
 java.lang.reflect.MethodDescriptor and java.lang.Class objects.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getAddListenerMethod()"><b>getAddListenerMethod</b></a>()
  <dd> 
 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getListenerMethodDescriptors()"><b>getListenerMethodDescriptors</b></a>()
  <dd> 
 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getListenerMethods()"><b>getListenerMethods</b></a>()
  <dd> 
 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getListenerType()"><b>getListenerType</b></a>()
  <dd> 
 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getRemoveListenerMethod()"><b>getRemoveListenerMethod</b></a>()
  <dd> 
 
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isInDefaultEventSet()"><b>isInDefaultEventSet</b></a>()
  <dd>  Report if an event set is in the "default set".
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isUnicast()"><b>isUnicast</b></a>()
  <dd>  Normally event sources are multicast.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setInDefaultEventSet(boolean)"><b>setInDefaultEventSet</b></a>(boolean)
  <dd>  Mark an event set as being in the "default" set (or not).
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setUnicast(boolean)"><b>setUnicast</b></a>(boolean)
  <dd>  Mark an event set as unicast (or not).
</dl>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="EventSetDescriptor"></a>
<a name="EventSetDescriptor(java.lang.Class, java.lang.String, java.lang.Class, java.lang.String)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>EventSetDescriptor</b>
<pre>
 public EventSetDescriptor(<a href="java.lang.Class.html#_top_">Class</a> sourceClass,
                           <a href="java.lang.String.html#_top_">String</a> eventSetName,
                           <a href="java.lang.Class.html#_top_">Class</a> listenerType,
                           <a href="java.lang.String.html#_top_">String</a> listenerMethodName) throws <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
</pre>
<dl>
  <dd> This constructor creates an EventSetDescriptor assuming that you are
 following the most simple standard design pattern where a named
 event "fred" is (1) delivered as a call on the single method of
 interface FredListener, (2) has a single argument of type FredEvent,
 and (3) where the FredListener may be registered with a call on an
 addFredListener method of the source component and removed with a
 call on a removeFredListener method.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> sourceClass - The class firing the event.
    <dd> eventSetName - The programmatic name of the event.  E.g. "fred".
		Note that this should normally start with a lower-case character.
    <dd> listenerType - The target interface that events
		will get delivered to.
    <dd> listenerMethodName - The method that will get called when the event gets
		delivered to its target listener interface.
    <dt> <b>Throws:</b> <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
    <dd> if an exception occurs during
              introspection.
  </dl></dd>
</dl>
<a name="EventSetDescriptor(java.lang.Class, java.lang.String, java.lang.Class, java.lang.String[], java.lang.String, java.lang.String)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>EventSetDescriptor</b>
<pre>
 public EventSetDescriptor(<a href="java.lang.Class.html#_top_">Class</a> sourceClass,
                           <a href="java.lang.String.html#_top_">String</a> eventSetName,
                           <a href="java.lang.Class.html#_top_">Class</a> listenerType,
                           <a href="java.lang.String.html#_top_">String</a> listenerMethodNames[],
                           <a href="java.lang.String.html#_top_">String</a> addListenerMethodName,
                           <a href="java.lang.String.html#_top_">String</a> removeListenerMethodName) throws <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
</pre>
<dl>
  <dd> This constructor creates an EventSetDescriptor from scratch using
 string names.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> sourceClass - The class firing the event.
    <dd> eventSetName - The programmatic name of the event set.
		Note that this should normally start with a lower-case character.
    <dd> listenerType - The Class of the target interface that events
		will get delivered to.
    <dd> listenerMethodNames - The names of the methods that will get called
		when the event gets delivered to its target listener interface.
    <dd> addListenerMethodName - The name of the method on the event source
		that can be used to register an event listener object.
    <dd> removeListenerMethodName - The name of the method on the event source
		that can be used to de-register an event listener object.
    <dt> <b>Throws:</b> <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
    <dd> if an exception occurs during
              introspection.
  </dl></dd>
</dl>
<a name="EventSetDescriptor(java.lang.String, java.lang.Class, java.lang.reflect.Method[], java.lang.reflect.Method, java.lang.reflect.Method)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>EventSetDescriptor</b>
<pre>
 public EventSetDescriptor(<a href="java.lang.String.html#_top_">String</a> eventSetName,
                           <a href="java.lang.Class.html#_top_">Class</a> listenerType,
                           <a href="java.lang.reflect.Method.html#_top_">Method</a> listenerMethods[],
                           <a href="java.lang.reflect.Method.html#_top_">Method</a> addListenerMethod,
                           <a href="java.lang.reflect.Method.html#_top_">Method</a> removeListenerMethod) throws <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
</pre>
<dl>
  <dd> This constructor creates an EventSetDescriptor from scratch using
 java.lang.reflect.Method and java.lang.Class objects.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> eventSetName - The programmatic name of the event set.
    <dd> listenerType - The Class for the listener interface.
    <dd> listenerMethods - An array of Method objects describing each
		of the event handling methods in the target listener.
    <dd> addListenerMethod - The method on the event source
		that can be used to register an event listener object.
    <dd> removeListenerMethod - The method on the event source
		that can be used to de-register an event listener object.
    <dt> <b>Throws:</b> <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
    <dd> if an exception occurs during
              introspection.
  </dl></dd>
</dl>
<a name="EventSetDescriptor(java.lang.String, java.lang.Class, java.beans.MethodDescriptor[], java.lang.reflect.Method, java.lang.reflect.Method)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>EventSetDescriptor</b>
<pre>
 public EventSetDescriptor(<a href="java.lang.String.html#_top_">String</a> eventSetName,
                           <a href="java.lang.Class.html#_top_">Class</a> listenerType,
                           <a href="java.beans.MethodDescriptor.html#_top_">MethodDescriptor</a> listenerMethodDescriptors[],
                           <a href="java.lang.reflect.Method.html#_top_">Method</a> addListenerMethod,
                           <a href="java.lang.reflect.Method.html#_top_">Method</a> removeListenerMethod) throws <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
</pre>
<dl>
  <dd> This constructor creates an EventSetDescriptor from scratch using
 java.lang.reflect.MethodDescriptor and java.lang.Class objects.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> eventSetName - The programmatic name of the event set.
    <dd> listenerType - The Class for the listener interface.
    <dd> listenerMethodDescriptors - An array of MethodDescriptor objects
		 describing each of the event handling methods in the
           target listener.
    <dd> addListenerMethod - The method on the event source
		that can be used to register an event listener object.
    <dd> removeListenerMethod - The method on the event source
		that can be used to de-register an event listener object.
    <dt> <b>Throws:</b> <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
    <dd> if an exception occurs during
              introspection.
  </dl></dd>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="getListenerType()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getListenerType"><b>getListenerType</b></a>
<pre>
 public <a href="java.lang.Class.html#_top_">Class</a> getListenerType()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The Class object for the target interface that will
 get invoked when the event is fired.
  </dl></dd>
</dl>
<a name="getListenerMethods()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getListenerMethods"><b>getListenerMethods</b></a>
<pre>
 public <a href="java.lang.reflect.Method.html#_top_">Method</a>[] getListenerMethods()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> An array of Method objects for the target methods
 within the target listener interface that will get called when
 events are fired.
  </dl></dd>
</dl>
<a name="getListenerMethodDescriptors()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getListenerMethodDescriptors"><b>getListenerMethodDescriptors</b></a>
<pre>
 public <a href="java.beans.MethodDescriptor.html#_top_">MethodDescriptor</a>[] getListenerMethodDescriptors()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> An array of MethodDescriptor objects for the target methods
 within the target listener interface that will get called when
 events are fired.
  </dl></dd>
</dl>
<a name="getAddListenerMethod()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getAddListenerMethod"><b>getAddListenerMethod</b></a>
<pre>
 public <a href="java.lang.reflect.Method.html#_top_">Method</a> getAddListenerMethod()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The method used to register a listener at the event source.
  </dl></dd>
</dl>
<a name="getRemoveListenerMethod()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getRemoveListenerMethod"><b>getRemoveListenerMethod</b></a>
<pre>
 public <a href="java.lang.reflect.Method.html#_top_">Method</a> getRemoveListenerMethod()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The method used to register a listener at the event source.
  </dl></dd>
</dl>
<a name="setUnicast(boolean)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setUnicast"><b>setUnicast</b></a>
<pre>
 public void setUnicast(boolean unicast)
</pre>
<dl>
  <dd> Mark an event set as unicast (or not).
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> unicast - True if the event set is unicast.
  </dl></dd>
</dl>
<a name="isUnicast()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isUnicast"><b>isUnicast</b></a>
<pre>
 public boolean isUnicast()
</pre>
<dl>
  <dd> Normally event sources are multicast.  However there are some 
 exceptions that are strictly unicast.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> True if the event set is unicast.  Defaults to "false".
  </dl></dd>
</dl>
<a name="setInDefaultEventSet(boolean)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setInDefaultEventSet"><b>setInDefaultEventSet</b></a>
<pre>
 public void setInDefaultEventSet(boolean inDefaultEventSet)
</pre>
<dl>
  <dd> Mark an event set as being in the "default" set (or not).
 By default this is true.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> unicast - True if the event set is unicast.
  </dl></dd>
</dl>
<a name="isInDefaultEventSet()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isInDefaultEventSet"><b>isInDefaultEventSet</b></a>
<pre>
 public boolean isInDefaultEventSet()
</pre>
<dl>
  <dd> Report if an event set is in the "default set".
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> True if the event set is in the "default set".  Defaults to "true".
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.beans.html">This Package</a>  <a href="java.beans.Beans.html#_top_">Previous</a>  <a href="java.beans.FeatureDescriptor.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
</body>
</html>
