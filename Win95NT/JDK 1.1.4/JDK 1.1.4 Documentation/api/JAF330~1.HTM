<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sat Aug 30 15:44:46 PDT 1997 -->
<title>
  Interface java.awt.image.ImageProducer
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.awt.image.html">This Package</a>  <a href="java.awt.image.ImageObserver.html#_top_">Previous</a>  <a href="Package-java.awt.image.html">Next</a>  <a href="a-names.html">Index</a></pre>
<hr>
<h1>
  Interface java.awt.image.ImageProducer
</h1>
<dl>
  <dt> public interface <b>ImageProducer</b>
</dl>
The interface for objects which can produce the image data for Images.
 Each image contains an ImageProducer which is used to reconstruct
 the image whenever it is needed, for example, when a new size of the
 Image is scaled, or when the width or height of the Image is being
 requested.
<p>
<dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a>
</dl>
<hr>
<a name="index"></a>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#addConsumer(java.awt.image.ImageConsumer)"><b>addConsumer</b></a>(ImageConsumer)
  <dd>  This method is used to register an ImageConsumer with the
 ImageProducer for access to the image data during a later
 reconstruction of the Image.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isConsumer(java.awt.image.ImageConsumer)"><b>isConsumer</b></a>(ImageConsumer)
  <dd>  This method determines if a given ImageConsumer object
 is currently registered with this ImageProducer as one
 of its consumers.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#removeConsumer(java.awt.image.ImageConsumer)"><b>removeConsumer</b></a>(ImageConsumer)
  <dd>  This method removes the given ImageConsumer object
 from the list of consumers currently registered to
 receive image data.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#requestTopDownLeftRightResend(java.awt.image.ImageConsumer)"><b>requestTopDownLeftRightResend</b></a>(ImageConsumer)
  <dd>  This method is used by an ImageConsumer to request that
 the ImageProducer attempt to resend the image data one
 more time in TOPDOWNLEFTRIGHT order so that higher
 quality conversion algorithms which depend on receiving
 pixels in order can be used to produce a better output
 version of the image.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#startProduction(java.awt.image.ImageConsumer)"><b>startProduction</b></a>(ImageConsumer)
  <dd>  This method both registers the given ImageConsumer object
 as a consumer and starts an immediate reconstruction of
 the image data which will then be delivered to this
 consumer and any other consumer which may have already
 been registered with the producer.
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="addConsumer(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="addConsumer"><b>addConsumer</b></a>
<pre>
 public abstract void addConsumer(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> This method is used to register an ImageConsumer with the
 ImageProducer for access to the image data during a later
 reconstruction of the Image.  The ImageProducer may, at its
 discretion, start delivering the image data to the consumer
 using the ImageConsumer interface immediately, or when the
 next available image reconstruction is triggered by a call
 to the startProduction method.
<p>
  <dd><dl>
    <dt> <b>See Also:</b>
    <dd> <a href="#startProduction">startProduction</a>
  </dl></dd>
</dl>
<a name="isConsumer(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isConsumer"><b>isConsumer</b></a>
<pre>
 public abstract boolean isConsumer(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> This method determines if a given ImageConsumer object
 is currently registered with this ImageProducer as one
 of its consumers.
<p>
</dl>
<a name="removeConsumer(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="removeConsumer"><b>removeConsumer</b></a>
<pre>
 public abstract void removeConsumer(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> This method removes the given ImageConsumer object
 from the list of consumers currently registered to
 receive image data.  It is not considered an error
 to remove a consumer that is not currently registered.
 The ImageProducer should stop sending data to this
 consumer as soon as is feasible.
<p>
</dl>
<a name="startProduction(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="startProduction"><b>startProduction</b></a>
<pre>
 public abstract void startProduction(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> This method both registers the given ImageConsumer object
 as a consumer and starts an immediate reconstruction of
 the image data which will then be delivered to this
 consumer and any other consumer which may have already
 been registered with the producer.  This method differs
 from the addConsumer method in that a reproduction of
 the image data should be triggered as soon as possible.
<p>
  <dd><dl>
    <dt> <b>See Also:</b>
    <dd> <a href="#addConsumer">addConsumer</a>
  </dl></dd>
</dl>
<a name="requestTopDownLeftRightResend(java.awt.image.ImageConsumer)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="requestTopDownLeftRightResend"><b>requestTopDownLeftRightResend</b></a>
<pre>
 public abstract void requestTopDownLeftRightResend(<a href="java.awt.image.ImageConsumer.html#_top_">ImageConsumer</a> ic)
</pre>
<dl>
  <dd> This method is used by an ImageConsumer to request that
 the ImageProducer attempt to resend the image data one
 more time in TOPDOWNLEFTRIGHT order so that higher
 quality conversion algorithms which depend on receiving
 pixels in order can be used to produce a better output
 version of the image.  The ImageProducer is free to
 ignore this call if it cannot resend the data in that
 order.  If the data can be resent, then the ImageProducer
 should respond by executing the following minimum set of
 ImageConsumer method calls:
 <pre>
	ic.setHints(TOPDOWNLEFTRIGHT | < otherhints >);
	ic.setPixels(...);	// As many times as needed
	ic.imageComplete();
 </pre>
<p>
  <dd><dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.image.ImageConsumer.html#setHints">setHints</a>
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.awt.image.html">This Package</a>  <a href="java.awt.image.ImageObserver.html#_top_">Previous</a>  <a href="Package-java.awt.image.html">Next</a>  <a href="a-names.html">Index</a></pre>
</body>
</html>
