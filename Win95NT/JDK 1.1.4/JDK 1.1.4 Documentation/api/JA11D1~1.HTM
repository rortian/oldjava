<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sat Aug 30 15:44:46 PDT 1997 -->
<title>
  Class java.beans.PropertyDescriptor
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.beans.html">This Package</a>  <a href="java.beans.PropertyChangeSupport.html#_top_">Previous</a>  <a href="java.beans.PropertyEditorManager.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
<hr>
<h1>
  Class java.beans.PropertyDescriptor
</h1>
<pre>
<a href="java.lang.Object.html#_top_">java.lang.Object</a>
   |
   +----<a href="java.beans.FeatureDescriptor.html#_top_">java.beans.FeatureDescriptor</a>
           |
           +----java.beans.PropertyDescriptor
</pre>
<hr>
<dl>
  <dt> public class <b>PropertyDescriptor</b>
  <dt> extends <a href="java.beans.FeatureDescriptor.html#_top_">FeatureDescriptor</a>
</dl>
A PropertyDescriptor describes one property that a Java Bean
 exports via a pair of accessor methods.
<p>
<hr>
<a name="index"></a>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#PropertyDescriptor(java.lang.String, java.lang.Class)"><b>PropertyDescriptor</b></a>(String, Class)
  <dd>  Constructs a PropertyDescriptor for a property that follows
 the standard Java convention by having getFoo and setFoo 
 accessor methods.
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#PropertyDescriptor(java.lang.String, java.lang.Class, java.lang.String, java.lang.String)"><b>PropertyDescriptor</b></a>(String, Class, String, String)
  <dd>  This constructor takes the name of a simple property, and method
 names for reading and writing the property.
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#PropertyDescriptor(java.lang.String, java.lang.reflect.Method, java.lang.reflect.Method)"><b>PropertyDescriptor</b></a>(String, Method, Method)
  <dd>  This constructor takes the name of a simple property, and Method
 objects for reading and writing the property.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getPropertyEditorClass()"><b>getPropertyEditorClass</b></a>()
  <dd>  
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getPropertyType()"><b>getPropertyType</b></a>()
  <dd>  
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getReadMethod()"><b>getReadMethod</b></a>()
  <dd>  
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getWriteMethod()"><b>getWriteMethod</b></a>()
  <dd>  
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isBound()"><b>isBound</b></a>()
  <dd>  Updates to "bound" properties will cause a "PropertyChange" event to
 get fired when the property is changed.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#isConstrained()"><b>isConstrained</b></a>()
  <dd>  Attempted updates to "Constrained" properties will cause a "VetoableChange"
 event to get fired when the property is changed.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setBound(boolean)"><b>setBound</b></a>(boolean)
  <dd>  Updates to "bound" properties will cause a "PropertyChange" event to 
 get fired when the property is changed.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setConstrained(boolean)"><b>setConstrained</b></a>(boolean)
  <dd>  Attempted updates to "Constrained" properties will cause a "VetoableChange"
 event to get fired when the property is changed.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setPropertyEditorClass(java.lang.Class)"><b>setPropertyEditorClass</b></a>(Class)
  <dd>  Normally PropertyEditors will be found using the PropertyEditorManager.
</dl>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="PropertyDescriptor"></a>
<a name="PropertyDescriptor(java.lang.String, java.lang.Class)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>PropertyDescriptor</b>
<pre>
 public PropertyDescriptor(<a href="java.lang.String.html#_top_">String</a> propertyName,
                           <a href="java.lang.Class.html#_top_">Class</a> beanClass) throws <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
</pre>
<dl>
  <dd> Constructs a PropertyDescriptor for a property that follows
 the standard Java convention by having getFoo and setFoo 
 accessor methods.  Thus if the argument name is "fred", it will
 assume that the reader method is "getFred" and the writer method 
 is "setFred".  Note that the property name should start with a lower
 case character, which will be capitalized in the method names.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> propertyName - The programmatic name of the property.
    <dd> beanClass - The Class object for the target bean.  For
		example sun.beans.OurButton.class.
    <dt> <b>Throws:</b> <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
    <dd> if an exception occurs during
              introspection.
  </dl></dd>
</dl>
<a name="PropertyDescriptor(java.lang.String, java.lang.Class, java.lang.String, java.lang.String)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>PropertyDescriptor</b>
<pre>
 public PropertyDescriptor(<a href="java.lang.String.html#_top_">String</a> propertyName,
                           <a href="java.lang.Class.html#_top_">Class</a> beanClass,
                           <a href="java.lang.String.html#_top_">String</a> getterName,
                           <a href="java.lang.String.html#_top_">String</a> setterName) throws <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
</pre>
<dl>
  <dd> This constructor takes the name of a simple property, and method
 names for reading and writing the property.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> propertyName - The programmatic name of the property.
    <dd> beanClass - The Class object for the target bean.  For
		example sun.beans.OurButton.class.
    <dd> getterName - The name of the method used for reading the property
		 value.  May be null if the property is write-only.
    <dd> setterName - The name of the method used for writing the property
		 value.  May be null if the property is read-only.
    <dt> <b>Throws:</b> <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
    <dd> if an exception occurs during
              introspection.
  </dl></dd>
</dl>
<a name="PropertyDescriptor(java.lang.String, java.lang.reflect.Method, java.lang.reflect.Method)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>PropertyDescriptor</b>
<pre>
 public PropertyDescriptor(<a href="java.lang.String.html#_top_">String</a> propertyName,
                           <a href="java.lang.reflect.Method.html#_top_">Method</a> getter,
                           <a href="java.lang.reflect.Method.html#_top_">Method</a> setter) throws <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
</pre>
<dl>
  <dd> This constructor takes the name of a simple property, and Method
 objects for reading and writing the property.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> propertyName - The programmatic name of the property.
    <dd> getter - The method used for reading the property value.
		May be null if the property is write-only.
    <dd> setter - The method used for writing the property value.
		May be null if the property is read-only.
    <dt> <b>Throws:</b> <a href="java.beans.IntrospectionException.html#_top_">IntrospectionException</a>
    <dd> if an exception occurs during
              introspection.
  </dl></dd>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="getPropertyType()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getPropertyType"><b>getPropertyType</b></a>
<pre>
 public <a href="java.lang.Class.html#_top_">Class</a> getPropertyType()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The Java type info for the property.  Note that
 the "Class" object may describe a built-in Java type such as "int".
 The result may be "null" if this is an indexed property that
 does not support non-indexed access.
 <p>
 This is the type that will be returned by the ReadMethod.
  </dl></dd>
</dl>
<a name="getReadMethod()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getReadMethod"><b>getReadMethod</b></a>
<pre>
 public <a href="java.lang.reflect.Method.html#_top_">Method</a> getReadMethod()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The method that should be used to read the property value.
 May return null if the property can't be read.
  </dl></dd>
</dl>
<a name="getWriteMethod()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getWriteMethod"><b>getWriteMethod</b></a>
<pre>
 public <a href="java.lang.reflect.Method.html#_top_">Method</a> getWriteMethod()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The method that should be used to write the property value.
 May return null if the property can't be written.
  </dl></dd>
</dl>
<a name="isBound()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isBound"><b>isBound</b></a>
<pre>
 public boolean isBound()
</pre>
<dl>
  <dd> Updates to "bound" properties will cause a "PropertyChange" event to
 get fired when the property is changed.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> True if this is a bound property.
  </dl></dd>
</dl>
<a name="setBound(boolean)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setBound"><b>setBound</b></a>
<pre>
 public void setBound(boolean bound)
</pre>
<dl>
  <dd> Updates to "bound" properties will cause a "PropertyChange" event to 
 get fired when the property is changed.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> bound - True if this is a bound property.
  </dl></dd>
</dl>
<a name="isConstrained()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="isConstrained"><b>isConstrained</b></a>
<pre>
 public boolean isConstrained()
</pre>
<dl>
  <dd> Attempted updates to "Constrained" properties will cause a "VetoableChange"
 event to get fired when the property is changed.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> True if this is a constrained property.
  </dl></dd>
</dl>
<a name="setConstrained(boolean)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setConstrained"><b>setConstrained</b></a>
<pre>
 public void setConstrained(boolean constrained)
</pre>
<dl>
  <dd> Attempted updates to "Constrained" properties will cause a "VetoableChange"
 event to get fired when the property is changed.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> constrained - True if this is a constrained property.
  </dl></dd>
</dl>
<a name="setPropertyEditorClass(java.lang.Class)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setPropertyEditorClass"><b>setPropertyEditorClass</b></a>
<pre>
 public void setPropertyEditorClass(<a href="java.lang.Class.html#_top_">Class</a> propertyEditorClass)
</pre>
<dl>
  <dd> Normally PropertyEditors will be found using the PropertyEditorManager.
 However if for some reason you want to associate a particular
 PropertyEditor with a given property, then you can do it with
 this method.
<p>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> propertyEditorClass - The Class for the desired PropertyEditor.
  </dl></dd>
</dl>
<a name="getPropertyEditorClass()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getPropertyEditorClass"><b>getPropertyEditorClass</b></a>
<pre>
 public <a href="java.lang.Class.html#_top_">Class</a> getPropertyEditorClass()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> Any explicit PropertyEditor Class that has been registered
		for this property.  Normally this will return "null",
		indicating that no special editor has been registered,
		so the PropertyEditorManager should be used to locate
		a suitable PropertyEditor.
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.beans.html">This Package</a>  <a href="java.beans.PropertyChangeSupport.html#_top_">Previous</a>  <a href="java.beans.PropertyEditorManager.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
</body>
</html>
