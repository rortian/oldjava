<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sat Aug 30 15:44:46 PDT 1997 -->
<title>
  Interface java.awt.image.ImageObserver
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.awt.image.html">This Package</a>  <a href="java.awt.image.ImageConsumer.html#_top_">Previous</a>  <a href="java.awt.image.ImageProducer.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
<hr>
<h1>
  Interface java.awt.image.ImageObserver
</h1>
<dl>
  <dt> public interface <b>ImageObserver</b>
</dl>
An asynchronous update interface for receiving notifications about
 Image information as the Image is constructed.
<p>
<hr>
<a name="index"></a>
<h2>
  <img src="images/variable-index.gif" width=207 height=38 alt="Variable Index">
</h2>
<dl>
  <dt> <img src="images/blue-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#ABORT"><b>ABORT</b></a>
  <dd>  An image which was being tracked asynchronously was aborted before
 production was complete.
  <dt> <img src="images/blue-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#ALLBITS"><b>ALLBITS</b></a>
  <dd>  A static image which was previously drawn is now complete and can
 be drawn again in its final form.
  <dt> <img src="images/blue-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#ERROR"><b>ERROR</b></a>
  <dd>  An image which was being tracked asynchronously has encountered
 an error.
  <dt> <img src="images/blue-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#FRAMEBITS"><b>FRAMEBITS</b></a>
  <dd>  Another complete frame of a multi-frame image which was previously
 drawn is now available to be drawn again.
  <dt> <img src="images/blue-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#HEIGHT"><b>HEIGHT</b></a>
  <dd>  The height of the base image is now available and can be taken
 from the height argument to the imageUpdate callback method.
  <dt> <img src="images/blue-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#PROPERTIES"><b>PROPERTIES</b></a>
  <dd>  The properties of the image are now available.
  <dt> <img src="images/blue-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#SOMEBITS"><b>SOMEBITS</b></a>
  <dd>  More pixels needed for drawing a scaled variation of the image
 are available.
  <dt> <img src="images/blue-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#WIDTH"><b>WIDTH</b></a>
  <dd>  The width of the base image is now available and can be taken
 from the width argument to the imageUpdate callback method.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#imageUpdate(java.awt.Image, int, int, int, int, int)"><b>imageUpdate</b></a>(Image, int, int, int, int, int)
  <dd>  This method is called when information about an image which was
 previously requested using an asynchronous interface becomes
 available.
</dl>
<a name="variables"></a>
<h2>
  <img src="images/variables.gif" width=153 height=38 alt="Variables">
</h2>
<a name="WIDTH"><img src="images/blue-ball.gif" width=12 height=12 alt=" o "></a>
<b>WIDTH</b>
<pre>
 public static final int WIDTH
</pre>
<dl>
  <dd> The width of the base image is now available and can be taken
 from the width argument to the imageUpdate callback method.<p>
  <dd><dl> 
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.Image.html#getWidth">getWidth</a>, <a href="#imageUpdate">imageUpdate</a>
  </dl></dd>
</dl>
<a name="HEIGHT"><img src="images/blue-ball.gif" width=12 height=12 alt=" o "></a>
<b>HEIGHT</b>
<pre>
 public static final int HEIGHT
</pre>
<dl>
  <dd> The height of the base image is now available and can be taken
 from the height argument to the imageUpdate callback method.<p>
  <dd><dl> 
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.Image.html#getHeight">getHeight</a>, <a href="#imageUpdate">imageUpdate</a>
  </dl></dd>
</dl>
<a name="PROPERTIES"><img src="images/blue-ball.gif" width=12 height=12 alt=" o "></a>
<b>PROPERTIES</b>
<pre>
 public static final int PROPERTIES
</pre>
<dl>
  <dd> The properties of the image are now available.<p>
  <dd><dl> 
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.Image.html#getProperty">getProperty</a>, <a href="#imageUpdate">imageUpdate</a>
  </dl></dd>
</dl>
<a name="SOMEBITS"><img src="images/blue-ball.gif" width=12 height=12 alt=" o "></a>
<b>SOMEBITS</b>
<pre>
 public static final int SOMEBITS
</pre>
<dl>
  <dd> More pixels needed for drawing a scaled variation of the image
 are available.  The bounding box of the new pixels can be taken
 from the x, y, width, and height arguments to the imageUpdate
 callback method.<p>
  <dd><dl> 
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.Graphics.html#drawImage">drawImage</a>, <a href="#imageUpdate">imageUpdate</a>
  </dl></dd>
</dl>
<a name="FRAMEBITS"><img src="images/blue-ball.gif" width=12 height=12 alt=" o "></a>
<b>FRAMEBITS</b>
<pre>
 public static final int FRAMEBITS
</pre>
<dl>
  <dd> Another complete frame of a multi-frame image which was previously
 drawn is now available to be drawn again.  The x, y, width, and height
 arguments to the imageUpdate callback method should be ignored.<p>
  <dd><dl> 
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.Graphics.html#drawImage">drawImage</a>, <a href="#imageUpdate">imageUpdate</a>
  </dl></dd>
</dl>
<a name="ALLBITS"><img src="images/blue-ball.gif" width=12 height=12 alt=" o "></a>
<b>ALLBITS</b>
<pre>
 public static final int ALLBITS
</pre>
<dl>
  <dd> A static image which was previously drawn is now complete and can
 be drawn again in its final form.  The x, y, width, and height
 arguments to the imageUpdate callback method should be ignored.<p>
  <dd><dl> 
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.Graphics.html#drawImage">drawImage</a>, <a href="#imageUpdate">imageUpdate</a>
  </dl></dd>
</dl>
<a name="ERROR"><img src="images/blue-ball.gif" width=12 height=12 alt=" o "></a>
<b>ERROR</b>
<pre>
 public static final int ERROR
</pre>
<dl>
  <dd> An image which was being tracked asynchronously has encountered
 an error.  No further information will become available and
 drawing the image will fail.
 As a convenience, the ABORT flag will be indicated at the same
 time to indicate that the image production was aborted.<p>
  <dd><dl> 
    <dt> <b>See Also:</b>
    <dd> <a href="#imageUpdate">imageUpdate</a>
  </dl></dd>
</dl>
<a name="ABORT"><img src="images/blue-ball.gif" width=12 height=12 alt=" o "></a>
<b>ABORT</b>
<pre>
 public static final int ABORT
</pre>
<dl>
  <dd> An image which was being tracked asynchronously was aborted before
 production was complete.  No more information will become available
 without further action to trigger another image production sequence.
 If the ERROR flag was not also set in this image update, then
 accessing any of the data in the image will restart the production
 again, probably from the beginning.<p>
  <dd><dl> 
    <dt> <b>See Also:</b>
    <dd> <a href="#imageUpdate">imageUpdate</a>
  </dl></dd>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="imageUpdate(java.awt.Image, int, int, int, int, int)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="imageUpdate"><b>imageUpdate</b></a>
<pre>
 public abstract boolean imageUpdate(<a href="java.awt.Image.html#_top_">Image</a> img,
                                     int infoflags,
                                     int x,
                                     int y,
                                     int width,
                                     int height)
</pre>
<dl>
  <dd> This method is called when information about an image which was
 previously requested using an asynchronous interface becomes
 available.  Asynchronous interfaces are method calls such as
 getWidth(ImageObserver) and drawImage(img, x, y, ImageObserver)
 which take an ImageObserver object as an argument.  Those methods
 register the caller as interested either in information about
 the overall image itself (in the case of getWidth(ImageObserver))
 or about an output version of an image (in the case of the
 drawImage(img, x, y, [w, h,] ImageObserver) call).  
 <p>This method
 should return true if further updates are needed or false if the
 required information has been acquired.  The image which was being
 tracked is passed in using the img argument.  Various constants
 are combined to form the infoflags argument which indicates what
 information about the image is now available.  The interpretation
 of the x, y, width, and height arguments depends on the contents
 of the infoflags argument.
<p>
  <dd><dl>
    <dt> <b>See Also:</b>
    <dd> <a href="java.awt.Image.html#getWidth">getWidth</a>, <a href="java.awt.Image.html#getHeight">getHeight</a>, <a href="java.awt.Graphics.html#drawImage">drawImage</a>
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.awt.image.html">This Package</a>  <a href="java.awt.image.ImageConsumer.html#_top_">Previous</a>  <a href="java.awt.image.ImageProducer.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
</body>
</html>
