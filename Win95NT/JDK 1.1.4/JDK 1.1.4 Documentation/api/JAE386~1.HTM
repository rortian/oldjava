<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sat Aug 30 15:44:46 PDT 1997 -->
<title>
  Class java.beans.PropertyChangeEvent
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.beans.html">This Package</a>  <a href="java.beans.ParameterDescriptor.html#_top_">Previous</a>  <a href="java.beans.PropertyChangeSupport.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
<hr>
<h1>
  Class java.beans.PropertyChangeEvent
</h1>
<pre>
<a href="java.lang.Object.html#_top_">java.lang.Object</a>
   |
   +----<a href="java.util.EventObject.html#_top_">java.util.EventObject</a>
           |
           +----java.beans.PropertyChangeEvent
</pre>
<hr>
<dl>
  <dt> public class <b>PropertyChangeEvent</b>
  <dt> extends <a href="java.util.EventObject.html#_top_">EventObject</a>
</dl>
A "PropertyChange" event gets delivered whenever a bean changes a "bound"
 or "constrained" property.  A PropertyChangeEvent object is sent as an
 argument to the PropertyChangeListener and VetoableChangeListener methods.
 <P>
 Normally PropertyChangeEvents are accompanied by the name and the old
 and new value of the changed property.  If the new value is a builtin
 type (such as int or boolean) it must be wrapped as the 
 corresponding java.lang.* Object type (such as Integer or Boolean).
 <P>
 Null values may be provided for the old and the new values if their
 true values are not known.
 <P>
 An event source may send a null object as the name to indicate that an
 arbitrary set of if its properties have changed.  In this case the
 old and new values should also be null.
<p>
<hr>
<a name="index"></a>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#PropertyChangeEvent(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Object)"><b>PropertyChangeEvent</b></a>(Object, String, Object, Object)
  <dd>  
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getNewValue()"><b>getNewValue</b></a>()
  <dd>  
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getOldValue()"><b>getOldValue</b></a>()
  <dd>  
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getPropagationId()"><b>getPropagationId</b></a>()
  <dd>  The "propagationId" field is reserved for future use.
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#getPropertyName()"><b>getPropertyName</b></a>()
  <dd>  
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#setPropagationId(java.lang.Object)"><b>setPropagationId</b></a>(Object)
  <dd>  
</dl>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="PropertyChangeEvent"></a>
<a name="PropertyChangeEvent(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Object)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>PropertyChangeEvent</b>
<pre>
 public PropertyChangeEvent(<a href="java.lang.Object.html#_top_">Object</a> source,
                            <a href="java.lang.String.html#_top_">String</a> propertyName,
                            <a href="java.lang.Object.html#_top_">Object</a> oldValue,
                            <a href="java.lang.Object.html#_top_">Object</a> newValue)
</pre>
<dl>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> source - The bean that fired the event.
    <dd> propertyName - The programmatic name of the property
		that was changed.
    <dd> oldValue - The old value of the property.
    <dd> newValue - The new value of the property.
  </dl></dd>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="getPropertyName()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getPropertyName"><b>getPropertyName</b></a>
<pre>
 public <a href="java.lang.String.html#_top_">String</a> getPropertyName()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The programmatic name of the property that was changed.
		May be null if multiple properties have changed.
  </dl></dd>
</dl>
<a name="getNewValue()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getNewValue"><b>getNewValue</b></a>
<pre>
 public <a href="java.lang.Object.html#_top_">Object</a> getNewValue()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The new value for the property, expressed as an Object.
		May be null if multiple properties have changed.
  </dl></dd>
</dl>
<a name="getOldValue()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getOldValue"><b>getOldValue</b></a>
<pre>
 public <a href="java.lang.Object.html#_top_">Object</a> getOldValue()
</pre>
<dl>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> The old value for the property, expressed as an Object.
		May be null if multiple properties have changed.
  </dl></dd>
</dl>
<a name="setPropagationId(java.lang.Object)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="setPropagationId"><b>setPropagationId</b></a>
<pre>
 public void setPropagationId(<a href="java.lang.Object.html#_top_">Object</a> propagationId)
</pre>
<dl>
  <dd><dl>
    <dt> <b>Parameters:</b>
    <dd> propagationId - The propagationId object for the event.
  </dl></dd>
</dl>
<a name="getPropagationId()"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="getPropagationId"><b>getPropagationId</b></a>
<pre>
 public <a href="java.lang.Object.html#_top_">Object</a> getPropagationId()
</pre>
<dl>
  <dd> The "propagationId" field is reserved for future use.  In Beans 1.0
 the sole requirement is that if a listener catches a PropertyChangeEvent
 and then fires a PropertyChangeEvent of its own, then it should
 make sure that it propagates the propagationId field from its
 incoming event to its outgoing event.
<p>
  <dd><dl>
    <dt> <b>Returns:</b>
    <dd> the propagationId object associated with a bound/constrained
		property update.
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-java.beans.html">This Package</a>  <a href="java.beans.ParameterDescriptor.html#_top_">Previous</a>  <a href="java.beans.PropertyChangeSupport.html#_top_">Next</a>  <a href="a-names.html">Index</a></pre>
</body>
</html>
